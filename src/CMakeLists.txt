
cmake_minimum_required(VERSION 2.8)

INCLUDE(UsePkgConfig)
MESSAGE(STATUS "this is PROJECT_BINARY_DIR:" ${PROJECT_BINARY_DIR})
MESSAGE(STATUS "this is PROJECT_SRC_DIR:" ${PROJECT_SOURCE_DIR})
MESSAGE(STATUS "this is PROJECT_BINARY_DIR:" ${PQSEARCH_BINARY_DIR})
MESSAGE(STATUS "this is PROJECT_SRC_DIR:" ${PQSEARCH_SOURCE_DIR})
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/contrib/surf)
INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/contrib/yael)
INCLUDE_DIRECTORIES("/usr/include/opencv")
SET(BIN_SRC main.cpp pqsearchengine.cpp extracter.cpp model.cpp dataset.cpp database.cpp)
SET(EXTRACTER_SRC extracter_main.cpp )
SET(STABLIZER_SRC stablizer_main.cpp stablizer.cpp config.c)
SET(FILTER_SRC filter.cpp)
SET(DRAW_SRC drawkeypoint.cpp)
SET(TRAIN_SRC train_main.cpp model.cpp dataset.cpp database.cpp)
SET(EXECUTABLE_OUTPUT_PATH ${PROJECT_BINARY_DIR}/bin/)
LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/lib )
#FindPkgConfig
PKGCONFIG(opencv cvIncludeDir cvLibdir cvLinkflags cvFlags)
#PKG_CHECK_MODULES(cv required opencv)
#find_package(opencv )
INCLUDE_DIRECTORIES(${OPENCV_INCLUDE_DIRS} ${cvIncludeDir})
LINK_DIRECTORIES(${PROJECT_SOURCE_DIR}/lib ${OPENCV_LIBRARY_DIRS} ${cvLibdir})
ADD_EXECUTABLE(pqsearch ${BIN_SRC})
ADD_EXECUTABLE(extracter ${EXTRACTER_SRC})
ADD_EXECUTABLE(stablizer ${STABLIZER_SRC})
ADD_EXECUTABLE(draw ${DRAW_SRC})
ADD_EXECUTABLE(filter ${FILTER_SRC})
ADD_EXECUTABLE(pqtrain ${TRAIN_SRC})
TARGET_LINK_LIBRARIES(pqsearch yael surf ${OPENCV_LIBRARIES} ${cvLinkflags})
TARGET_LINK_LIBRARIES(pqtrain yael surf ${OPENCV_LIBRARIES} ${cvLinkflags})
TARGET_LINK_LIBRARIES(extracter surf ${OPENCV_LIBRARIES} ${cvLinkflags})

TARGET_LINK_LIBRARIES(stablizer yael ${OPENCV_LIBRARIES} ${cvLinkflags})
TARGET_LINK_LIBRARIES(draw ${OPENCV_LIBRARIES} ${cvLinkflags})

INSTALL(FILES stablizer.conf DESTINATION ${PROJECT_BINARY_DIR}/)
#SET(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} -O0 -Wall -g -ggdb")
ADD_DEFINITIONS(${cvFlags})
ADD_DEFINITIONS("-g")
#ADD_DEFINITIONS("-g -pg -O2 -lc")
#SET(CMAKE_EXE_LINKER_FLAGS "-pg")
