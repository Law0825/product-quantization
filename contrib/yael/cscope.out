cscope 15 $HOME/workspace/surf/yael_v300/yael               0000634723
	@binheap.c

39 
	~<°dlib.h
>

40 
	~<°dio.h
>

41 
	~<as£π.h
>

42 
	~<°rög.h
>

44 
	~"böhóp.h
"

45 
	~"s‹tög.h
"

48 
size_t
 
	$fböhóp_sizeof
 (
maxk
)

50   (
fböhóp_t
Ë+ 
maxk
 * ( () +  ());

51 
	}
}

54 
	$fböhóp_öô
 (
fböhóp_t
 *
bh
, 
maxk
)

56 
bh
->
k
 = 0;

57 
bh
->
maxk
 = maxk;

60 
bh
->
vÆ
 = (*Ë((*Ëbh +  (
fböhóp_t
)) - 1;

61 
bh
->
œbñ
 = (*Ë((*Ëbh +  (
fböhóp_t
)

62 + 
maxk
 *  (*
bh
->
vÆ
)) - 1;

63 
	}
}

66 
fböhóp_t
 * 
	$fböhóp_√w
 (
maxk
)

68 
bhsize
 = 
	`fböhóp_sizeof
 (
maxk
);

69 
fböhóp_t
 * 
bh
 = (fböhóp_à*Ë
	`mÆloc
 (
bhsize
);

70 
	`fböhóp_öô
 (
bh
,
maxk
);

71  
bh
;

72 
	}
}

74 
	$fböhóp_ª£t
 (
fböhóp_t
 *
bh
)

76 
bh
->
k
 = 0;

77 
	}
}

79 
	$fböhóp_dñëe
 (
fböhóp_t
 * 
bh
)

81 
	`‰ì
 (
bh
);

82 
	}
}

85 
	$fböhóp_p›
 (
fböhóp_t
 * 
bh
)

87 
	`as£π
 (
bh
->
k
 > 0);

89 
vÆ
 = 
bh
->vÆ[bh->
k
];

90 
i
 = 1, 
i1
, 
i2
;

93 
i1
 = 
i
 << 1;

94 
i2
 = 
i1
 + 1;

96 i‡(
i1
 > 
bh
->
k
)

99 i‡(
i2
 =
bh
->
k
 + 1 || bh->
vÆ
[
i1
] > bh->val[i2]) {

100 i‡(
vÆ
 > 
bh
->vÆ[
i1
])

102 
bh
->
vÆ
[
i
] = bh->vÆ[
i1
];

103 
bh
->
œbñ
[
i
] = bh->œbñ[
i1
];

104 
i
 = 
i1
;

107 i‡(
vÆ
 > 
bh
->vÆ[
i2
])

110 
bh
->
vÆ
[
i
] = bh->vÆ[
i2
];

111 
bh
->
œbñ
[
i
] = bh->œbñ[
i2
];

112 
i
 = 
i2
;

116 
bh
->
vÆ
[
i
] = bh->vÆ[bh->
k
];

117 
bh
->
œbñ
[
i
] = bh->œbñ[bh->
k
];

118 
bh
->
k
--;

119 
	}
}

122 
	$fböhóp_push
 (
fböhóp_t
 * 
bh
, 
œbñ
, 
vÆ
)

124 
	`as£π
 (
bh
->
k
 < bh->
maxk
);

126 
i
 = ++
bh
->
k
, 
i_Áthî
;

128 
i
 > 1) {

129 
i_Áthî
 = 
i
 >> 1;

130 i‡(
bh
->
vÆ
[
i_Áthî
] >= val)

133 
bh
->
vÆ
[
i
] = bh->vÆ[
i_Áthî
];

134 
bh
->
œbñ
[
i
] = bh->œbñ[
i_Áthî
];

136 
i
 = 
i_Áthî
;

138 
bh
->
vÆ
[
i
] = val;

139 
bh
->
œbñ
[
i
] =Üabel;

140 
	}
}

143 
	$fböhóp_add
 (
fböhóp_t
 * 
bh
, 
œbñ
, 
vÆ
)

145 i‡(
bh
->
k
 < bh->
maxk
) {

146 
	`fböhóp_push
 (
bh
, 
œbñ
, 
vÆ
);

150 i‡(
vÆ
 < 
bh
->val[1]) {

151 
	`fböhóp_p›
 (
bh
);

152 
	`fböhóp_push
 (
bh
, 
œbñ
, 
vÆ
);

154 
	}
}

157 
	$fböhóp_addn
 (
fböhóp_t
 * 
bh
, 
n
, c⁄° * 
œbñ
, c⁄° * 
v
)

159 
i
;

161 
i
 = 0 ; i < 
n
 && 
bh
->
k
 < bh->
maxk
; i++)

162 if(!
	`i¢™
(
v
[
i
]))

163 
	`fböhóp_push
 (
bh
, 
œbñ
[
i
], 
v
[i]);

165 
lim
=
bh
->
vÆ
[1];

166  ; 
i
 < 
n
; i++) {

167 if(
v
[
i
]<
lim
) {

168 
	`fböhóp_p›
 (
bh
);

169 
	`fböhóp_push
 (
bh
, 
œbñ
[
i
], 
v
[i]);

170 
lim
=
bh
->
vÆ
[1];

173 
	}
}

176 
	$fböhóp_addn_œbñ_ønge
 (
fböhóp_t
 * 
bh
, 
n
, 
œbñ0
, c⁄° * 
v
)

178 
i
;

180 
i
 = 0 ; i < 
n
 && 
bh
->
k
 < bh->
maxk
; i++)

181 if(!
	`i¢™
(
v
[
i
]))

182 
	`fböhóp_push
 (
bh
, 
œbñ0
+
i
, 
v
[i]);

184 
lim
=
bh
->
vÆ
[1];

185  ; 
i
 < 
n
; i++) {

186 if(
v
[
i
]<
lim
) {

187 
	`fböhóp_p›
 (
bh
);

188 
	`fböhóp_push
 (
bh
, 
œbñ0
+
i
, 
v
[i]);

189 
lim
=
bh
->
vÆ
[1];

193 
	}
}

196 
	$cmp_Êﬂts
 (c⁄° * 
v1
, c⁄° * 
v2
)

198 i‡(*(*Ë
v2
 =*(*Ë
v1
)

201  (*(*Ë
v1
 > *(*Ë
v2
) ? 1 : -1;

202 
	}
}

205 
	$fböhóp_s‹t_œbñs
 (
fböhóp_t
 * 
bh
, * 
≥rm
)

207 
i
;

208 
	`fvec_s‹t_ödex
 (
bh
->
vÆ
 + 1, bh->
k
, 
≥rm
);

209 
i
 = 0 ; i < 
bh
->
k
 ; i++)

210 
≥rm
[
i
] = 
bh
->
œbñ
[perm[i]+1];

211 
	}
}

214 
	$fböhóp_s‹t_vÆues
 (
fböhóp_t
 * 
bh
, * 
v
)

216 
	`mem˝y
 (
v
, 
bh
->
vÆ
 + 1, bh->
k
 *  (*v));

217 
	`qs‹t
 (
v
, 
bh
->
k
,  (*v), &
cmp_Êﬂts
);

218 
	}
}

221 
	$fböhóp_s‹t_≥r_œbñs
 (
fböhóp_t
 * 
bh
, * 
≥rm
, *
v
) {

222 
	`ivec_s‹t_ödex
(
bh
->
œbñ
+1, bh->
k
, 
≥rm
);

223 
i
;

224 if(
v
) {

225 
i
=0;i<
bh
->
k
;i++) {

226 
hóµos
 = 
≥rm
[
i
] + 1;

227 
≥rm
[
i
] = 
bh
->
œbñ
[
hóµos
];

228 
v
[
i
] = 
bh
->
vÆ
[
hóµos
];

231 
i
=0;i<
bh
->
k
;i++)

232 
≥rm
[
i
] = 
bh
->
œbñ
[perm[i] + 1];

234 
	}
}

238 
	$fböhóp_s‹t
 (
fböhóp_t
 * 
bh
, * 
≥rm
, *
v
)

240 
i
, 
hóµos
;

242 
	`fvec_s‹t_ödex
 (
bh
->
vÆ
 + 1, bh->
k
, 
≥rm
);

243 
i
 = 0 ; i < 
bh
->
k
 ; i++) {

244 
hóµos
 = 
≥rm
[
i
] + 1;

245 
≥rm
[
i
] = 
bh
->
œbñ
[
hóµos
];

246 
v
[
i
] = 
bh
->
vÆ
[
hóµos
];

248 
	}
}

251 
	$fböhóp_di•œy
 (
fböhóp_t
 * 
bh
)

253 
i
;

254 
	`¥ötf
 ("[√»%d / maxñ = %d] ", 
bh
->
k
, bh->
maxk
);

256 
i
 = 1 ; i <
bh
->
k
 ; i++)

257 
	`¥ötf
 ("%d %.6‡/ ", 
bh
->
œbñ
[
i
], bh->
vÆ
[i]);

258 
	`¥ötf
 ("\n");

259 
	}
}

	@binheap.h

39 #i‚de‡
__böhóp_h


40 
	#__böhóp_h


	)

42 
	~<°dlib.h
>

58 
	sfböhóp_s
 {

59 * 
	mvÆ
;

60 * 
	mœbñ
;

61 
	mk
;

62 
	mmaxk
;

65 
fböhóp_s
 
	tfböhóp_t
;

69 
fböhóp_s
 * 
fböhóp_√w
 (
maxk
);

73 
size_t
 
fböhóp_sizeof
 (
maxk
);

78 
fböhóp_öô
 (
fböhóp_t
 *
bh
, 
maxk
);

81 
fböhóp_dñëe
 (
fböhóp_t
 * 
bh
);

84 
fböhóp_ª£t
 (
fböhóp_t
 *
bh
);

87 
fböhóp_add
 (
fböhóp_t
 * 
bh
, 
œbñ
, 
vÆ
);

90 
fböhóp_p›
 (
fböhóp_t
 * 
bh
);

100 
fböhóp_addn
 (
fböhóp_t
 * 
bh
, 
n
, c⁄° * 
œbñs
, c⁄° * 
v
);

103 
fböhóp_addn_œbñ_ønge
 (
fböhóp_t
 * 
bh
, 
n
, 
œbñ0
, c⁄° * 
v
);

109 
fböhóp_s‹t_œbñs
 (
fböhóp_t
 * 
bh
, * 
≥rm
);

112 
fböhóp_s‹t_vÆues
 (
fböhóp_t
 * 
bh
, * 
v
);

115 
fböhóp_s‹t
 (
fböhóp_t
 * 
bh
, * 
œbñs
, *
v
);

118 
fböhóp_s‹t_≥r_œbñs
 (
fböhóp_t
 * 
bh
, * 
œbñs
, *
v
);

121 
fböhóp_di•œy
 (
fböhóp_t
 * 
bh
);

	@eigs.c

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~<°rög.h
>

42 
	~<m©h.h
>

43 
	~<as£π.h
>

45 
	~"eigs.h
"

46 
	~"ve˘‹.h
"

47 
	~"s‹tög.h
"

48 
	~"machöedïs.h
"

52 
dsyev_
–*
jobz
, *
u∂o
, 
FINTEGER
 *
n
, *
a
, FINTEGER *
lda
,

53 *
w
, *
w‹k
, 
FINTEGER
 *
lw‹k
, FINTEGER *
öfo
 );

55 
dsygv_
(
FINTEGER
 * 
ôy≥
, *
jobz
, *
u∂o
, FINTEGER *
n
, *
a
, FINTEGER *
lda
,

56 *
b
, 
FINTEGER
 *
lbd
, *
w
, *
w‹k
, FINTEGER *
lw‹k
, FINTEGER *
öfo
 );

59 
	tªÆ
;

61 
sgemv_
(c⁄° *
å™s
, 
FINTEGER
 *
m
, FINTEGER *
n
, 
ªÆ
 *
Æpha
,

62 c⁄° 
ªÆ
 *
a
, 
FINTEGER
 *
lda
, c⁄°Ñó»*
x
, FINTEGER *
öcx
,Ñó»*
bëa
,Ñó»*
y
,

63 
FINTEGER
 *
öcy
);

68 
	$eigs_sym
 (
di
, c⁄° * 
m
, * 
eigvÆ
, * 
eigvec
)

70 
i
, 
j
;

71 
FINTEGER
 
d
=
di
;

72 * 
md
 = (*Ë
	`memÆign
 (16,  (*mdË* 
d
 * d);

75 
i
 = 0 ; i < 
d
 ; i++) {

76 
j
 = 0 ; j < 
d
 ; j++)

77 
md
[
i
 * 
d
 + 
j
] = (Ë
m
[i * d + j];

81 
w‹k›t
 = 0;

82 
FINTEGER
 
lw‹k
 = -1, 
öfo
;

84 * 
œmbda
 = (*Ë
	`memÆign
 (16,  (*œmbdaË* 
d
);

85 
	`dsyev_
–"V", "L", &
d
, 
md
, &d, 
œmbda
, &
w‹k›t
, &
lw‹k
, &
öfo
 );

86 
lw‹k
 = (Ë
w‹k›t
;

87 * 
w‹k
 = (*Ë
	`memÆign
 (16, 
lw‹k
 *  (*work));

88 
	`dsyev_
–"V", "L", &
d
, 
md
, &d, 
œmbda
, 
w‹k
, &
lw‹k
, &
öfo
 );

90 i‡(
öfo
 > 0) {

91 
	`Ârötf
 (
°dîr
, "#Éigs_sym:ÖrobÀm whûêcomputögÉigí-ve˘‹s/vÆue†öfo=%ld\n",(Ë
öfo
);

92 
îr‹
;

95 
ƒ
 = 1;

96 
i
 = 0 ; i < 
d
 ; i++) {

97 if(
eigvÆ
)

98 
eigvÆ
[
i
] = (Ë
œmbda
[i];

100 if(
eigvec
)

101 
j
 = 0 ; j < 
d
 ; j++)

102 
eigvec
[
i
 * 
d
 + 
j
] = (Ë(
md
[ò* d + j] / 
ƒ
);

104 
îr‹
:

105 
	`‰ì
 (
md
);

106 
	`‰ì
 (
œmbda
);

107 
	`‰ì
 (
w‹k
);

108  
öfo
;

109 
	}
}

112 
	$geigs_sym
 (
di
, c⁄° * 
a
, c⁄° * 
b
, * 
eigvÆ
, * 
eigvec
)

114 
i
, 
j
;

115 
FINTEGER
 
d
=
di
;

116 * 
ad
 = (*Ë
	`memÆign
 (16,  (*adË* 
d
 * d);

117 * 
bd
 = (*Ë
	`memÆign
 (16,  (*bdË* 
d
 * d);

120 
i
 = 0 ; i < 
d
 ; i++)

121 
j
 = 0 ; j < 
d
 ; j++) {

122 
ad
[
i
 * 
d
 + 
j
] = (Ë
a
[i * d + j];

123 
bd
[
i
 * 
d
 + 
j
] = (Ë
b
[i * d + j];

127 
w‹k›t
 = 0;

128 
FINTEGER
 
lw‹k
 = -1, 
öfo
, 
ôy≥
 = 1;

130 * 
œmbda
 = (*Ë
	`memÆign
 (16,  (*œmbdaË* 
d
);

131 
	`dsygv_
 (&
ôy≥
, "V", "L", &
d
, 
ad
, &d, 
bd
, &d, 
œmbda
, &
w‹k›t
, &
lw‹k
, &
öfo
 );

132 
lw‹k
 = (Ë
w‹k›t
;

133 * 
w‹k
 = (*Ë
	`memÆign
 (16, 
lw‹k
 *  (*work));

134 
	`dsygv_
 (&
ôy≥
, "V", "L", &
d
, 
ad
, &d, 
bd
, &d, 
œmbda
, 
w‹k
, &
lw‹k
, &
öfo
 );

136 i‡(
öfo
 != 0) {

137 
	`Ârötf
 (
°dîr
, "#Éigs_sym:ÖrobÀm whûêcomputögÉigí-ve˘‹s/vÆue†öfo=%ld\n",(Ë
öfo
);

138 
îr‹
;

142 
ƒ
 = 1;

143 
i
 = 0 ; i < 
d
 ; i++) {

145 if(
eigvÆ
)

146 
eigvÆ
[
i
] = (Ë
œmbda
[i];

148 if(
eigvec
)

149 
j
 = 0 ; j < 
d
 ; j++)

150 
eigvec
[
i
 * 
d
 + 
j
] = (Ë(
ad
[ò* d + j] / 
ƒ
);

153 
îr‹
:

154 
	`‰ì
 (
ad
);

155 
	`‰ì
 (
bd
);

156 
	`‰ì
 (
œmbda
);

157 
	`‰ì
 (
w‹k
);

158  
öfo
;

159 
	}
}

163 
	$eigs_ª‹dî
 (
d
, * 
eigvÆ
, * 
eigvec
, 
¸ôîi⁄
)

165 
i
;

166 * 
≥rm
 = 
	`ivec_√w
 (
d
);

168 * 
eigvÆ°
 = 
	`fvec_√w
 (
d
);

169 * 
eigvec°
 = 
	`fvec_√w
 (
d
 * d);

171 
	`fvec_s‹t_ödex
 (
eigvÆ
, 
d
, 
≥rm
);

173 i‡(
¸ôîi⁄
)

174 
i
 = 0 ; i < 
d
 / 2 ; i++) {

175 
tmp
 = 
≥rm
[
i
];

176 
≥rm
[
i
] =Öîm[
d
 - 1 - i];

177 
≥rm
[
d
 - 1 - 
i
] = 
tmp
;

180 
i
 = 0 ; i < 
d
 ; i++) {

181 
eigvÆ°
[
i
] = 
eigvÆ
[
≥rm
[i]];

182 
	`mem˝y
 (
eigvec°
 + 
i
 * 
d
, 
eigvec
 + 
≥rm
[i] * d,  (*eigvecst) * d);

185 
	`mem˝y
 (
eigvÆ
, 
eigvÆ°
, 
d
 *  (*eigval));

186 
	`mem˝y
 (
eigvec
, 
eigvec°
, 
d
 * d *  (*eigvec));

188 
	`‰ì
 (
eigvÆ°
);

189 
	`‰ì
 (
eigvec°
);

190 
	`‰ì
 (
≥rm
);

191 
	}
}

196 
	$eigs_sym_∑π
 (
ni
, c⁄° * 
a
, 
√v
, * 
sout
, * 
vout
) {

197 
FINTEGER
 
n
=
ni
;

198 
¨∑ck_eigs_t
 *
´
=
	`¨∑ck_eigs_begö
(
n
,
√v
);

199 
ªt
=0;

203 *
x
,*
y
;

204 
ªt
=
	`¨∑ck_eigs_°ï
(
´
,&
x
,&
y
);

206 if(
ªt
<0) ;

208 if(
ªt
==0) ;

212 
zîo
=0,
⁄e
=1;

213 
FINTEGER
 
i⁄e
=1;

215 #i‚de‡
_OPENMP


216 
	`sgemv_
("Tøns",&
n
,&n,&
⁄e
,
a
,&n,
x
,&
i⁄e
,&
zîo
,
y
,&ione);

219 
c
, 
¡
 = 
	`cou¡_˝u
();

220 #¥agm®
omp
 
∑øŒñ
 

221 
c
 = 0; c < 
¡
; c++) {

222 
i0
 = 
n
 * 
c
 / 
¡
;

223 
i1
 = 
n
 * (
c
 + 1Ë/ 
¡
;

224 
FINTEGER
 
id
 = 
i1
 - 
i0
;

225 
	`sgemv_
("Tøns", &
n
, &
id
, &
⁄e
, 
a
 + 
i0
 *Ç, &n, 
x
, &
i⁄e
, &
zîo
, 
y
 + i0, &ione);

229 
ªt
=
	`¨∑ck_eigs_íd
(
´
,
sout
,
vout
);

231  
ªt
;

232 
	}
}

237 #ifde‡
HAVE_ARPACK


241 
FINTEGER
 
	töãgî
;

242 
FINTEGER
 
	tlogiˇl
;

244 
sßupd_
 (
öãgî
 *
ido
,c⁄° *
bm©
,öãgî *
n
, c⁄° *
which
,öãgî *
√v
,

245 * 
tﬁ
, *
ªsid
, 
öãgî
 *
ncv
, *
v
, i¡egî *
ldv
,

246 
öãgî
 *
ù¨am
, i¡egî * 
ù¡r
, *
w‹kd
, *
w‹kl
,

247 
öãgî
 *
lw‹kl
, i¡egî *
öfo
 );

250 
s£upd_
 (
logiˇl
 *
rvec
, c⁄° *
howmny
,Üogiˇ»*
£À˘
, *
d
 ,

251 *
z
 ,
öãgî
 *
ldz
 , *
sigma
 , c⁄° *
bm©
,

252 
öãgî
 *
n
 , c⁄° *
which
,öãgî *
√v
, * 
tﬁ
,

253 *
ªsid
, 
öãgî
 *
ncv
, *
v
, i¡egî *
ldv
,

254 
öãgî
 *
ù¨am
, i¡egî * 
ù¡r
, *
w‹kd
, *
w‹kl
,

255 
öãgî
 *
lw‹kl
, i¡egî *
öfo
 );

257 
	s¨∑ck_eigs_t
 {

258 
FINTEGER
 
	mn
,
	m√v
;

260 
FINTEGER
 
	mncv
;

261 
FINTEGER
 
	mido
,
	möfo
;

263 
FINTEGER
 
	mlw‹kl
;

264 *
	mªsid
,*
	mw‹kd
,*
	mw‹kl
;

265 *
	mv
;

266 
FINTEGER
 *
	mù¨am
,*
	mù¡r
;

267 
logiˇl
 *
	m£À˘
;

271 
	#NEWA
(
ty≥
,
n
Ë—y≥*)
	`mÆloc
(—y≥)*“))

	)

273 
¨∑ck_eigs_t
 *
	$¨∑ck_eigs_begö
(
n
,
√v
) {

274 
¨∑ck_eigs_t
 *
´
=
	`NEWA
(arpack_eigs_t,1);

276 
´
->
n
=n;

277 
´
->
√v
=nev;

280 
ncv
 = 
√v
 * 2;

281 
´
->
ncv
 =Çcv;

284 
´
->
lw‹kl
 = 
ncv
*()(ncv+8);

285 
´
->
ªsid
=
	`NEWA
(,
n
);

286 
´
->
w‹kd
=
	`NEWA
(,3*
n
);

287 
´
->
w‹kl
=
	`NEWA
(,´->
lw‹kl
);

289 
´
->
v
=
	`NEWA
(,
n
*()
ncv
);

290 
FINTEGER
 *
ù¨am
=
´
->ù¨am=
	`NEWA
(FINTEGER,11);

291 
´
->
ù¡r
=
	`NEWA
(
FINTEGER
,11);

293 
´
->
öfo
=0;

294 
´
->
ido
=0;

296 
ù¨am
[0]=1;

297 
ù¨am
[2]=
n
;

298 
ù¨am
[6]=1;

300  
´
;

301 
	}
}

304 
	$¨∑ck_eigs_°ï
(
¨∑ck_eigs_t
 *
´
,

305 **
x
, **
y
) {

307 c⁄° *
bm©
="I",*
which
="LM";

309 
tﬁ
=0;

311 
	`sßupd_
(&
´
->
ido
, 
bm©
, &´->
n
, 
which
, &´->
√v
,

312 &
tﬁ
, 
´
->
ªsid
, &´->
ncv
,áe->
v
, &´->
n
,

313 
´
->
ù¨am
,áe->
ù¡r
,áe->
w‹kd
,áe->
w‹kl
, &´->
lw‹kl
,

314 &
´
->
öfo
);

319 if(
´
->
ido
==-1 ||áe->ido==1) {

320 *
x
=
´
->
w‹kd
+´->
ù¡r
[0]-1;

321 *
y
=
´
->
w‹kd
+´->
ù¡r
[1]-1;

325 *
x
=*
y
=
NULL
;

326 if(
´
->
öfo
<0) {

327 
	`Ârötf
(
°dîr
, "¨∑ck_eigs_°ï: sßupd_Éº‹ info=%d\n",
´
->
öfo
);

329  
´
->
öfo
;

333 
	}
}

336 
	$¨∑ck_eigs_íd
(
¨∑ck_eigs_t
 *
´
,

337 * 
sout
, * 
vout
) {

338 
i
,
ªt
=0;

339 
FINTEGER
 
n
=
´
->n,
√v
˜e->√v,
ncv
=ae->ncv;

340 
nc⁄v
;

342 
logiˇl
 *
£À˘
=
	`NEWA
÷ogiˇl,
ncv
);

343 *
s
=
	`NEWA
(,
ncv
*2);

344 *
≥rm
=
	`NEWA
(,
√v
);

346 if(
´
->
öfo
<0) {

347 
ªt
=
´
->
öfo
;

348 
îr‹
;

352 
FINTEGER
 
õº
;

353 
logiˇl
 
rvec
=1;

354 
sigma
;

355 c⁄° *
bm©
="I",*
which
="LM";

356 
tﬁ
=0;

358 
	`s£upd_
(&
rvec
,"AŒ",
£À˘
, 
s
,

359 
´
->
v
,&
n
, &
sigma
, 
bm©
, &n, 
which
, &
√v
,

360 &
tﬁ
, 
´
->
ªsid
, &
ncv
,áe->
v
, &
n
,

361 
´
->
ù¨am
,áe->
ù¡r
,áe->
w‹kd
,áe->
w‹kl
, &´->
lw‹kl
,

362 &
õº
);

364 if(
õº
!=0) {

365 
	`Ârötf
(
°dîr
, "¨∑ck_eigs_íd: s£upd_Éº‹: %d\n",
õº
);

366 
ªt
=
õº
;

367 
îr‹
;

369 
ªt
=
nc⁄v
=
´
->
ù¨am
[4];

370 
	`as£π
(
nc⁄v
<=
√v
);

375 
	`fvec_s‹t_ödex
(
s
,
nc⁄v
,
≥rm
);

377 if(
vout
)

378 
i
=0;i<
nc⁄v
;i++)

379 
	`mem˝y
(
vout
+
n
*()
i
, 
´
->
v
+n*()(
nc⁄v
-1-
≥rm
[i]), ()*n);

381 if(
sout
)

382 
i
=0;i<
nc⁄v
;i++)

383 
sout
[
i
]=
s
[
nc⁄v
-1-
≥rm
[i]];

387 
îr‹
:

388 
	`‰ì
(
£À˘
);

389 
	`‰ì
(
≥rm
);

390 
	`‰ì
(
s
);

392 
	`‰ì
(
´
->
ªsid
);

393 
	`‰ì
(
´
->
w‹kl
);

394 
	`‰ì
(
´
->
w‹kd
);

395 
	`‰ì
(
´
->
ù¨am
);

396 
	`‰ì
(
´
->
ù¡r
);

397 
	`‰ì
(
´
->
v
);

399 
	`‰ì
(
´
);

401  
ªt
;

402 
	}
}

408 
¨∑ck_eigs_t
 *
	$¨∑ck_eigs_begö
(
n
,
√v
) {

409 
	`Ârötf
(
°dîr
,"Error: YaelÇot compiled with Arpack!");

410 
	`ab‹t
();

411 
	}
}

413 
	$¨∑ck_eigs_°ï
(
¨∑ck_eigs_t
 *
´
,

414 **
x
, **
y
) {

415 
	`Ârötf
(
°dîr
,"Error: YaelÇot compiled with Arpack!");

416 
	`ab‹t
();

417 
	}
}

419 
	$¨∑ck_eigs_íd
(
¨∑ck_eigs_t
 *
´
,

420 * 
sout
, * 
vout
) {

421 
	`Ârötf
(
°dîr
,"Error: YaelÇot compiled with Arpack!");

422 
	`ab‹t
();

423 
	}
}

	@eigs.h

39 #i‚de‡
__eigs_h


40 
	#__eigs_h


	)

57 
eigs_sym
 (
d
, c⁄° * 
m
, * 
eigvÆ
, * 
eigvec
);

61 
geigs_sym
 (
d
, c⁄° * 
a
, c⁄° * 
b
, * 
eigvÆ
,

62 * 
eigvec
);

68 
eigs_ª‹dî
 (
d
, * 
eigvÆ
, * 
eigvec
, 
¸ôîi⁄
);

79 
eigs_sym_∑π
 (
d
, c⁄° * 
m
, 
√v
, * 
eigvÆ
, * 
eigvec
);

83 
¨∑ck_eigs_t
 
	t¨∑ck_eigs_t
;

91 
¨∑ck_eigs_t
 *
¨∑ck_eigs_begö
(
n
,
√v
);

100 
¨∑ck_eigs_°ï
(
¨∑ck_eigs_t
 *,

101 **
x_out
, **
y_out
);

108 
¨∑ck_eigs_íd
(
¨∑ck_eigs_t
 *,

109 * 
sout
, * 
vout
);

	@gmm.c

39 
	~<°dlib.h
>

40 
	~<°rög.h
>

41 
	~<m©h.h
>

42 
	~<as£π.h
>

45 
	~"ve˘‹.h
"

46 
	~"m©rix.h
"

47 
	~"kmóns.h
"

48 
	~"¬.h
"

49 
	~"gmm.h
"

50 
	~"s‹tög.h
"

51 
	~"machöedïs.h
"

53 
	~<sys/time.h
>

68 
gmm_t
 * 
	$gmm_√w
 (
d
, 
k
)

70 
gmm_t
 * 
g
 = (gmm_à*Ë
	`mÆloc
 ((*g));

71 
g
->
d
=d;

72 
g
->
k
=k;

73 
g
->
w
 = 
	`fvec_√w
 (
k
);

74 
g
->
mu
 = 
	`fvec_√w
 (
k
 * 
d
);

75 
g
->
sigma
 = 
	`fvec_√w
 (
k
 * 
d
);

77  
g
;

78 
	}
}

81 
	$gmm_dñëe
 (
gmm_t
 * 
g
)

83 
	`‰ì
(
g
->
w
);

84 
	`‰ì
(
g
->
mu
);

85 
	`‰ì
(
g
->
sigma
);

86 
	`‰ì
(
g
);

87 
	}
}

93 
	#ªÆ
 

	)

94 
	#öãgî
 
FINTEGER


	)

96 
sgemm_
 (*
å™ß
, *
å™sb
, 
öãgî
 * 
m
, integer *

97 
n
, 
öãgî
 * 
k
, 
ªÆ
 * 
Æpha
, c⁄°Ñó»* 
a
, i¡egî * 
lda
,

98 c⁄° 
ªÆ
 * 
b
, 
öãgî
 * 
ldb
,Ñó»* 
bëa
,Ñó»* 
c__
,

99 
öãgî
 * 
ldc
);

102 
sgemv_
(*
å™s
, 
öãgî
 *
m
, i¡egî *
n
, 
ªÆ
 *
Æpha
,

103 c⁄° 
ªÆ
 *
a
, 
öãgî
 *
lda
, c⁄°Ñó»*
x
, i¡egî *
öcx
,Ñó»*
bëa
,Ñó»*
y
,

104 
öãgî
 *
öcy
);

106 #unde‡
ªÆ


107 #unde‡
öãgî


110 
	$compuã_sum_dcov
(
ni
,
ki
,
di
,

111 c⁄° *
v
,c⁄° *
mu_ﬁd
,c⁄° *
p
,

112 *
mu
,*
sigma
,*
w
) {

113 
i
,
j
,
l
;

114 
FINTEGER
 
n
=
ni
,
k
=
ki
,
d
=
di
;

116 
j
 = 0 ; j < 
k
 ; j++) {

117 
dtmp
 = 0;

118 
i
 = 0 ; i < 
n
 ; i++Ë
dtmp
 +
p
[ò* 
k
 + 
j
];

119 
w
[
j
] = 
dtmp
;

122 
zîo
=0,
⁄e
=1;

123 
	`sgemm_
("NŸÅøn•o£d","Tøn•o£d",&
d
,&
k
,&
n
,&
⁄e
,
v
,&d,
p
,&k,&
zîo
,
mu
,&d);

125 *
v2
=
	`fvec_√w_˝y
(
v
,
n
*()
d
);

126 
	`fvec_sqr
(
v2
,
n
*()
d
);

128 
	`sgemm_
("NŸÅøn•o£d","Tøn•o£d",&
d
,&
k
,&
n
,&
⁄e
,
v2
,&d,
p
,&k,&
zîo
,
sigma
,&d);

129 
	`‰ì
(
v2
);

131 
j
 = 0 ; j < 
k
 ; j++) {

132 *
sigma_j
=
sigma
+
j
*
d
;

133 c⁄° *
mu_ﬁd_j
=
mu_ﬁd
+
j
*
d
;

134 c⁄° *
mu_j
=
mu
+
j
*
d
;

135 
l
=0;l<
d
;l++) {

136 
sigma_j
[
l
]+=
mu_ﬁd_j
[l]*(mu_ﬁd_j[l]*
w
[
j
]-2*
mu_j
[l]);

140 
	}
}

143 
compuã_sum_dcov_thªad
(
n
,
k
,
d
,

144 c⁄° *
v
,c⁄° *
mu_ﬁd
,c⁄° *
p
,

145 *
mu
,*
sigma
,*
w
,

146 
n_thªad
);

149 
	gmö_sigma
=1e-10;

152 
	$gmm_compuã_∑øms
 (
n
, c⁄° * 
v
, c⁄° * 
p
,

153 
gmm_t
 * 
g
,

154 
Êags
,

155 
n_thªad
)

157 
i
, 
j
;

159 
d
=
g
->d, 
k
=g->k;

160 * 
vtmp
 = 
	`fvec_√w
 (
d
);

161 * 
mu_ﬁd
 = 
	`fvec_√w_˝y
 (
g
->
mu
, 
k
 * 
d
);

162 * 
w_ﬁd
 = 
	`fvec_√w_˝y
 (
g
->
w
, 
k
);

164 
	`fvec_0
 (
g
->
w
, 
k
);

165 
	`fvec_0
 (
g
->
mu
, 
k
 * 
d
);

166 
	`fvec_0
 (
g
->
sigma
, 
k
 * 
d
);

170 
j
 = 0 ; j < 
k
 ; j++) {

171 
dtmp
 = 0;

172 
i
 = 0 ; i < 
n
 ; i++) {

174 
dtmp
 +
p
[
i
 * 
k
 + 
j
];

177 
	`fvec_˝y
 (
vtmp
, 
v
 + 
i
 * 
d
, d);

178 
	`fvec_mul_by
 (
vtmp
, 
d
, 
p
[
i
 * 
k
 + 
j
]);

179 
	`fvec_add
 (
g
->
mu
 + 
j
 * 
d
, 
vtmp
, d);

182 
	`fvec_˝y
 (
vtmp
, 
v
 + 
i
 * 
d
, d);

183 
	`fvec_sub
 (
vtmp
, 
mu_ﬁd
 + 
j
 * 
d
, d);

184 
	`fvec_sqr
 (
vtmp
, 
d
);

185 
	`fvec_mul_by
 (
vtmp
, 
d
, 
p
[
i
 * 
k
 + 
j
]);

186 
	`fvec_add
 (
g
->
sigma
 + 
j
 * 
d
, 
vtmp
, d);

189 
g
->
w
[
j
] = 
dtmp
;

195 if(
n_thªad
<=1)

196 
	`compuã_sum_dcov
(
n
,
k
,
d
,
v
,
mu_ﬁd
,
p
,
g
->
mu
,g->
sigma
,g->
w
);

198 
	`compuã_sum_dcov_thªad
(
n
,
k
,
d
,
v
,
mu_ﬁd
,
p
,
g
->
mu
,g->
sigma
,g->
w
,
n_thªad
);

201 if(
Êags
 & 
GMM_FLAGS_1SIGMA
) {

202 
j
 = 0 ; j < 
k
 ; j++) {

203 *
sigma_j
=
g
->
sigma
+
j
*
d
;

204 
v¨
=
	`fvec_sum
(
sigma_j
,
d
)/d;

205 
	`fvec_£t
(
sigma_j
,
d
,
v¨
);

209 
nz
=0;

210 
i
=0;i<
k
*
d
;i++)

211 if(
g
->
sigma
[
i
]<
mö_sigma
) {

212 
g
->
sigma
[
i
]=
mö_sigma
;

213 
nz
++;

216 if(
nz
Ë
	`¥ötf
("WARN %ld sigm®düg⁄Æ†¨êtoÿsmÆ»(£àtÿ%g)\n",nz,
mö_sigma
);

218 
j
 = 0 ; j < 
k
 ; j++) {

219 
	`fvec_div_by
 (
g
->
mu
 + 
j
 * 
d
, d, g->
w
[j]);

220 
	`fvec_div_by
 (
g
->
sigma
 + 
j
 * 
d
, d, g->
w
[j]);

223 
	`as£π
(
	`föôe
(
	`fvec_sum
(
g
->
mu
, 
k
*
d
)));

225 
	`fvec_n‹mÆize
 (
g
->
w
, 
k
, 1);

227 
	`¥ötf
 ("w = ");

228 
	`fvec_¥öt
 (
g
->
w
, 
k
);

229 
imÁc
 = 
k
 * 
	`fvec_sum_sqr
 (
g
->
w
, k);

230 
	`¥ötf
 (" imÁ¯%.3f\n", 
imÁc
);

232 
	`‰ì
 (
vtmp
);

233 
	`‰ì
 (
w_ﬁd
);

234 
	`‰ì
 (
mu_ﬁd
);

235 
	}
}

239 
ölöe
 
	$sqr
 (
x
)

241  
x
 * x;

242 
	}
}

245 
	#CHECKFINITE
(
a
Ëif(!
	`föôe
◊)Ë{
	`Ârötf
(
°dîr
,"!!!! gmm_compuã_p:ÇŸ föôê" #®"=%gáàlöê%d\n",a,
__LINE__
); 
	`ab‹t
(); };

	)

248 
	$compuã_mahÆ™obis_sqr
(
n
,
k
,
d
,

249 c⁄° *
mu
,c⁄° *
sigma
,

250 c⁄° *
v
,

251 *
p
) {

252 
FINTEGER
 
di
=
d
,
ki
=
k
,
ni
=
n
;

253 
i
, 
j
, 
l
;

255 *
mu2_sums
=
	`fvec_√w
(
k
);

257 
j
 = 0 ; j < 
k
 ; j++) {

258 
dtmp
 = 0;

259 
l
 = 0 ;Ü < 
d
 ;Ü++)

260 
dtmp
 +
	`sqr
(
mu
[
j
 * 
d
 + 
l
]Ë/ 
sigma
[j * d +Ü];

261 
mu2_sums
[
j
]=
dtmp
;

264 
i
 = 0 ; i < 
n
 ; i++)

265 
j
 = 0 ; j < 
k
 ; j++)

266 
p
[
i
 * 
k
 + 
j
]=
mu2_sums
[j];

268 
	`‰ì
(
mu2_sums
);

270 *
v2
=
	`fvec_√w
(
d
*
n
);

271 
i
 = 0 ; i < 
n
*
d
 ; i++)

272 
v2
[
i
]=
v
[i]*v[i];

274 *
öv_sigma
=
	`fvec_√w
(
k
*
d
);

275 
i
 = 0 ; i < 
k
*
d
 ; i++)

276 
öv_sigma
[
i
]=1.0/
sigma
[i];

278 
⁄e
=1;

280 
	`sgemm_
("Tøn•o£d","NŸÅøn•o£d",&
ki
,&
ni
,&
di
,&
⁄e
,
öv_sigma
,&di,
v2
,&di,&⁄e,
p
,&ki);

282 
	`‰ì
(
v2
);

284 *
mu_sigma
=
öv_sigma
;

285 
i
 = 0 ; i < 
k
*
d
 ; i++)

286 
mu_sigma
[
i
]=
mu
[i]/
sigma
[i];

288 
möus_two
=-2;

290 
	`sgemm_
("Tøn•o£d","NŸÅøn•o£d",&
ki
,&
ni
,&
di
,&
möus_two
,
mu_sigma
,&di,
v
,&di,&
⁄e
,
p
,&ki);

292 
	`‰ì
(
mu_sigma
);

294 
	}
}

298 
	$so·max_ªf
(
k
, 
n
, c⁄° *
f
, *
p
, *
c€ffs
) {

299 
i
;

301 
	#F
(
i
,
j
Ë
f
[(iË+ (jË* 
k
]

	)

302 
	#P
(
i
,
j
Ë
p
[(iË+ (jË* 
k
]

	)

304 
i
 = 0; i < 
n
; i++) {

305 
l
;

308 
maxvÆ
 = -1e30;

309 
l
 = 0;Ü < 
k
;Ü++)

310 if(
	`F
(
l
, 
i
Ë> 
maxvÆ
) maxval = F(l, i);

312 
s
 = 0.0;

313 
l
 = 0;Ü < 
k
;Ü++) {

314 
	`P
(
l
, 
i
Ë
	`exp
(
	`F
÷, iË- 
maxvÆ
);

315 
s
 +
	`P
(
l
, 
i
);

318 if(
c€ffs
)

319 
c€ffs
[
i
] = 
	`log
(
s
Ë+ 
maxvÆ
;

321 
is
 = 1.0 / 
s
;

322 
l
 = 0;Ü < 
k
;Ü++)

323 
	`P
(
l
, 
i
Ë*
is
;

326 #unde‡
F


327 #unde‡
P


329 
	}
}

334 
	$gmm_compuã_p
 (
n
, c⁄° * 
v
,

335 c⁄° 
gmm_t
 * 
g
,

336 * 
p
,

337 
Êags
)

339 if(
n
==0) ;

341 
i
, 
j
, 
l
;

342 
dtmp
;

343 
d
=
g
->d, 
k
=g->k;

346 * 
logdëƒ
 = 
	`fvec_√w
(
k
);

348 
j
 = 0 ; j < 
k
 ; j++) {

349 
logdëƒ
[
j
] = -
d
 / 2.0 * 
	`log
 (2 * 
M_PI
);

350 
i
 = 0 ; i < 
d
 ; i++)

351 
logdëƒ
[
j
] -0.5 * 
	`log
 (
g
->
sigma
[j * 
d
 + 
i
]);

359 
i
 = 0 ; i < 
n
 ; i++) {

360 
j
 = 0 ; j < 
k
 ; j++) {

361 
dtmp
 = 0;

362 
l
 = 0 ;Ü < 
d
 ;Ü++) {

363 
dtmp
 +
	`sqr
 (
v
[
i
 * 
d
 + 
l
] - 
g
->
mu
[
j
 * d +Ü]Ë/ g->
sigma
[j * d +Ü];

365 
p
[
i
 * 
k
 + 
j
] = 
dtmp
;

369 
	`compuã_mahÆ™obis_sqr
(
n
,
k
,
d
,
g
->
mu
,g->
sigma
,
v
,
p
);

372 *
lg
 = (*)
	`mÆloc
((Ë* 
k
);

374 if(
Êags
 & 
GMM_FLAGS_W
) {

375 
j
 = 0 ; j < 
k
 ; j++)

376 
lg
[
j
] = 
	`log
(
g
->
w
[j]);

378 
	`mem£t
(
lg
, 0, (Ë* 
k
);

380 
i
 = 0 ; i < 
n
 ; i++) {

382 
j
 = 0 ; j < 
k
 ; j++) {

383 
p
[
i
 * 
k
 + 
j
] = 
logdëƒ
[j] - 0.5 *Ö[ò* k + j] + 
lg
[j];

386 
	`‰ì
(
lg
);

387 
	`so·max_ªf
(
k
, 
n
, 
p
,Ö, 
NULL
);

390 
	}
}

394 
	$gmm_h™dÀ_em±y
(
n
, c⁄° *
v
, 
gmm_t
 *
g
, *
p
) {

395 
d
=
g
->d, 
k
=g->k;

397 
nz
=
	`fvec_cou¡_occuºí˚s
(
p
,
k
*
n
,0);

398 
	`¥ötf
("nb of 0Örobabilities: %ld / (%ld*%d) = %.1f %%\n",

399 
nz
,
k
,
n
,nz*100.0/(k*n));

401 
i
,
j
;

402 *
w
=
	`fvec_√w_0
(
k
);

403 
i
 = 0 ; i < 
n
 ; i++)

404 
j
 = 0 ; j < 
k
 ; j++)

405 
w
[
j
]+=
p
[j+
i
*
k
];

407 
big¥ime
=1000003;

409 
j
 = 0 ; j < 
k
 ; j++Ëif(
w
[j]==0) {

410 
	`¥ötf
("˚¡î %d i†em±y....",
j
);

411 
	`fÊush
(
°dout
);

412 
j2
;

414 
j2
=
j
;

415 
i
=0;i<
k
;i++) {

416 
j2
=(j2+
big¥ime
)%
k
;

417 if(
w
[
j2
]>0) ;

419 
	`as£π
(
i
<
k
 || !"couldÇot find centroidÅo split, veeeery bad input data");

422 
•lô_dim
 = 
	`fvec_¨g_max
 (
g
->
sigma
 + 
d
 * 
j2
, d);

425 
¡
=0,
¬z
=0;

426 
i
=0;i<
n
;i++Ëif(
p
[
j2
+i*
k
]>0) {

427 
¬z
++;

428 if(
v
[
i
*
d
+
•lô_dim
]<
g
->
mu
[
j2
*d+split_dim]) {

429 
p
[
j
+
i
*
k
]ı[
j2
+i*k];

430 
p
[
j2
+
i
*
k
]=0;

431 
¡
++;

435 
	`¥ötf
("split %dát dim %d (variance %g,Åransferred %d/%dÖts)\n",

436 
j2
,
•lô_dim
,
g
->
sigma
[
d
*j2+•lô_dim],
¡
,
¬z
);

438 
w
[
j2
]=-1;

441 
	`‰ì
(
w
);

443 
	}
}

446 
gmm_t
 * 
	$gmm_À¨n
 (
di
, 
ni
, 
ki
, 
nôî
,

447 c⁄° * 
v
, 
¡
, 
£ed
, 
ƒedo
,

448 
Êags
)

450 
d
=
di
,
k
=
ki
,
n
=
ni
;

452 
ôî
, 
ôî_tŸ
 = 0;

453 
ﬁd_key
, 
key
 = 666;

455 
nôî
 = (niter == 0 ? 10000 :Çiter);

458 * 
p
 = 
	`fvec_√w_0
 (
n
 * 
k
);

459 
gmm_t
 * 
g
 = 
	`gmm_√w
 (
d
, 
k
);

462 * 
«ssign
 = 
	`ivec_√w
 (
n
);

463 * 
dis
 = 
	`fvec_√w
 (
n
);

464 
	`kmóns
 (
d
, 
n
, 
k
, 
nôî
, 
v
, 
¡
, 
£ed
, 
ƒedo
, 
g
->
mu
, 
dis
, 
NULL
, 
«ssign
);

466 
	`fÊush
 (
°dîr
);

467 
	`Ârötf
 (
°dîr
, "assign = ");

468 
	`ivec_¥öt
 (
«ssign
, 
k
);

469 
	`Ârötf
 (
°dîr
, "\n");

470 
	`‰ì
 (
«ssign
);

473 
	`fvec_£t
 (
g
->
w
, 
k
, 1.0 / k);

474 
sig
 = 
	`fvec_sum
 (
dis
, 
n
) /Ç;

475 
	`¥ötf
 ("sigm®© inôüliz©i⁄ = %.3f\n", 
sig
);

476 
	`fvec_£t
 (
g
->
sigma
, 
k
 * 
d
, 
sig
);

477 
	`‰ì
 (
dis
);

481 
	`Ârötf
 (
°dout
, "<><><><> GMM <><><><><>\n");

483 if(
Êags
 & 
GMM_FLAGS_PURE_KMEANS
Ë
nôî
=0;

485 
ôî
 = 1 ; iã∏<
nôî
 ; iter++) {

487 
	`gmm_compuã_p_thªad
 (
n
, 
v
, 
g
, 
p
, 
Êags
, 
¡
);

488 
	`fÊush
(
°dout
);

490 
	`gmm_h™dÀ_em±y
(
n
, 
v
, 
g
, 
p
);

492 
	`gmm_compuã_∑øms
 (
n
, 
v
, 
p
, 
g
, 
Êags
, 
¡
);

493 
	`fÊush
(
°dout
);

496 
ôî_tŸ
++;

499 
ﬁd_key
 = 
key
;

500 
key
 = 
	`fvec_sum
 (
g
->
mu
, 
k
 * 
d
);

502 
	`¥ötf
 ("key†%5d: %.6‡-> %.6f\n", 
ôî
, 
ﬁd_key
, 
key
);

503 
	`fÊush
(
°dout
);

505 i‡(
key
 =
ﬁd_key
)

508 
	`Ârötf
 (
°dîr
, "\n");

510 
	`‰ì
(
p
);

512  
g
;

513 
	}
}

515 
size_t
 
	$gmm_fishî_sizeof
(c⁄° 
gmm_t
 * 
g
,
Êags
) {

516 
sz
=0;

517 if(
Êags
 & 
GMM_FLAGS_W
Ë
sz
+=
g
->
k
-1;

518 if(
Êags
 & 
GMM_FLAGS_MU
Ë
sz
+=
g
->
d
*g->
k
;

519 if(
Êags
 & 
GMM_FLAGS_1SIGMA
Ë
sz
+=
g
->
k
;

520 if(
Êags
 & 
GMM_FLAGS_SIGMA
Ë
sz
+=
g
->
d
*g->
k
;

521  
sz
;

522 
	}
}

525 
	$gmm_fishî
(
n
, c⁄° *
v
, c⁄° 
gmm_t
 * 
g
, 
Êags
, *
dp_dœmbda
) {

526 
d
=
g
->d, 
k
=g->k;

527 *
p
 = 
	`fvec_√w
(
n
 * 
k
);

528 
i
,
j
,
l
;

529 
ii
=0;

531 * 
vp
 = 
NULL
;

532 * 
sum_pj
 = 
NULL
;

534 
	`gmm_compuã_p
(
n
,
v
,
g
,
p
,
Êags
 | 
GMM_FLAGS_W
);

536 
	#P
(
j
,
i
Ë
p
[(i)*
k
+(j)]

	)

537 
	#V
(
l
,
i
Ë
v
[(i)*
d
+÷)]

	)

538 
	#MU
(
l
,
j
Ë
g
->
mu
[(j)*
d
+÷)]

	)

539 
	#SIGMA
(
l
,
j
Ë
g
->
sigma
[(j)*
d
+÷)]

	)

540 
	#VP
(
l
,
j
Ë
vp
[(j)*
d
+÷)]

	)

542 if(
Êags
 & 
GMM_FLAGS_W
) {

544 
j
=1;j<
k
;j++) {

545 
accu
=0;

547 
i
=0;i<
n
;i++)

548 
accu
+
	`P
(
j
,
i
)/
g
->
w
[j] - P(0,i)/g->w[0];

551 
f
=
n
*(1/
g
->
w
[
j
]+1/g->w[0]);

553 
dp_dœmbda
[
ii
++]=
accu
/
	`sqπ
(
f
);

557 if(
Êags
 & 
GMM_FLAGS_MU
) {

558 *
dp_dmu
=
dp_dœmbda
+
ii
;

560 
	#DP_DMU
(
l
,
j
Ë
dp_dmu
[(j)*
d
+÷)]

	)

564 
j
=0;j<
k
;j++) {

565 
l
=0;l<
d
;l++) {

566 
accu
=0;

568 
i
=0;i<
n
;i++)

569 
accu
 +
	`P
(
j
,
i
Ë* (
	`V
(
l
,i)-
	`MU
÷,j)Ë/ 
	`SIGMA
(l,j);

571 
	`DP_DMU
(
l
,
j
)=
accu
;

578 
vp
 = 
	`fvec_√w
(
k
 * 
d
);

579 
	`fm©_mul_å
(
v
,
p
,
d
,
k
,
n
,
vp
);

581 
sum_pj
 = 
	`fvec_√w
(
k
);

582 
j
=0;j<
k
;j++) {

583 
sum
=0;

584 
i
=0;i<
n
;i++Ë
sum
 +
	`P
(
j
,i);

585 
sum_pj
[
j
] = 
sum
;

588 
j
=0;j<
k
;j++) {

589 
l
=0;l<
d
;l++)

590 
	`DP_DMU
(
l
,
j
Ë(
	`VP
÷,jË- 
	`MU
÷,jË* 
sum_pj
[j]Ë/ 
	`SIGMA
(l,j);

596 if(!(
Êags
 & 
GMM_FLAGS_NO_NORM
)) {

597 
j
=0;j<
k
;j++)

598 
l
=0;l<
d
;l++) {

599 
nf
 = 
	`sqπ
(
n
*
g
->
w
[
j
]/
	`SIGMA
(
l
,j));

600 if(
nf
 > 0Ë
	`DP_DMU
(
l
,
j
) /=Çf;

603 #unde‡
DP_DMU


604 
ii
+=
d
*
k
;

607 if(
Êags
 & (
GMM_FLAGS_SIGMA
 | 
GMM_FLAGS_1SIGMA
)) {

610 if(
Êags
 & 
GMM_FLAGS_1SIGMA
) {

612 
j
=0;j<
k
;j++) {

613 
accu2
=0;

614 
l
=0;l<
d
;l++) {

615 
accu
=0;

617 
i
=0;i<
n
;i++)

618 
accu
 +
	`P
(
j
,
i
Ë* (
	`sqr
(
	`V
(
l
,i)-
	`MU
÷,j)Ë/ 
	`SIGMA
÷,jË- 1Ë/ 
	`sqπ
(SIGMA(l,j));

620 if(
Êags
 & 
GMM_FLAGS_SIGMA
) {

622 
f
=
Êags
 & 
GMM_FLAGS_NO_NORM
 ? 1.0 : 2*
n
*
g
->
w
[
j
]/
	`SIGMA
(
l
,j);

624 
dp_dœmbda
[
ii
++]=
accu
/
	`sqπ
(
f
);

626 
accu2
+=
accu
;

629 if(
Êags
 & 
GMM_FLAGS_1SIGMA
) {

630 
f
=
Êags
 & 
GMM_FLAGS_NO_NORM
 ? 1.0 : 2*
d
*
n
*
g
->
w
[
j
]/
	`SIGMA
(0,j);

631 
dp_dœmbda
[
ii
++]=
accu2
/
	`sqπ
(
f
);

637 
	`as£π
(
Êags
 & 
GMM_FLAGS_SIGMA
);

638 *
dp_dsigma
 = 
dp_dœmbda
 + 
ii
;

640 if(!
vp
) {

641 
vp
 = 
	`fvec_√w
(
k
 * 
d
);

642 
	`fm©_mul_å
(
v
,
p
,
d
,
k
,
n
,
vp
);

645 if(!
sum_pj
) {

646 
sum_pj
 = 
	`fvec_√w
(
k
);

647 
j
=0;j<
k
;j++) {

648 
sum
=0;

649 
i
=0;i<
n
;i++Ë
sum
 +
	`P
(
j
,i);

650 
sum_pj
[
j
] = 
sum
;

653 *
v2
 = 
	`fvec_√w
(
n
 * 
d
);

654 
i
 = 
n
*
d
-1 ; i >0; i--Ë
v2
[i] = 
v
[i] * v[i];

655 *
v2p
 = 
	`fvec_√w
(
k
 * 
d
);

657 
	`fm©_mul_å
(
v2
,
p
,
d
,
k
,
n
,
v2p
);

658 
	`‰ì
(
v2
);

661 
	#V2P
(
l
,
j
Ë
v2p
[(j)*
d
+÷)]

	)

662 
	#DP_DSIGMA
(
i
,
j
Ë
dp_dsigma
[(i)+(j)*
d
]

	)

663 
j
=0;j<
k
;j++) {

665 
l
=0;l<
d
;l++) {

666 
accu
;

668 
accu
 = 
	`V2P
(
l
, 
j
);

670 
accu
 +
	`VP
(
l
, 
j
Ë* (- 2 * 
	`MU
(l,j));

672 
accu
 +
sum_pj
[
j
] * (
	`sqr
(
	`MU
(
l
,j)Ë- 
	`SIGMA
(l,j));

676 
f
;

678 if(
Êags
 & 
GMM_FLAGS_NO_NORM
) {

679 
f
 = 
	`pow
(
	`SIGMA
(
l
,
j
), -1.5);

681 
f
 = 1 / (
	`SIGMA
(
l
,
j
Ë* 
	`sqπ
(2*
n
*
g
->
w
[j]));

684 
	`DP_DSIGMA
(
l
,
j
Ë
accu
 * 
f
;

690 
	`‰ì
(
v2p
);

692 #unde‡
DP_DSIGMA


693 #unde‡
V2P


694 
ii
 +
d
 * 
k
;

699 
	`as£π
(
ii
==
	`gmm_fishî_sizeof
(
g
,
Êags
));

700 #unde‡
P


701 #unde‡
V


702 #unde‡
MU


703 #unde‡
SIGMA


704 
	`‰ì
(
p
);

705 
	`‰ì
(
sum_pj
);

706 
	`‰ì
(
vp
);

707 
	}
}

711 
	$gmm_¥öt
(c⁄° 
gmm_t
 *
g
) {

712 
	`¥ötf
("gmm (%d gaussün†ö %d dim)=[\n",
g
->
k
,g->
d
);

713 
i
,
j
;

714 
i
=0;i<
g
->
k
;i++) {

715 
	`¥ötf
(" w=%g, mu=[",
g
->
w
[
i
]);

716 
j
=0;j<
g
->
d
;j++Ë
	`¥ötf
("%g ",g->
mu
[
i
*g->d+j]);

717 
	`¥ötf
("], sigma=diag([");

718 
j
=0;j<
g
->
d
;j++Ë
	`¥ötf
("%g ",g->
sigma
[
i
*g->d+j]);

719 
	`¥ötf
("])\n");

721 
	`¥ötf
("]\n");

722 
	}
}

724 
	#WRITEANDCHECK
(
a
,
n
Ëif(
	`fwrôe
◊,(*a),n,
f
)!ÚË{
	`≥º‹
("gmm_wrôe"); 
	`ab‹t
(); }

	)

727 
	$gmm_wrôe
(c⁄° 
gmm_t
 *
g
, 
FILE
 *
f
) {

729 
	`WRITEANDCHECK
(&
g
->
d
,1);

730 
	`WRITEANDCHECK
(&
g
->
k
,1);

731 
	`WRITEANDCHECK
(
g
->
w
,g->
k
);

732 
	`WRITEANDCHECK
(
g
->
mu
,g->
k
*g->
d
);

733 
	`WRITEANDCHECK
(
g
->
sigma
,g->
k
*g->
d
);

735 
	}
}

737 
	#READANDCHECK
(
a
,
n
Ëif(
	`‰ód
◊,(*a),n,
f
)!ÚË{
	`≥º‹
("gmm_ªad"); 
	`ab‹t
(); }

	)

740 
gmm_t
 * 
	$gmm_ªad
(
FILE
 *
f
) {

741 
d
,
k
;

743 
	`READANDCHECK
(&
d
,1);

744 
	`READANDCHECK
(&
k
,1);

746 
gmm_t
 *
g
=
	`gmm_√w
(
d
,
k
);

748 
	`READANDCHECK
(
g
->
w
,g->
k
);

749 
	`READANDCHECK
(
g
->
mu
,g->
k
*g->
d
);

750 
	`READANDCHECK
(
g
->
sigma
,g->
k
*g->
d
);

752  
g
;

753 
	}
}

762 
	mn
;

763 c⁄° * 
	mv
;

764 c⁄° 
gmm_t
 * 
	mg
;

765 * 
	mp
;

766 
	mdo_n‹m
;

767 
	mn_thªad
;

768 } 
	tcompuã_p_∑øms_t
;

771 
	$compuã_p_èsk_fun
 (*
¨g
, 
tid
, 
i
) {

772 
compuã_p_∑øms_t
 *
t
=
¨g
;

773 
n0
=
i
*
t
->
n
/t->
n_thªad
;

774 
n1
=(
i
+1)*
t
->
n
/t->
n_thªad
;

776 
	`gmm_compuã_p
(
n1
-
n0
, 
t
->
v
+t->
g
->
d
*n0,Å->g,Å->
p
+t->g->
k
*n0,Å->
do_n‹m
);

777 
	}
}

779 
	$gmm_compuã_p_thªad
 (
n
, c⁄° * 
v
,

780 c⁄° 
gmm_t
 * 
g
,

781 * 
p
,

782 
do_n‹m
,

783 
n_thªad
) {

784 
compuã_p_∑øms_t
 
t
={
n
,
v
,
g
,
p
,
do_n‹m
,
n_thªad
};

785 
	`compuã_èsks
(
n_thªad
,n_thªad,&
compuã_p_èsk_fun
,&
t
);

786 
	}
}

790 
	mn
,
	mk
,
	md
;

791 c⁄° *
	mv
,*
	mmu_ﬁd
,*
	mp
;

792 *
	mmu
,*
	msigma
,*
	mw
;

793 
	mn_thªad
;

794 } 
	tcompuã_sum_dcov_t
;

797 
	$compuã_sum_dcov_èsk_fun
 (*
¨g
, 
tid
, 
i
) {

798 
compuã_sum_dcov_t
 *
t
=
¨g
;

799 
n0
=
i
*
t
->
n
/t->
n_thªad
;

800 
n1
=(
i
+1)*
t
->
n
/t->
n_thªad
;

802 
	`compuã_sum_dcov
(
n1
-
n0
,
t
->
k
,t->
d
,t->
v
+t->d*n0,

803 
t
->
mu_ﬁd
,t->
p
+
n0
*t->
k
,

804 
t
->
mu
+
i
*t->
d
*t->
k
,

805 
t
->
sigma
+
i
*t->
d
*t->
k
,

806 
t
->
w
+t->
k
*
i
);

808 
	}
}

812 
	$compuã_sum_dcov_thªad
(
ni
,
ki
,
di
,

813 c⁄° *
v
,c⁄° *
mu_ﬁd
,c⁄° *
p
,

814 *
mu
,*
sigma
,*
w
,

815 
n_thªad
) {

816 
n
=
ni
,
d
=
di
,
k
=
ki
;

818 
compuã_sum_dcov_t
 
t
={

819 
n
,
k
,
d
,

820 
v
,
mu_ﬁd
,
p
,

821 
	`fvec_√w
(
n_thªad
*
d
*
k
),

822 
	`fvec_√w
(
n_thªad
*
d
*
k
),

823 
	`fvec_√w
(
n_thªad
*
k
),

824 
n_thªad


827 
	`compuã_èsks
(
n_thªad
,n_thªad,&
compuã_sum_dcov_èsk_fun
,&
t
);

831 
i
;

832 
	`fvec_˝y
(
mu
,
t
.mu,
k
*
d
);

833 
	`fvec_˝y
(
sigma
,
t
.sigma,
k
*
d
);

834 
	`fvec_˝y
(
w
,
t
.w,
k
);

835 
i
=1;i<
n_thªad
;i++) {

836 
	`fvec_add
(
mu
,
t
.mu+
i
*
d
*
k
,d*k);

837 
	`fvec_add
(
sigma
,
t
.sigma+
i
*
d
*
k
,d*k);

838 
	`fvec_add
(
w
,
t
.w+
i
*
k
,k);

840 
	`‰ì
(
t
.
mu
);

841 
	`‰ì
(
t
.
sigma
);

842 
	`‰ì
(
t
.
w
);

843 
	}
}

	@gmm.h

39 #i‚de‡
GMM_H_INCLUDED


40 
	#GMM_H_INCLUDED


	)

57 
	sgmm_s
 {

58 
	md
;

59 
	mk
;

60 * 
	mw
;

61 * 
	mmu
;

62 * 
	msigma
;

63 } 
	tgmm_t
;

66 
	#GMM_FLAGS_W
 1

	)

69 
	#GMM_FLAGS_NO_NORM
 2

	)

72 
	#GMM_FLAGS_1SIGMA
 4

	)

75 
	#GMM_FLAGS_PURE_KMEANS
 32

	)

78 
	#GMM_FLAGS_SIGMA
 8

	)

79 
	#GMM_FLAGS_MU
 16

	)

95 
gmm_t
 * 
gmm_À¨n
 (
d
, 
n
, 
k
, 
nôî
,

96 c⁄° * 
v
, 
¡
, 
£ed
, 
ƒedo
,

97 
Êags
);

101 
gmm_¥öt
(c⁄° 
gmm_t
 *
g
);

104 
gmm_dñëe
 (
gmm_t
 * 
g
);

112 
gmm_compuã_p
 (
n
, c⁄° * 
v
,

113 c⁄° 
gmm_t
 * 
g
,

114 * 
p
,

115 
Êags
);

133 
gmm_fishî
 (
n
, c⁄° *
v
, c⁄° 
gmm_t
 * 
g
,

134 
Êags
, * 
fishî_ve˘‹_out
);

136 
size_t
 
gmm_fishî_sizeof
 (c⁄° 
gmm_t
 * 
g
, 
Êags
);

141 
gmm_wrôe
(c⁄° 
gmm_t
 *
g
, 
FILE
 *
f
);

144 
gmm_t
 * 
gmm_ªad
 (
FILE
 *
f
);

148 
gmm_compuã_p_thªad
 (
n
, c⁄° * 
v
,

149 c⁄° 
gmm_t
 * 
g
,

150 * 
p
,

151 
Êags
,

152 
n_thªad
);

	@hkm.c

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~<°rög.h
>

42 
	~<as£π.h
>

43 
	~<m©h.h
>

45 
	~"ve˘‹.h
"

46 
	~"¬.h
"

47 
	~"kmóns.h
"

48 
	~"s‹tög.h
"

49 
	~"machöedïs.h
"

50 
	~"hkm.h
"

56 
hkm_t
 * 
	$hkm_√w
 (
d
, 
∆evñ
, 
bf
)

58 
l
, 
k
 = 1;

59 
hkm_t
 *
hkm
 = (hkm_à*Ë
	`mÆloc
 ( (*hkm));

60 
hkm
->
∆evñ
 =Çlevel;

61 
hkm
->
bf
 = bf;

62 
hkm
->
d
 = d;

63 
hkm
->
˚¡roids
 = (**Ë
	`mÆloc
 (
∆evñ
 *  (*hkm->centroids));

65 
l
 = 0 ;Ü < 
∆evñ
 ;Ü++) {

66 
hkm
->
˚¡roids
[
l
] = 
	`fvec_√w
 (
k
 * 
bf
 * 
d
);

67 
k
 *
bf
;

69 
hkm
->
k
 = k;

70  
hkm
;

71 
	}
}

74 
hkm_t
 *
	$hkm_À¨n
 (
n
, 
d
, 
∆evñ
, 
bf
,

75 c⁄° *
poöts
, 
nb_ôî_max
, 
¡
, 
vîbo£
,

76 **
˛u°_assign_out
)

78 
i
, 
l
, 
∑ª¡
, 
k
 = 1;

79 
hkm_t
 *
hkm
 = 
	`hkm_√w
 (
d
, 
∆evñ
, 
bf
);

82 *
node_assign
 = 
	`ˇŒoc
 ( (), 
n
);

85 *
v
 = 
	`fvec_√w
 (
n
 * 
d
);

88 
l
 = 0;Ü < 
∆evñ
;Ü++) {

94 *
node_assign_idx
 = 
	`mÆloc
 ( (*node_assign_idxË* 
n
);

95 
	`ivec_s‹t_ödex
 (
node_assign
, 
n
, 
node_assign_idx
);

98 
i
 = 0; i < 
n
 ; i++)

99 
	`memmove
 (
v
 + 
d
 * 
i
, 
poöts
 + d * 
node_assign_idx
[i],

100  (*
poöts
Ë* 
d
);

103 
pos
 = 0;

104 
∑ª¡
 = 0;Ö¨íà< 
k
 ;Öarent++) {

106 
«ssign
 = 0;

107 
pos
 + 
«ssign
 < 
n
)

108 i‡(
node_assign
[
node_assign_idx
[
pos
 + 
«ssign
]] =
∑ª¡
)

109 
«ssign
++;

112 i‡(
vîbo£
)

113 
	`Ârötf
 (
°dîr
, "[Levñ %d | P¨íà%d]Çassign=%d |Öos=%d", 
l
, 
∑ª¡
, 
«ssign
, 
pos
);

115 i‡(
«ssign
 == 0) {

116 
	`Ârötf
 (
°dîr
, "# Problem2:ÇoÉnough vectors ináÇode\n");

117 
	`exô
 (1);

121 *
˛u°_assign
 = 
	`ivec_√w
 (
«ssign
);

122 * 
˚¡roids
 = 
	`fvec_√w
 (
bf
 * 
d
);

123 
¡
 = 
	`cou¡_˝u
();

124 
Êags
 = 
¡
 | 
KMEANS_INIT_RANDOM
 | 
KMEANS_QUIET
;

125 
îr
 = 
	`kmóns
 (
d
, 
«ssign
, 
bf
, 
nb_ôî_max
, 
v
 + d * 
pos
, 
Êags
,

126 0, 1, 
˚¡roids
, 
NULL
, 
˛u°_assign
, NULL);

127 i‡(
vîbo£
)

128 
	`Ârötf
 (
°dîr
, "->Éº = %.3f\n", 
îr
);

129 
	`mem˝y
 (
hkm
->
˚¡roids
[
l
] + 
d
 * 
∑ª¡
 * 
bf
, centroids,

130 
d
 * 
bf
 *  (*
˚¡roids
));

133 
i
 = 0; i < 
«ssign
; i++) {

134 
åuïos
 = 
node_assign_idx
[
pos
 + 
i
];

135 
node_assign
[
åuïos
] =Çode_assign[åuïos] * 
bf
 + 
˛u°_assign
[
i
];

138 
	`‰ì
 (
˚¡roids
);

139 
	`‰ì
 (
˛u°_assign
);

140 
pos
 +
«ssign
;

143 
k
 *
bf
;

144 
	`‰ì
 (
node_assign_idx
);

147 if(
˛u°_assign_out
) {

148 *
˛u°_assign_out
 = (*Ë
	`mÆloc
 (
n
 *  ());

149 
	`mem˝y
 (*
˛u°_assign_out
, 
node_assign
, 
n
 *  ());

151 
	`‰ì
 (
node_assign
);

152 
	`‰ì
 (
v
);

153  
hkm
;

154 
	}
}

157 
	$hkm_dñëe
 (
hkm_t
 * 
hkm
)

159 
l
;

160 
l
 = 0;Ü < 
hkm
->
∆evñ
;Ü++)

161 
	`‰ì
 (
hkm
->
˚¡roids
[
l
]);

162 
	`‰ì
 (
hkm
->
˚¡roids
);

163 
	`‰ì
 (
hkm
);

164 
	}
}

169 
	$hkm_qu™tize
 (c⁄° 
hkm_t
 * 
hkm
, 
≈t
, c⁄° * 
v
, * 
idx
)

171 
i
, 
l
, 
vw
, 
vwtmp
;

173 
∆evñ
 = 
hkm
->nlevel;

174 
bf
 = 
hkm
->bf;

175 
d
 = 
hkm
->d;

178 
i
 = 0 ; i < 
≈t
 ; i++) {

179 
vw
 = 0;

180 
l
 = 0 ;Ü < 
∆evñ
 ;Ü++) {

182 
	`¬
 (1, 
bf
, 
d
, 
hkm
->
˚¡roids
[
l
] + 
vw
 * d * bf,

183 
v
 + 
d
 * 
i
, &
vwtmp
);

184 
vw
 = vw * 
bf
 + 
vwtmp
;

186 
idx
[
i
] = 
vw
;

188 
	}
}

192 * 
	$hkm_gë_˚¡roids
 (c⁄° 
hkm_t
 * 
hkm
, 
l
, 
no
)

194  
hkm
->
˚¡roids
[
l
] + hkm->
d
 * hkm->
bf
 * 
no
;

195 
	}
}

202 
	#HKM_READ_ERROR
(
ªt
, 
ex≥˘ed_ªt
) \

204 i‡(
ªt
 !(
ex≥˘ed_ªt
)) { \

205 
	`Ârötf
 (
°dîr
, "# U«bÀÅÿªadÅhêhkm fûê%s\n", 
fûíame
);\

206  
NULL
; \

208 }

	)

210 
	#HKM_WRITE_ERROR
(
ªt
, 
ex≥˘ed_ªt
) \

212 i‡(
ªt
 !(
ex≥˘ed_ªt
)) { \

213 
	`Ârötf
 (
°dîr
, "# U«bÀÅÿwrôêthêhkm fûê%s\n", 
fûíame
);\

216 }

	)

219 
	$hkm_wrôe
 (c⁄° *
fûíame
, c⁄° 
hkm_t
 * 
hkm
)

221 
ªt
 = 0, 
l
, 
k
 = 
hkm
->
bf
;

222 
FILE
 *
f
 = 
	`f›í
 (
fûíame
, "w");

223 
	`as£π
 (
f
);

225 
ªt
 = 
	`fwrôe
 (&
hkm
->
∆evñ
,  (hkm->∆evñ), 1, 
f
);

226 
	`HKM_WRITE_ERROR
 (
ªt
, 1);

227 
ªt
 = 
	`fwrôe
 (&
hkm
->
bf
,  (hkm->bf), 1, 
f
);

228 
	`HKM_WRITE_ERROR
 (
ªt
, 1);

229 
ªt
 = 
	`fwrôe
 (&
hkm
->
d
,  (hkm->d), 1, 
f
);

230 
	`HKM_WRITE_ERROR
 (
ªt
, 1);

232 
l
 = 0;Ü < 
hkm
->
∆evñ
;Ü++) {

233 
ªt
 = 
	`fvec_fwrôe
 (
f
, 
hkm
->
˚¡roids
[
l
], 
k
 * hkm->
d
);

234 
k
 *
hkm
->
bf
;

236 
	`f˛o£
 (
f
);

237 
	}
}

240 
hkm_t
 *
	$hkm_ªad
 (c⁄° *
fûíame
)

242 
ªt
 = 0, 
l
;

243 
FILE
 *
f
 = 
	`f›í
 (
fûíame
, "r");

245 
∆evñ
, 
bf
, 
d
;

247 
ªt
 = 
	`‰ód
 (&
∆evñ
,  (∆evñ), 1, 
f
);

248 
	`HKM_READ_ERROR
 (
ªt
, 1);

249 
ªt
 = 
	`‰ód
 (&
bf
,  (bf), 1, 
f
);

250 
	`HKM_READ_ERROR
 (
ªt
, 1);

251 
ªt
 = 
	`‰ód
 (&
d
,  (d), 1, 
f
);

252 
	`HKM_READ_ERROR
 (
ªt
, 1);

255 
hkm_t
 *
hkm
 = 
	`hkm_√w
 (
d
, 
∆evñ
, 
bf
);

256 
	`as£π
 (
hkm
);

259 
k
 = 
hkm
->
bf
;

260 
l
 = 0;Ü < 
hkm
->
∆evñ
;Ü++) {

262 
ªt
 = 
	`fvec_‰ód
 (
f
, 
hkm
->
˚¡roids
[
l
], 
k
 * hkm->
d
);

263 
	`HKM_READ_ERROR
 (
ªt
, 
k
 * 
hkm
->
d
);

265 
k
 *
hkm
->
bf
;

268 
hkm
->
k
 = k / hkm->
bf
;

269  
hkm
;

270 
	}
}

	@hkm.h

39 #i‚de‡
__hkm_h


40 
	#__hkm_h


	)

48 
	shkm_s
 {

49 
	m∆evñ
;

50 
	mbf
;

51 
	mk
;

52 
	md
;

53 ** 
	m˚¡roids
;

54 } 
	thkm_t
;

59 
hkm_t
 * 
hkm_À¨n
 (
n
, 
d
, 
∆evñ
, 
bf
,

60 c⁄° * 
v
, 
nb_ôî_max
, 
¡
, 
vîbo£
,

61 ** 
˛u°_assign_out
);

63 
hkm_dñëe
 (
hkm_t
 * 
hkm
);

66 
hkm_qu™tize
 (c⁄° 
hkm_t
 * 
hkm
, 
n
, c⁄° * 
v
, * 
idx
);

69 
hkm_wrôe
 (c⁄° * 
fûíame
, c⁄° 
hkm_t
 * 
hkm
);

70 
hkm_t
 * 
hkm_ªad
 (c⁄° * 
fûíame
);

73 * 
hkm_gë_˚¡roids
 (c⁄° 
hkm_t
 * 
hkm
, 
l
, 
no
);

	@kmeans.c

39 
	~<°dlib.h
>

40 
	~<°rög.h
>

41 
	~<m©h.h
>

42 
	~<as£π.h
>

44 
	~"ve˘‹.h
"

45 
	~"s‹tög.h
"

46 
	~"m©rix.h
"

47 
	~"kmóns.h
"

48 
	~"¬.h
"

49 
	~"machöedïs.h
"

53 
	$øndom_öô
(
d
, 
n
, 
k
, c⁄° * 
v
, * 
£l
,

54 
£ed
) {

55 *
≥rm
=
	`ivec_√w_øndom_≥rm_r
(
n
,
£ed
);

56 
	`ivec_˝y
(
£l
,
≥rm
,
k
);

57 
	`‰ì
(
≥rm
);

58 
	}
}

60 
	$dønd_r
(*
£ed
) {

61  
	`ønd_r
(
£ed
)/(()
RAND_MAX
 + 1.0);

62 
	}
}

65 
	$kmón•p_öô
 (
d
, 
n
, 
k
, c⁄° * 
v
,

66 * 
£l
, 
vîbo£
, 
£ed
, 
n_thªad
)

70 
i
, 
j
;

75 * 
disbe°
 = 
	`fvec_√w_£t
 (
n
, 
HUGE_VAL
);

76 * 
di°mp
 = 
	`fvec_√w
 (
n
);

78 
£l
[0] = 
	`ønd_r
(&
£ed
Ë% 
k
;

80 
i
 = 1 ; i < 
k
 ; i++) {

81 
√w£l
 = 
£l
[
i
 - 1];

83 i‡(
vîbo£
 && 
i
 % 10 == 0) {

84 
	`¥ötf
 ("%d/%d\r", ()
i
, 
k
);

85 
	`fÊush
 (
°dout
);

89 
j
 = 0 ; j < 
n
 ; j++) {

90 
di°mp
[
j
] = 
	`fvec_di°™˚_L2sqr
 (
v
 + 
d
 * j, v + d * 
√w£l
, d);

91 i‡(
di°mp
[
j
] < 
disbe°
[j])

92 
disbe°
[
j
] = 
di°mp
[j];

96 
	`compuã_di°™˚s_1_thªad
(
d
, 
n
, 
v
 + d * 
√w£l
, v, 
di°mp
, 
n_thªad
);

98 
j
 = 0 ; j < 
n
 ; j++)

99 i‡(
di°mp
[
j
] < 
disbe°
[j])

100 
disbe°
[
j
] = 
di°mp
[j];

104 
	`mem˝y
 (
di°mp
, 
disbe°
, 
n
 *  (*distmp));

105 
	`fvec_n‹mÆize
 (
di°mp
, 
n
, 1);

106 
rd
 = 
	`dønd_r
(&
£ed
);

108 
j
 = 0 ; j < 
n
 - 1 ; j++) {

109 
rd
 -
di°mp
[
j
];

110 i‡(
rd
 < 0)

114 
£l
[
i
] = 
j
;

116 i‡(
vîbo£
)

117 
	`¥ötf
("\n");

118 
	`‰ì
 (
disbe°
);

119 
	`‰ì
 (
di°mp
);

120 
	}
}

133 
	$möimize_sum_chi2
(c⁄° *
a
, 
n
) {

135 if(
n
 == 0)  0.0/0.0;

136 if(
n
 =1Ë 
a
[0];

138 
x
, 
¥ev_x
, 
mag
;

139 
i
;

142 
mag
 = 0;

143 
i
 = 0; i < 
n
; i++Ë
mag
 +
a
[i];

144 
mag
 /
n
;

147 
x
 = 0;

151 
nôî
 = 0;

155 
d
, 
dd
;

157 
d
 = 
dd
 = 0;

159 
i
 = 0; i < 
n
 ; i++) {

161 
sum2
 = (
x
 + 
a
[
i
]) * (x +á[i]);

162 
sum3
 = (
x
 + 
a
[
i
]Ë* 
sum2
;

164 if(
sum2
 == 0) ;

166 
d
 +(
x
 - 
a
[
i
]Ë* (x + 3 *á[i]Ë/ 
sum2
;

168 
dd
 +8 * 
a
[
i
] *á[i] / 
sum3
;

171 if–
d
 == 0 )

174 if–
dd
 == 0 ) {

175 
	`Ârötf
(
°dîr
, "warn: minimize_sum_chi2 with zero second derivative,á = [");

176 
i
 = 0; i < 
n
; i++Ë
	`Ârötf
(
°dîr
, "%g ", 
a
[i]);

177 
	`Ârötf
(
°dîr
, "]\n");

180 
¥ev_x
 = 
x
;

182 
x
 -
d
 / 
dd
;

184 if(
x
 < 0Ëx = 
¥ev_x
 / 2.0;

186 if(++
nôî
==1000) {

187 
	`Ârötf
(
°dîr
, "warn: minimize_sum_chi2Ñeached 1000 iterations,á=[" );

188 
i
 = 0; i < 
n
; i++Ë
	`Ârötf
(
°dîr
, "%g ", 
a
[i]);

189 
	`Ârötf
(
°dîr
, "]\n");

193 
	`as£π
(
	`föôe
(
x
));

195 } 
	`Ábs
(
x
 - 
¥ev_x
Ë> 1e-4 * 
mag
);

198  
x
;

199 
	}
}

204 
	$kmóns_ªassign_em±y
 (
d
, 
n
, 
k
, * 
˚¡roids
,

205 * 
assign
, * 
«ssign
, 
£ed
)

207 
c
, 
j
, 
ƒóssign
 = 0;

208 * 
¥oba_•lô
 = 
	`fvec_√w
 (
k
);

209 * 
vïsû⁄
 = 
	`fvec_√w
 (
d
);

212 
c
 = 0 ; c < 
k
 ; c++)

213 
¥oba_•lô
[
c
] = (
«ssign
[c] < 2 ? 0 :Çassign[c]*nassign[c] - 1);

215 
	`fvec_n‹mÆize
 (
¥oba_•lô
, 
k
, 1);

217 
c
 = 0 ; c < 
k
 ; c++) {

218 if(
«ssign
[
c
]==0) {

219 
ƒóssign
++;

221 
rd
 = 
	`dønd_r
(&
£ed
);

224 
j
 = 0 ; j < 
k
 - 1 ; j++) {

225 
rd
 -
¥oba_•lô
[
j
];

226 i‡(
rd
 < 0)

229 
	`fvec_˝y
 (
˚¡roids
 + 
c
 * 
d
, cíåoid†+ 
j
 * d, d);

232 
s
 = 
	`fvec_n‹m
 (
˚¡roids
 + 
j
 * 
d
, d, 2) * 0.0000001;

233 
	`fvec_øndn_r
 (
vïsû⁄
, 
d
, 
	`ønd_r
(&
£ed
));

234 
	`fvec_mul_by
 (
vïsû⁄
, 
d
, 
s
);

235 
	`fvec_add
 (
˚¡roids
 + 
j
 * 
d
, 
vïsû⁄
, d);

236 
	`fvec_sub
 (
˚¡roids
 + 
c
 * 
d
, 
vïsû⁄
, d);

239 
¥oba_•lô
[
j
] = 0;

240 
	`fvec_n‹mÆize
 (
¥oba_•lô
, 
k
, 1);

243 
	`‰ì
 (
¥oba_•lô
);

244 
	`‰ì
 (
vïsû⁄
);

246  
ƒóssign
;

247 
	}
}

251 
	$kmóns_c‹e
 (
d
, 
n
, 
k
, 
nôî
, 
¡
, 
Êags
, 
vîbo£
,

252 * 
˚¡roids
, c⁄° * 
v
,

253 
£ed
,

254 * 
assign
, * 
«ssign
,

255 * 
dis
,

256 * 
qîr_out
, * 
ôî_tŸ
)

258 
i
, 
j
, 
ôî
;

259 
ƒóssign
;

260 
ªt
 = 0;

263 
qîr
 = 
HUGE_VAL
, 
qîr_ﬁd
;

265 *
tmp_v
 = 
NULL
;

266 *
tmp_cumsum
 = 
NULL
;

268 if(
Êags
 & (
KMEANS_L1
 | 
KMEANS_CHI2
)) {

269 
tmp_v
 = 
	`fvec_√w
(()
n
 * 
d
);

270 
tmp_cumsum
 = 
	`ivec_√w
(
k
);

273 
tŸ_ƒóssign
=0;

275 
ôî
 = 1 ; iã∏<
nôî
 ; iter++) {

276 (*
ôî_tŸ
)++;

280 
	`k¬_fuŒ_thªad
 (
Êags
 & 
KMEANS_L1
 ? 1 :

281 
Êags
 & 
KMEANS_CHI2
 ? 3 : 2,

282 
n
, 
k
, 
d
, 1, 
˚¡roids
, 
v
, 
NULL
, 
assign
, 
dis
, 
¡
);

287 
	`ivec_0
 (
«ssign
, 
k
);

288 
i
 = 0 ; i < 
n
 ; i++)

289 
«ssign
[
assign
[
i
]]++;

291 if(
Êags
 & (
KMEANS_L1
 | 
KMEANS_CHI2
)) {

292 
	`ivec_˝y
(
tmp_cumsum
, 
«ssign
, 
k
);

293 
	`ivec_cumsum
(
tmp_cumsum
, 
k
);

298 
i
 = 0; i < 
n
; i++) {

299 
wrôe_to
 = --
tmp_cumsum
[
assign
[
i
]];

300 
j
 = 0; j < 
d
; j++)

301 
tmp_v
[
wrôe_to
 + 
j
 * 
n
] = 
v
[
i
 * 
d
 + j];

306 
i
 = 0; i < 
k
; i++)

307 
j
 = 0; j < 
d
; j++)

308 if(
Êags
 & 
KMEANS_L1
)

309 
˚¡roids
[
i
 * 
d
 + 
j
] = 
	`fvec_medün
(
tmp_v
 + 
tmp_cumsum
[i] + j * 
n
, 
«ssign
[i]);

311 
˚¡roids
[
i
 * 
d
 + 
j
] = 
	`möimize_sum_chi2
(
tmp_v
 + 
tmp_cumsum
[i] + j * 
n
, 
«ssign
[i]);

316 
	`fvec_0
 (
˚¡roids
, 
d
 * 
k
);

318 
i
 = 0 ; i < 
n
 ; i++)

319 
	`fvec_add
 (
˚¡roids
 + 
assign
[
i
] * 
d
, 
v
 + i * d, d);

322 
i
 = 0 ; i < 
k
 ; i++) {

323 
	`fvec_mul_by
 (
˚¡roids
 + 
i
 * 
d
, d, 1.0 / 
«ssign
[i]);

327 if(
Êags
 & 
KMEANS_NORMALIZE_CENTS
)

328 
i
 = 0 ; i < 
k
 ; i++)

329 
	`fvec_n‹mÆize
(
˚¡roids
 + 
i
 * 
d
, d, 
Êags
 & 
KMEANS_L1
 ? 1.0 : 2.0);

332 
ƒóssign
 = 
	`kmóns_ªassign_em±y
 (
d
, 
n
, 
k
, 
˚¡roids
, 
assign
, 
«ssign
, 
	`ønd_r
(&
£ed
));

333 i‡(
ƒóssign
 > 0)

334 
	`Ârötf
 (
°dîr
, "# kmón†w¨nög: %dÉm±y clu°î†-> s∂ô\n", 
ƒóssign
);

336 
tŸ_ƒóssign
+=
ƒóssign
;

338 if(
tŸ_ƒóssign
>
n
/100 &&Åot_nreassign>1000) {

339 
	`Ârötf
 (
°dîr
,"# kmóns:Ñóssig√d %dÅimes,áb™d⁄ög\n", 
tŸ_ƒóssign
);

340 
ªt
 = -1;

341 
out
;

345 
qîr_ﬁd
 = 
qîr
;

346 
qîr
 = 
	`fvec_sum
 (
dis
, 
n
);

348 i‡(
qîr_ﬁd
 =
qîr
 && 
ƒóssign
 == 0)

350 i‡(
vîbo£
) {

351 
	`¥ötf
 (" -> %.3f", 
qîr
 / 
n
);

352 
	`fÊush
(
°dout
);

355 i‡(
vîbo£
)

356 
	`¥ötf
 ("\n");

358 *
qîr_out
 = 
qîr
;

360 
out
:

362 
	`‰ì
(
tmp_cumsum
);

363 
	`‰ì
(
tmp_v
);

364  
ªt
;

365 
	}
}

368 
	$kmóns
 (
di
, 
n
, 
k
, 
nôî
,

369 c⁄° * 
v
, 
Êags
, 
£ed_ö
, 
ªdo
,

370 * 
˚¡roids_out
, * 
dis_out
,

371 * 
assign_out
, * 
«ssign_out
)

373 
i
, 
run
, 
ôî_tŸ
 = 0, 
d
=
di
;

375 
¡
 = 
Êags
 & 0xffff;

376 i‡(
¡
 == 0)Çt = 1;

378 
vîbo£
 = !(
Êags
 & 
KMEANS_QUIET
);

380 
nôî
 = (niter == 0 ? 1000000 :Çiter);

383 
isout_˚¡roids
 = (
˚¡roids_out
 =
NULL
 ? 0 : 1);

384 
isout_dis
 = (
dis_out
 =
NULL
 ? 0 : 1);

385 
isout_assign
 = (
assign_out
 =
NULL
 ? 0 : 1);

386 
isout_«ssign
 = (
«ssign_out
 =
NULL
 ? 0 : 1);

389 
is_u£r_öô
 = ((
Êags
 & 
KMEANS_INIT_USER
) > 0 ? 1 : 0);

390 i‡(
is_u£r_öô
) {

391 
	`as£π
 (
˚¡roids_out
 !
NULL
);

392 
ªdo
 = 1;

396 * 
˚¡roids
 = 
	`fvec_√w
 (
k
 * (
size_t
Ë
d
);

399 * 
dis
 = 
	`fvec_√w
 (
n
);

402 * 
assign
 = 
	`ivec_√w
 (
n
);

405 * 
«ssign
 = 
	`ivec_√w
 (
k
);

408 
qîr
, 
qîr_be°
 = 
HUGE_VAL
;

411 * 
£À˘ed
 = 
	`ivec_√w
 (
k
);

414 i‡(
£ed_ö
 == 0)

415 
£ed_ö
 = 
	`Ã™d48
();

417 
£ed
=
£ed_ö
;

418 
c‹e_ªt
=0;

420 
run
 = 0 ;Ñu¿< 
ªdo
 ;Ñun++) {

421 if(
vîbo£
)

422 
	`¥ötf
 ("<><><><> kmón†/Ñu¿%d <><><><><>\n", ()
run
);

424 i‡(
is_u£r_öô
) {

425 
	`fvec_˝y
 (
˚¡roids
, 
˚¡roids_out
, 
d
 * 
k
);

427 i‡(
Êags
 & 
KMEANS_INIT_BERKELEY
) {

428 
nsub£t
 = 
n
;

430 i‡(
n
 > 
k
 * 8 &&Ç > 8192) {

431 
nsub£t
 = 
k
 * 8;

432 if(
vîbo£
)

433 
	`¥ötf
 ("Re°ri˘ög k-móns++ inôüliz©i⁄Åÿ%dÖoöts\n", 
nsub£t
);

435 
	`kmón•p_öô
 (
d
, 
nsub£t
, 
k
, 
v
, 
£À˘ed
, 
vîbo£
, 
	`ønd_r
(&
£ed
), 
¡
);

437 
	`øndom_öô
(
d
,
n
,
k
,
v
,
£À˘ed
,
	`ønd_r
(&
£ed
));

439 
i
 = 0 ; i < 
k
 ; i++)

440 
	`fvec_˝y
 (
˚¡roids
 + 
i
 * 
d
, 
v
 + 
£À˘ed
[i] * d, d);

443 
c‹e_ªt
=
	`kmóns_c‹e
 (
d
, 
n
, 
k
, 
nôî
, 
¡
, 
Êags
, 
vîbo£
,

444 
˚¡roids
, 
v
, 
	`ønd_r
(&
£ed
), 
assign
, 
«ssign
, 
dis
,

445 &
qîr
, &
ôî_tŸ
);

447 if(
c‹e_ªt
<0)

452 i‡(
qîr
 < 
qîr_be°
) {

453 
qîr_be°
 = 
qîr
;

455 i‡(
isout_˚¡roids
)

456 
	`mem˝y
 (
˚¡roids_out
, 
˚¡roids
, 
k
 * 
d
 *  (*centroids));

457 i‡(
isout_dis
)

458 
	`mem˝y
 (
dis_out
, 
dis
, 
n
 *  (*dis));

459 i‡(
isout_assign
)

460 
	`mem˝y
 (
assign_out
, 
assign
, 
n
 *  (*assign));

461 i‡(
isout_«ssign
)

462 
	`mem˝y
 (
«ssign_out
, 
«ssign
, 
k
 *  (*nassign));

466 if(
vîbo£
 && 
c‹e_ªt
>=0) {

467 
	`¥ötf
 ("TŸÆÇumbî o‡ôî©i⁄s: %d\n", ()
ôî_tŸ
);

468 
	`¥ötf
 ("UnbÆ™˚d fa˘‹ o‡œ° iãøti⁄: %g\n",
	`ivec_unbÆ™˚d_Á˘‹
(
«ssign
,
k
));

472 
	`‰ì
 (
£À˘ed
);

473 
	`‰ì
 (
˚¡roids
);

474 
	`‰ì
 (
dis
);

475 
	`‰ì
 (
assign
);

476 
	`‰ì
 (
«ssign
);

478 if(
c‹e_ªt
<0)

481  
qîr_be°
 / 
n
;

482 
	}
}

487 *
	$˛u°îög_kmóns_assign_wôh_sc‹e
 (
n
, 
di
,

488 c⁄° *
poöts
, 
k
, 
nb_ôî_max
,

489 
n‹mÆize
,

490 
n_thªad
,

491 *
sc‹e
, **
˛u°_assign_out
)

494 
d
=
di
;

495 *
˚¡roids
 = 
	`fvec_√w
 (
k
 * 
d
);

496 *
ˇ
=
˛u°_assign_out
 ? 
	`ivec_√w
(
n
Ë: 
NULL
;

497 
ƒedo
=1;

499 if(
nb_ôî_max
/100000!=0) {

500 
ƒedo
=
nb_ôî_max
/100000;

501 
nb_ôî_max
=nb_iter_max % 100000;

505 
ªt
=
	`kmóns
(
di
,
n
,
k
,
nb_ôî_max
,
poöts
,
n_thªad
 | 
KMEANS_INIT_RANDOM
,0,
ƒedo
,
˚¡roids
,
NULL
,
ˇ
,NULL);

507 if(
ªt
>=0) {

508 if(
˛u°_assign_out
Ë*˛u°_assign_out=
ˇ
;

509  
˚¡roids
;

511 
	`‰ì
(
˚¡roids
);

512 
	`‰ì
(
ˇ
);

513 *
˛u°_assign_out
=
NULL
;

514  
NULL
;

517 
	}
}

519 *
	$˛u°îög_kmóns_assign
 (
n
, 
d
,

520 c⁄° *
poöts
, 
k
, 
nb_ôî_max
,

521 
n‹mÆize
, **
˛u°_assign_out
)

523  
	`˛u°îög_kmóns_assign_wôh_sc‹e
 (
n
, 
d
, 
poöts
, 
k
, 
nb_ôî_max
,

524 
n‹mÆize
, 
	`cou¡_˝u
(), 
NULL
, 
˛u°_assign_out
);

525 
	}
}

527 *
	$˛u°îög_kmóns
 (
n
, 
d
,

528 c⁄° *
poöts
, 
k
, 
nb_ôî_max
,

529 
n‹mÆize
)

532 *
˛u°_assign
;

534 *
˚¡roids
 = 
	`˛u°îög_kmóns_assign_wôh_sc‹e
 (
n
, 
d
, 
poöts
, 
k
,

535 
nb_ôî_max
, 
n‹mÆize
, 
	`cou¡_˝u
(), 
NULL
, &
˛u°_assign
);

536 
	`‰ì
 (
˛u°_assign
);

538  
˚¡roids
;

539 
	}
}

	@kmeans.h

39 #i‚de‡
KMEANS_H_INCLUDED


40 
	#KMEANS_H_INCLUDED


	)

49 
	#KMEANS_QUIET
 0x10000

	)

50 
	#KMEANS_INIT_BERKELEY
 0x20000

	)

51 
	#KMEANS_NORMALIZE_CENTS
 0x40000

	)

52 
	#KMEANS_INIT_RANDOM
 0x80000

	)

53 
	#KMEANS_INIT_USER
 0x100000

	)

55 
	#KMEANS_L1
 0x200000

	)

56 
	#KMEANS_CHI2
 0x400000

	)

79 
kmóns
 (
d
, 
n
, 
k
, 
nôî
,

80 c⁄° * 
v
, 
Êags
, 
£ed
, 
ªdo
,

81 * 
˚¡roids
, * 
dis
,

82 * 
assign
, * 
«ssign
);

87 * 
˛u°îög_kmóns
 (
n
, 
d
,

88 c⁄° *
poöts
, 
k
, 
nb_ôî_max
,

89 
n‹mÆize
);

94 * 
˛u°îög_kmóns_assign
 (
n
, 
d
,

95 c⁄° *
poöts
, 
k
, 
nb_ôî_max
,

96 
n‹mÆize
,

97 ** 
˛u°_assign_out
);

101 * 
˛u°îög_kmóns_assign_wôh_sc‹e
 (
n
, 
d
,

102 c⁄° *
poöts
, 
k
, 
nb_ôî_max
,

103 
n‹mÆize
, 
n_thªad
, *
sc‹e_out
,

104 ** 
˛u°_assign_out
);

	@kmlsh.c

39 
	~<°dio.h
>

40 
	~<as£π.h
>

41 
	~<m©h.h
>

42 
	~<°dlib.h
>

44 
	~"ve˘‹.h
"

45 
	~"¬.h
"

46 
	~"s‹tög.h
"

47 
	~"kmóns.h
"

49 
	~"kmlsh.h
"

54 
ölöe
 
	$gë_maxö˚Œ
 (c⁄° * 
bound¨õs
, 
n˛u°
)

56 
c
, 
nö˚Œ
, 
maxnidx
 = 0;

57 
c
 = 0 ; c < 
n˛u°
 ; c++) {

58 
nö˚Œ
 = 
bound¨õs
[
c
+1] - boundaries[c];

59 i‡(
nö˚Œ
 > 
maxnidx
)

60 
maxnidx
 = 
nö˚Œ
;

62  
maxnidx
;

63 
	}
}

69 
¬li°_t
 * 
	$¬li°_√w_nﬂŒoc
 (
n
, 
k
)

71 
¬li°_t
 * 
l
 = (¬li°_à*Ë
	`mÆloc
 ( (nnlist_t));

72 
l
->
n
 =Ç;

73 
l
->
k
 = k;

74  
l
;

75 
	}
}

78 
¬li°_t
 * 
	$¬li°_√w
 (
n
, 
k
)

80 
¬li°_t
 * 
l
 = (¬li°_à*Ë
	`mÆloc
 ( (nnlist_t));

81 
l
->
n
 =Ç;

82 
l
->
k
 = k;

83 
l
->
idx
 = 
	`ivec_√w_£t
 (
n
 * (Ë
k
, -1);

84 
l
->
dis
 = 
	`fvec_√w_£t
 (
n
 * (Ë
k
, 1e30);

85  
l
;

86 
	}
}

89 
	$¬li°_dñëe
 (
¬li°_t
 * 
l
)

91 
	`‰ì
 (
l
->
dis
);

92 
	`‰ì
 (
l
->
idx
);

93 
	`‰ì
 (
l
);

94 
	}
}

98 
ölöe
 
	$¬li°_add
 (
¬li°_t
 * 
l
, 
 o
, 
ñidx
, 
ñdis
)

100 * 
idx
 = 
l
->idx + (Ë
 o
 *Ü->
k
;

101 * 
dis
 = 
l
->di†+ (Ë
 o
 *Ü->
k
;

104 i‡(
ñdis
 > 
dis
[0])

108 i‡(
	`ivec_ödex
 (
idx
, 
l
->
k
, 
ñidx
) != -1)

111 
idx
[0] = 
ñidx
;

112 
dis
[0] = 
ñdis
;

115 
posmax
 = 
	`fvec_¨g_max
 (
dis
, 
l
->
k
);

116 i‡(
posmax
 == 0)

119 
idx
[0] = idx[
posmax
];

120 
dis
[0] = dis[
posmax
];

121 
idx
[
posmax
] = 
ñidx
;

122 
dis
[
posmax
] = 
ñdis
;

123 
	}
}

126 
	$¬li°_addn
 (
¬li°_t
 * 
l
, 
 o
, 
n
, * 
idx
, * 
dis
)

128 
i
;

129 
i
 = 0 ; i < 
n
 ; i++)

130 
	`¬li°_add
 (
l
, 
 o
, 
idx
[
i
], 
dis
[i]);

131 
	}
}

137 
kmlsh_t
 * 
	$kmlsh_√w
 (
nhash
, 
n˛u°
, 
d
)

139 
i
;

140 
kmlsh_t
 * 
lsh
 = (kmlsh_à*Ë
	`mÆloc
 ( (kmlsh_t));

142 
lsh
->
d
 = d;

143 
lsh
->
nhash
 =Çhash;

144 
lsh
->
n˛u°
 =Çclust;

145 
lsh
->
˚¡roids
 = (**Ë
	`mÆloc
 (
nhash
 *  (*));

148 
i
 = 0 ; i < 
nhash
 ; i++)

149 
lsh
->
˚¡roids
[
i
] = 
	`fvec_√w
 (
d
 * 
n˛u°
);

151  
lsh
;

152 
	}
}

155 
	$kmlsh_dñëe
 (
kmlsh_t
 * 
lsh
)

157 
i
;

158 
i
 = 0 ; i < 
lsh
->
nhash
 ; i++)

159 
	`‰ì
 (
lsh
->
˚¡roids
[
i
]);

160 
	`‰ì
 (
lsh
->
˚¡roids
);

161 
	`‰ì
 (
lsh
);

162 
	}
}

171 
	$kmlsh_À¨n_xvec
 (
kmlsh_t
 * 
lsh
, 
n
, 
∆ó∫
, c⁄° * 
v
,

172 
Êags
, 
vec_ty≥
)

174 
h
;

177 
nb_ôî_max
 = 
KMLSH_NB_ITER_MAX
;

178 
d
 = 
lsh
->d;

179 
n˛u°
 = 
lsh
->nclust;

180 
¡
 = 
Êags
 & 
KMLSH_NT
;

181 
kmóns_Êags
 = 
¡
 | 
KMEANS_INIT_RANDOM
;

182 
vîbo£
 = !(
Êags
 & 
KMLSH_QUIET
);

185 c⁄° * 
vf
 = (*Ë
v
;

186 c⁄° * 
vb
 = (*Ë
v
;

188 i‡(
∆ó∫
 == 0) {

189 
∆ó∫
 = 
lsh
->
n˛u°
 * 50;

190 i‡(
∆ó∫
 > 
n
)Çlearn = (n * 3) / 4;

192 
	`as£π
 (
∆ó∫
 <
n
);

193 i‡(
vîbo£
)

194 
	`Ârötf
 (
°dîr
, "n=%dÇÀ¨n=%dÇ˛u°=%d\n", 
n
, 
∆ó∫
, 
lsh
->
n˛u°
);

195 
kmóns_Êags
 |
KMEANS_QUIET
;

197 * 
vÀ¨n
 = 
	`fvec_√w
 (
∆ó∫
 * 
d
);

198 
h
 = 0 ; h < 
lsh
->
nhash
 ; h++) {

200 * 
≥rm
 = 
	`ivec_√w_øndom_idx
 (
n
, 
∆ó∫
);

202 i‡(
vec_ty≥
 =
KMLSH_VECTYPE_FVEC
)

203 
	`fvec_˝y_subve˘‹s
 (
vf
, 
≥rm
, 
d
, 
∆ó∫
, 
vÀ¨n
);

204 i‡(
vec_ty≥
 =
KMLSH_VECTYPE_BVEC
)

205 
	`b2fvec_˝y_subve˘‹s
 (
vb
, 
≥rm
, 
d
, 
∆ó∫
, 
vÀ¨n
);

206 
	`as£π
 (0);

207 
	`‰ì
 (
≥rm
);

210 i‡(
vîbo£
)

211 
	`Ârötf
 (
°dîr
, "Ló∫ K-món†usög %d ve˘‹s\n", 
∆ó∫
);

212 
	`kmóns
 (
d
, 
∆ó∫
, 
n˛u°
, 
nb_ôî_max
, 
vÀ¨n
, 
kmóns_Êags
, 0, 1,

213 
lsh
->
˚¡roids
[
h
], 
NULL
, NULL, NULL);

216 i‡(
Êags
 & 
KMLSH_WRITE_INTER_NHASH
) {

217 * 
°mp
 = (*Ë
	`mÆloc
 (256);

218 
	`¢¥ötf
 (
°mp
, 256, "tmp/nhash-öãrmedüã_%d.kmlsh", 
h
+1);

219 
	`kmlsh_wrôe
 (
°mp
, 
lsh
);

220 
	`‰ì
 (
°mp
);

223 
	`‰ì
 (
vÀ¨n
);

224 
	}
}

228 
kmlsh_t
 * 
	$kmlsh_√w_À¨n_bvec
 (
nhash
, 
n˛u°
, 
d
, 
n
, 
∆ó∫
,

229 c⁄° * 
v
, 
Êags
)

231 
kmlsh_t
 * 
lsh
 = 
	`kmlsh_√w
 (
nhash
, 
n˛u°
, 
d
);

232 
	`kmlsh_À¨n_xvec
 (
lsh
, 
n
, 
∆ó∫
, 
v
, 
Êags
, 
KMLSH_VECTYPE_BVEC
);

233  
lsh
;

234 
	}
}

238 
kmlsh_t
 * 
	$kmlsh_√w_À¨n_fvec
 (
nhash
, 
n˛u°
, 
d
, 
n
, 
∆ó∫
,

239 c⁄° * 
v
, 
Êags
)

241 
kmlsh_t
 * 
lsh
 = 
	`kmlsh_√w
 (
nhash
, 
n˛u°
, 
d
);

242 
	`kmlsh_À¨n_xvec
 (
lsh
, 
n
, 
∆ó∫
, 
v
, 
Êags
, 
KMLSH_VECTYPE_FVEC
);

243  
lsh
;

244 
	}
}

248 
	$kmóns_cohash_xvec
 (c⁄° 
kmlsh_t
 * 
lsh
, 
h
, c⁄° * 
v
, 
n
,

249 * 
≥rm
, * 
bound¨õs
, 
Êags
, 
vec_ty≥
)

251 
i
, 
j
;

252 * 
idx
 = 
	`ivec_√w
 (
n
);

253 * 
dis
 = 
	`fvec_√w
 (
n
);

254 
¡
 = 
Êags
 & 
KMLSH_NT
;

257 
d
 = 
lsh
->d;

258 
n˛u°
 = 
lsh
->nclust;

261 * 
vf
 = (*Ë
v
;

262 c⁄° * 
vb
 = (*Ë
v
;

263 * 
vbuf
 = 
NULL
;

265 i‡(
vec_ty≥
 !
KMLSH_VECTYPE_FVEC
)

266 
vbuf
 = 
	`fvec_√w
 (
KMLSH_BLOCK_SIZE
 * 
d
);

270 
i
 = 0 ; i < 
n
 ; i +
KMLSH_BLOCK_SIZE
) {

271 
nöblock
 = 
KMLSH_BLOCK_SIZE
;

272 i‡(
i
 + 
nöblock
 > 
n
)

273 
nöblock
 = 
n
 - 
i
;

275 i‡(
vec_ty≥
 =
KMLSH_VECTYPE_BVEC
)

276 
j
 = 0 ; j < 
nöblock
 * 
d
; j++)

277 
vbuf
[
j
] = 
vb
[
i
*
d
+j];

278 i‡(
vec_ty≥
 =
KMLSH_VECTYPE_FVEC
)

279 
vbuf
 = 
vf
 + 
i
 * 
d
;

280 
	`k¬_fuŒ_thªad
 (2, 
nöblock
, 
n˛u°
, 
d
, 1, 
lsh
->
˚¡roids
[
h
],

281 
vbuf
, 
NULL
, 
idx
 + 
i
, 
dis
 + i, 
¡
);

282 i‡(! (
Êags
 & 
KMLSH_QUIET
))

283 
	`Ârötf
 (
°dout
, "\rQu™tizê%d des¸ùt‹s. %6.2f%%", 
n
, 100.0 * (
i
 + 
nöblock
) / ()Ç);

285 i‡(! (
Êags
 & 
KMLSH_QUIET
))

286 
	`¥ötf
 ("\n");

287 i‡(
vec_ty≥
 !
KMLSH_VECTYPE_FVEC
)

288 
	`‰ì
 (
vbuf
);

290 * 
hi°oidx
 = 
	`ivec_√w_hi°ogøm
 (
n˛u°
 + 1, 
idx
, 
n
);

291 
a
 = 
hi°oidx
[0], 
b
, 
c
;

292 
hi°oidx
[0] = 0;

294 
c
 = 1 ; c <
n˛u°
 ; c++) {

295 
b
 = 
hi°oidx
[
c
];

296 
hi°oidx
[
c
] = hi°oidx[¯- 1] + 
a
;

297 
a
 = 
b
;

300 * 
nocc
 = 
	`ivec_√w_0
 (
n˛u°
);

301 
i
 = 0 ; i < 
n
 ; i++) {

302 
˚Œ
 = 
idx
[
i
];

303 
pos
 = 
hi°oidx
[
˚Œ
] + 
nocc
[cell]++;

304 
	`as£π
 (
nocc
[
˚Œ
] <
hi°oidx
[cell+1] - histoidx[cell]);

305 
≥rm
[
pos
] = 
i
;

308 
i
 = 0 ; i < 
n˛u°
 ; i++)

309 
	`as£π
 (
nocc
[
i
] =
hi°oidx
[i+1] - histoidx[i]);

311 
	`ivec_˝y
 (
bound¨õs
, 
hi°oidx
, 
n˛u°
 + 1);

313 
	`‰ì
 (
idx
);

314 
	`‰ì
 (
dis
);

315 
	`‰ì
 (
hi°oidx
);

316 
	`‰ì
 (
nocc
);

317 
	}
}

320 
	$kmóns_cohash_bvec
 (c⁄° 
kmlsh_t
 * 
lsh
, 
h
, c⁄° * 
v
, 
n
,

321 * 
≥rm
, * 
bound¨õs
, 
Êags
)

323 
	`kmóns_cohash_xvec
 (
lsh
, 
h
, (*Ë
v
, 
n
, 
≥rm
, 
bound¨õs
, 
Êags
, 
KMLSH_VECTYPE_BVEC
);

324 
	}
}

327 
	$kmóns_cohash_fvec
 (c⁄° 
kmlsh_t
 * 
lsh
, 
h
, c⁄° * 
v
, 
n
,

328 * 
≥rm
, * 
bound¨õs
, 
Êags
)

330 
	`kmóns_cohash_xvec
 (
lsh
, 
h
, (*Ë
v
, 
n
, 
≥rm
, 
bound¨õs
, 
Êags
, 
KMLSH_VECTYPE_FVEC
);

331 
	}
}

334 
kmlsh_idx_t
 * 
	$kmlsh_idx_√w
 (c⁄° 
kmlsh_t
 * 
lsh
, 
n
)

336 
kmlsh_idx_t
 * 
lshidx
 = (kmlsh_idx_à*Ë
	`mÆloc
 ( (
kmlsh_idx_s
));

338 
lshidx
->
nhash
 = 
lsh
->nhash;

339 
lshidx
->
n
 =Ç;

340 
lshidx
->
n˛u°
 = 
lsh
->nclust;

341 
lshidx
->
≥rm
 = 
	`ivec_√w
 (
lsh
->
nhash
 * 
n
);

342 
lshidx
->
bound¨õs
 = 
	`ivec_√w
 (
lsh
->
nhash
 * (lsh->
n˛u°
+1));

343  
lshidx
;

344 
	}
}

347 
	$kmlsh_idx_dñëe
 (
kmlsh_idx_t
 * 
lshidx
)

349 
	`‰ì
 (
lshidx
->
≥rm
);

350 
	`‰ì
 (
lshidx
->
bound¨õs
);

351 
	`‰ì
 (
lshidx
);

352 
	}
}

355 
kmlsh_idx_t
 * 
	$kmlsh_idx_√w_compûe_xvec
 (c⁄° 
kmlsh_t
 * 
lsh
, c⁄° * 
v
, 
n
, 
Êags
, 
vec_ty≥
)

357 
h
;

358 
kmlsh_idx_t
 * 
lshidx
 = 
	`kmlsh_idx_√w
 (
lsh
, 
n
);

359 
¡
 = 
Êags
 & 
KMLSH_NT
;

361 
h
 = 0 ; h < 
lsh
->
nhash
 ; h++) {

362 * 
≥rm
 = 
lshidx
->≥rm + 
h
 * 
n
;

363 * 
bound¨õs
 = 
lshidx
->bound¨õ†+ 
h
 * (
lsh
->
n˛u°
 + 1);

365 
	`kmóns_cohash_xvec
 (
lsh
, 
h
, 
v
, 
n
, 
≥rm
, 
bound¨õs
, 
¡
, 
vec_ty≥
);

368 i‡(
Êags
 & 
KMLSH_WRITE_INTER_NHASH
) {

369 * 
°mp
 = (*Ë
	`mÆloc
 (256);

370 
	`¢¥ötf
 (
°mp
, 256, "tmp/nhash-öãrmedüã_%d.kmlshidx", 
h
+1);

371 
	`kmlsh_idx_wrôe
 (
°mp
, 
lshidx
);

372 
	`‰ì
 (
°mp
);

376  
lshidx
;

377 
	}
}

379 
kmlsh_idx_t
 * 
	$kmlsh_idx_√w_compûe_bvec
 (c⁄° 
kmlsh_t
 * 
lsh
, c⁄° * 
v
, 
n
, 
Êags
)

381  
	`kmlsh_idx_√w_compûe_xvec
 (
lsh
, (*Ë
v
, 
n
, 
Êags
, 
KMLSH_VECTYPE_BVEC
);

382 
	}
}

384 
kmlsh_idx_t
 * 
	$kmlsh_idx_√w_compûe_fvec
 (c⁄° 
kmlsh_t
 * 
lsh
, c⁄° * 
v
, 
n
, 
Êags
)

386  
	`kmlsh_idx_√w_compûe_xvec
 (
lsh
, (*Ë
v
, 
n
, 
Êags
, 
KMLSH_VECTYPE_FVEC
);

387 
	}
}

390 
	$kmlsh_idx_gë_nvec
 (c⁄° 
kmlsh_idx_t
 * 
lshidx
, 
h
, 
c
)

392 
nvecö˚Œ
 = 
lshidx
->
bound¨õs
[
h
 * (lshidx->
n˛u°
+1Ë+ 
c
 + 1]

393 - 
lshidx
->
bound¨õs
[
h
 * (lshidx->
n˛u°
+1Ë+ 
c
];

394  
nvecö˚Œ
;

395 
	}
}

398 
	$kmlsh_idx_gë_maxö˚Œ
 (c⁄° 
kmlsh_idx_t
 * 
lshidx
, 
h
)

400 
maxö˚Œ
 = 
	`gë_maxö˚Œ
 (
lshidx
->
bound¨õs
 + 
h
 * (lshidx->
n˛u°
+1),Üshidx->nclust);

401  
maxö˚Œ
;

402 
	}
}

408 * 
	$kmlsh_idx_gë_vecids
 (c⁄° 
kmlsh_idx_t
 * 
lshidx
, 
h
, 
c
)

410  
lshidx
->
≥rm
 +Üshidx->
n
 * 
h
 +Üshidx->
bound¨õs
[h * (lshidx->
n˛u°
 + 1Ë+ 
c
];

411 
	}
}

414 
¬li°_t
 * 
	$kmlsh_m©ch_xvec
 (c⁄° 
kmlsh_t
 * 
lsh
,

415 c⁄° 
kmlsh_idx_t
 * 
lshidx_b
, c⁄° * 
vb
, 
nb
,

416 c⁄° 
kmlsh_idx_t
 * 
lshidx_q
, c⁄° * 
vq
, 
nq
,

417 
k
, 
¡
, 
vec_ty≥
)

419 
h
;

420 
i
, 
c
;

422 
d
 = 
lsh
->d;

423 
n˛u°
 = 
lsh
->nclust;

426 c⁄° * 
vfb
 = (*Ë
vb
;

427 c⁄° * 
vfq
 = (*Ë
vq
;

428 c⁄° * 
vbb
 = (*Ë
vb
;

429 c⁄° * 
vbq
 = (*Ë
vq
;

432 
¬li°_t
 * 
¬li°
 = 
	`¬li°_√w
 (
nq
, 
k
);

434 
h
 = 0 ; h < 
lsh
->
nhash
 ; h++) {

436 
maxnidx_b
 = 
	`kmlsh_idx_gë_maxö˚Œ
 (
lshidx_b
, 
h
);

437 
maxnidx_q
 = 
	`kmlsh_idx_gë_maxö˚Œ
 (
lshidx_q
, 
h
);

441 * 
vbuf_b
 = 
	`fvec_√w
 (
maxnidx_b
 * 
d
);

442 * 
vbuf_q
 = 
	`fvec_√w
 (
maxnidx_q
 * 
d
);

444 
	`¥ötf
 ("max in histo: base=%ld query=%ld (nclust=%d,Çb=%d,Çq=%d)\n",

445 
maxnidx_b
, 
maxnidx_q
, 
n˛u°
, 
nb
, 
nq
);

448 * 
idxtmp
 = 
	`ivec_√w
 (
maxnidx_q
 * 
k
);

449 * 
di°mp
 = 
	`fvec_√w
 (
maxnidx_q
 * 
k
);

451 
	`¥ötf
 ("Grou∞thêve˘‹†ba£d o¿˚Œ %d / %d,ÅhíÉxa˘ sórch\n", 
h
 + 1, 
lsh
->
nhash
);

453 
c
 = 0 ; c < 
n˛u°
 ; c++) {

454 
nvecö˚Œ_b
 = 
	`kmlsh_idx_gë_nvec
 (
lshidx_b
, 
h
, 
c
);

455 
nvecö˚Œ_q
 = 
	`kmlsh_idx_gë_nvec
 (
lshidx_q
, 
h
, 
c
);

456 i‡(
nvecö˚Œ_q
 =0 || 
nvecö˚Œ_b
 == 0)

459 
	`as£π
 (
nvecö˚Œ_b
 <
maxnidx_b
);

460 
	`as£π
 (
nvecö˚Œ_q
 <
maxnidx_q
);

462 * 
vidx_b
 = 
	`kmlsh_idx_gë_vecids
 (
lshidx_b
, 
h
, 
c
);

463 * 
vidx_q
 = 
	`kmlsh_idx_gë_vecids
 (
lshidx_q
, 
h
, 
c
);

465 i‡(
vec_ty≥
 =
KMLSH_VECTYPE_FVEC
) {

466 
	`fvec_˝y_subve˘‹s
 (
vfb
, 
vidx_b
, 
d
, 
nvecö˚Œ_b
, 
vbuf_b
);

467 
	`fvec_˝y_subve˘‹s
 (
vfq
, 
vidx_q
, 
d
, 
nvecö˚Œ_q
, 
vbuf_q
);

468 } i‡(
vec_ty≥
 =
KMLSH_VECTYPE_BVEC
) {

469 
	`b2fvec_˝y_subve˘‹s
 (
vbb
, 
vidx_b
, 
d
, 
nvecö˚Œ_b
, 
vbuf_b
);

470 
	`b2fvec_˝y_subve˘‹s
 (
vbq
, 
vidx_q
, 
d
, 
nvecö˚Œ_q
, 
vbuf_q
);

471 } 
	`as£π
 (0);

474 
k2
 = (
k
 < 
nvecö˚Œ_b
 ? k :Çvecincell_b);

475 
	`k¬_fuŒ_thªad
 (2, 
nvecö˚Œ_q
, 
nvecö˚Œ_b
, 
d
, 
k2
, 
vbuf_b
, 
vbuf_q
,

476 
NULL
, 
idxtmp
, 
di°mp
, 
¡
);

480 
i
 = 0 ; i < 
k2
 * 
nvecö˚Œ_q
 ; i++)

481 
idxtmp
[
i
] = 
vidx_b
[idxtmp[i]];

484 
i
 = 0 ; i < 
nvecö˚Œ_q
 ; i++)

485 
	`¬li°_addn
 (
¬li°
, 
vidx_q
[
i
], 
k2
, 
idxtmp
 + i * k2, 
di°mp
 + i * k2);

488 
	`‰ì
 (
vbuf_b
);

489 
	`‰ì
 (
vbuf_q
);

490 
	`‰ì
 (
idxtmp
);

491 
	`‰ì
 (
di°mp
);

493  
¬li°
;

494 
	}
}

497 
¬li°_t
 * 
	$kmlsh_m©ch_bvec
 (c⁄° 
kmlsh_t
 * 
lsh
,

498 c⁄° 
kmlsh_idx_t
 * 
lshidx_b
, c⁄° * 
vb
, 
nb
,

499 c⁄° 
kmlsh_idx_t
 * 
lshidx_q
, c⁄° * 
vq
, 
nq
,

500 
k
, 
¡
)

502  
	`kmlsh_m©ch_xvec
 (
lsh
, 
lshidx_b
, (*Ë
vb
, 
nb
, 
lshidx_q
,

503 (*Ë
vq
, 
nq
, 
k
, 
¡
, 
KMLSH_VECTYPE_BVEC
);

504 
	}
}

507 
¬li°_t
 * 
	$kmlsh_m©ch_fvec
 (c⁄° 
kmlsh_t
 * 
lsh
,

508 c⁄° 
kmlsh_idx_t
 * 
lshidx_b
, c⁄° * 
vb
, 
nb
,

509 c⁄° 
kmlsh_idx_t
 * 
lshidx_q
, c⁄° * 
vq
, 
nq
,

510 
k
, 
¡
)

512  
	`kmlsh_m©ch_xvec
 (
lsh
, 
lshidx_b
, (*Ë
vb
, 
nb
, 
lshidx_q
,

513 (*Ë
vq
, 
nq
, 
k
, 
¡
, 
KMLSH_VECTYPE_FVEC
);

514 
	}
}

517 
¬li°_t
 * 
	$kmlsh_™n_xvec
 (c⁄° * 
vb
, 
nb
,

518 c⁄° * 
vq
, 
nq
,

519 
d
, 
k
, 
nhash
, 
¡
, 
vec_ty≥
)

522 
n˛u°
 = (Ë
	`sqπ
 (
nb
);

523 
∆ó∫
 = 
n˛u°
 * 100;

524 i‡(
∆ó∫
 > 
nb
) {

525 
	`Ârötf
 (
°dîr
, "Warning: should use more vector inÜearning set\n");

526 
∆ó∫
 = 
nb
;

529 
kmlsh_t
 * 
lsh
 = 
	`kmlsh_√w
 (
nhash
, 
n˛u°
, 
d
);

530 
	`kmlsh_À¨n_xvec
 (
lsh
, 
nb
, 
∆ó∫
, 
vb
, 
¡
, 
vec_ty≥
);

533 
kmlsh_idx_t
 * 
lshidx_b
 = 
	`kmlsh_idx_√w_compûe_xvec
 (
lsh
, 
vb
, 
nb
, 
¡
, 
vec_ty≥
);

534 
kmlsh_idx_t
 * 
lshidx_q
 = 
	`kmlsh_idx_√w_compûe_xvec
 (
lsh
, 
vq
, 
nq
, 
¡
, 
vec_ty≥
);

538 
¬li°_t
 * 
¬li°
 = 
	`kmlsh_m©ch_xvec
 (
lsh
, 
lshidx_b
, 
vb
, 
nb
, 
lshidx_q
, 
vq
, 
nq
, 
k
, 
¡
, 
vec_ty≥
);

540 
	`kmlsh_dñëe
 (
lsh
);

542  
¬li°
;

543 
	}
}

546 
¬li°_t
 * 
	$kmlsh_™n_bvec
 (c⁄° * 
vb
, 
nb
,

547 c⁄° * 
vq
, 
nq
,

548 
d
, 
k
, 
nhash
, 
¡
)

550  
	`kmlsh_™n_xvec
 ( (*Ë
vb
, 
nb
, (*Ë
vq
, 
nq
, 
d
, 
k
, 
nhash
, 
¡
, 
KMLSH_VECTYPE_BVEC
);

551 
	}
}

554 
¬li°_t
 * 
	$kmlsh_™n_fvec
 (c⁄° * 
vb
, 
nb
,

555 c⁄° * 
vq
, 
nq
,

556 
d
, 
k
, 
nhash
, 
¡
)

558  
	`kmlsh_™n_xvec
 ( (*Ë
vb
, 
nb
, (*Ë
vq
, 
nq
, 
d
, 
k
, 
nhash
, 
¡
, 
KMLSH_VECTYPE_FVEC
);

559 
	}
}

564 
	#KMLSH_WRITE_ERROR
(
ã°
) {if (!test) { \

565 
	`Ârötf
 (
°dîr
, "# kmlsh_wrôe: I/OÉº‹ wôh fûê%s\n", 
fûíame
); \

566 
	`exô
 (1); }}

	)

568 
	#KMLSH_READ_ERROR
(
ã°
) {if (!test) { \

569 
	`Ârötf
 (
°dîr
, "# kmlsh_ªad: I/OÉº‹ wôh fûê%s\n", 
fûíame
); \

570 
	`exô
 (1); }}

	)

572 
	#KMLSH_IDX_WRITE_ERROR
(
ã°
) {if (!test) { \

573 
	`Ârötf
 (
°dîr
, "# kmlsh_idx_wrôe: I/OÉº‹ wôh fûê%s\n", 
fûíame
); \

574 
	`exô
 (1); }}

	)

576 
	#KMLSH_IDX_READ_ERROR
(
ã°
) {if (!test) { \

577 
	`Ârötf
 (
°dîr
, "# kmlsh_idx_ªad: I/OÉº‹ wôh fûê%s\n", 
fûíame
); \

578 
	`exô
 (1); }}

	)

583 
	$kmlsh_wrôe
 (c⁄° * 
fûíame
, c⁄° 
kmlsh_t
 * 
lsh
)

585 
h
, 
ªt
;

586 
FILE
 * 
f
 = 
	`f›í
 (
fûíame
, "w");

587 
	`KMLSH_WRITE_ERROR
 (
f
);

589 
h
 = 0 ; h < 
lsh
->
nhash
 ; h++) {

590 
ªt
 = 
	`fvec_fwrôe
(
f
, 
lsh
->
˚¡roids
[
h
],Üsh->
n˛u°
 *Üsh->
d
);

591 
	`KMLSH_WRITE_ERROR
 (
ªt
 == 0);

593 
	`f˛o£
 (
f
);

594 
	}
}

597 
	$kmlsh_ªad
 (c⁄° * 
fûíame
, c⁄° 
kmlsh_t
 * 
lsh
)

599 
h
, 
ªt
;

600 
FILE
 * 
f
 = 
	`f›í
 (
fûíame
, "r");

601 
	`KMLSH_READ_ERROR
 (
f
);

603 
h
 = 0 ; h < 
lsh
->
nhash
 ; h++) {

604 
lsh
->
˚¡roids
[
h
] = 
	`fvec_√w
 (lsh->
d
 *Üsh->
n˛u°
);

605 
ªt
 = 
	`fvec_‰ód
 (
f
, 
lsh
->
˚¡roids
[
h
],Üsh->
d
 *Üsh->
n˛u°
);

606 
	`KMLSH_READ_ERROR
 (
ªt
 =
lsh
->
n˛u°
 *Üsh->
d
);

608 
	`f˛o£
 (
f
);

609 
	}
}

612 
	$kmlsh_idx_wrôe
 (c⁄° * 
fûíame
, c⁄° 
kmlsh_idx_t
 * 
lshidx
)

614 
h
, 
ªt
;

615 
FILE
 * 
f
 = 
	`f›í
 (
fûíame
, "w");

616 
	`KMLSH_IDX_WRITE_ERROR
 (
f
);

619 
h
 = 0 ; h < 
lshidx
->
nhash
 ; h++) {

620 
ªt
 = 
	`ivec_fwrôe
 (
f
, 
lshidx
->
≥rm
 + 
h
 *Üshidx->
n
,Üshidx->n);

621 
	`KMLSH_IDX_WRITE_ERROR
 (
ªt
 == 0);

623 
ªt
 = 
	`ivec_fwrôe
 (
f
, 
lshidx
->
bound¨õs
 + 
h
 * (lshidx->
n˛u°
 + 1),Üshidx->nclust + 1);

624 
	`KMLSH_IDX_WRITE_ERROR
 (
ªt
 =
lshidx
->
n˛u°
 + 1);

626 
	`f˛o£
 (
f
);

627 
	}
}

630 
	$kmlsh_idx_ªad
 (c⁄° * 
fûíame
, 
kmlsh_idx_t
 * 
lshidx
)

632 
h
, 
ªt
;

633 
FILE
 * 
f
 = 
	`f›í
 (
fûíame
, "r");

634 
	`KMLSH_IDX_READ_ERROR
 (
f
);

636 
h
 = 0 ; h < 
lshidx
->
nhash
 ; h++) {

637 
ªt
 = 
	`ivec_‰ód
 (
f
, 
lshidx
->
≥rm
 + 
h
 *Üshidx->
n
,Üshidx->n);

638 
	`KMLSH_IDX_READ_ERROR
 (
ªt
 =
lshidx
->
n
);

640 
ªt
 = 
	`ivec_‰ód
 (
f
, 
lshidx
->
bound¨õs
 + 
h
 * (lshidx->
n˛u°
 + 1),Üshidx->nclust + 1);

641 
	`KMLSH_IDX_READ_ERROR
 (
ªt
 =
lshidx
->
n˛u°
 + 1);

644 
	`f˛o£
 (
f
);

645 
	}
}

647 #unde‡
KMLSH_WRITE_ERROR


648 #unde‡
KMLSH_READ_ERROR


649 #unde‡
KMLSH_IDX_WRITE_ERROR


650 #unde‡
KMLSH_IDX_READ_ERROR


	@kmlsh.h

39 #i‚de‡
__kmlsh_h


40 
	#__kmlsh_h


	)

62 
	s¬li°_s
 {

63 
	mn
;

64 
	mk
;

65 * 
	midx
;

66 * 
	mdis
;

69 
¬li°_s
 
	t¬li°_t
;

72 
¬li°_t
 * 
¬li°_√w
 (
n
, 
k
);

75 
¬li°_t
 * 
¬li°_√w_nﬂŒoc
 (
n
, 
k
);

78 
¬li°_dñëe
 (
¬li°_t
 * 
l
);

81 
¬li°_addn
 (
¬li°_t
 * 
l
, 
 o
, 
n
, * 
idx
, * 
dis
);

87 
	#KMLSH_NT
 0x000000ff

	)

88 
	#KMLSH_QUIET
 0x00010000

	)

89 
	#KMLSH_WRITE_INTER_NHASH
 0x00020000

	)

92 
	#KMLSH_BLOCK_SIZE
 256

	)

93 
	#KMLSH_NB_ITER_MAX
 8

	)

95 
	#KMLSH_VECTYPE_FVEC
 0

	)

96 
	#KMLSH_VECTYPE_BVEC
 1

	)

100 
	skmlsh_s
 {

101 
	mnhash
;

102 
	md
;

103 
	mn˛u°
;

104 ** 
	m˚¡roids
;

107 
kmlsh_s
 
	tkmlsh_t
;

112 
	skmlsh_idx_s
 {

113 
	mnhash
;

114 
	mn
;

115 
	mn˛u°
;

116 * 
	m≥rm
;

117 * 
	mbound¨õs
;

120 
kmlsh_idx_s
 
	tkmlsh_idx_t
;

124 
kmlsh_t
 * 
kmlsh_√w
 (
nhash
, 
n˛u°
, 
d
);

127 
kmlsh_dñëe
 (
kmlsh_t
 * 
lsh
);

133 
kmlsh_À¨n_xvec
 (
kmlsh_t
 * 
lsh
, 
n
, 
∆ó∫
, c⁄° * 
v
,

134 
Êags
, 
vec_ty≥
);

137 
kmlsh_t
 * 
kmlsh_√w_À¨n_bvec
 (
nhash
, 
n˛u°
, 
d
, 
n
, 
∆ó∫
,

138 c⁄° * 
v
, 
Êags
);

140 
kmlsh_t
 * 
kmlsh_√w_À¨n_fvec
 (
nhash
, 
n˛u°
, 
d
, 
n
, 
∆ó∫
,

141 c⁄° * 
v
, 
Êags
);

144 
¬li°_t
 * 
kmlsh_m©ch_xvec
 (c⁄° 
kmlsh_t
 * 
lsh
,

145 c⁄° 
kmlsh_idx_t
 * 
lshidx_b
, c⁄° * 
vb
, 
nb
,

146 c⁄° 
kmlsh_idx_t
 * 
lshidx_q
, c⁄° * 
vq
, 
nq
,

147 
k
, 
¡
, 
vec_ty≥
);

149 
¬li°_t
 * 
kmlsh_m©ch_bvec
 (c⁄° 
kmlsh_t
 * 
lsh
,

150 c⁄° 
kmlsh_idx_t
 * 
lshidx_b
, c⁄° * 
vb
, 
nb
,

151 c⁄° 
kmlsh_idx_t
 * 
lshidx_q
, c⁄° * 
vq
, 
nq
,

152 
k
, 
¡
);

154 
¬li°_t
 * 
kmlsh_m©ch_fvec
 (c⁄° 
kmlsh_t
 * 
lsh
,

155 c⁄° 
kmlsh_idx_t
 * 
lshidx_b
, c⁄° * 
vb
, 
nb
,

156 c⁄° 
kmlsh_idx_t
 * 
lshidx_q
, c⁄° * 
vq
, 
nq
,

157 
k
, 
¡
);

162 
¬li°_t
 * 
kmlsh_™n_xvec
 (c⁄° * 
vb
, 
nb
,

163 c⁄° * 
vq
, 
nq
,

164 
d
, 
k
, 
nhash
, 
Êags
, 
vec_ty≥
);

166 
¬li°_t
 * 
kmlsh_™n_bvec
 (c⁄° * 
vb
, 
nb
,

167 c⁄° * 
vq
, 
nq
,

168 
d
, 
k
, 
nhash
, 
Êags
);

170 
¬li°_t
 * 
kmlsh_™n_fvec
 (c⁄° * 
vb
, 
nb
,

171 c⁄° * 
vq
, 
nq
,

172 
d
, 
k
, 
nhash
, 
Êags
);

176 
kmlsh_idx_t
 * 
kmlsh_idx_√w
 (c⁄° 
kmlsh_t
 * 
lsh
, 
n
);

177 
kmlsh_idx_dñëe
 (
kmlsh_idx_t
 * 
lshidx
);

181 
kmlsh_idx_t
 * 
kmlsh_idx_√w_compûe_xvec
 (c⁄° 
kmlsh_t
 * 
lsh
, c⁄° * 
v
, 
n
, 
Êags
, 
vec_ty≥
);

183 
kmlsh_idx_t
 * 
kmlsh_idx_√w_compûe_bvec
 (c⁄° 
kmlsh_t
 * 
lsh
, c⁄° * 
v
, 
n
, 
Êags
);

185 
kmlsh_idx_t
 * 
kmlsh_idx_√w_compûe_fvec
 (c⁄° 
kmlsh_t
 * 
lsh
, c⁄° * 
v
, 
n
, 
Êags
);

188 
kmlsh_idx_gë_nvec
 (c⁄° 
kmlsh_idx_t
 * 
lshidx
, 
h
, 
c
);

191 
kmlsh_idx_gë_maxö˚Œ
 (c⁄° 
kmlsh_idx_t
 * 
lshidx
, 
h
);

195 * 
kmlsh_idx_gë_vecids
 (c⁄° 
kmlsh_idx_t
 * 
lshidx
, 
h
, 
c
);

199 
kmóns_cohash_xvec
 (c⁄° 
kmlsh_t
 * 
lsh
, 
h
, c⁄° * 
v
, 
n
,

200 * 
≥rm
, * 
bound¨õs
, 
Êags
, 
vec_ty≥
);

202 
kmóns_cohash_bvec
 (c⁄° 
kmlsh_t
 * 
lsh
, 
h
, c⁄° * 
v
, 
n
,

203 * 
≥rm
, * 
bound¨õs
, 
Êags
);

205 
kmóns_cohash_fvec
 (c⁄° 
kmlsh_t
 * 
lsh
, 
h
, c⁄° * 
v
, 
n
,

206 * 
≥rm
, * 
bound¨õs
, 
Êags
);

213 
kmlsh_wrôe
 (c⁄° * 
fûíame
, c⁄° 
kmlsh_t
 * 
lsh
);

216 
kmlsh_ªad
 (c⁄° * 
fûíame
, c⁄° 
kmlsh_t
 * 
lsh
);

219 
kmlsh_idx_wrôe
 (c⁄° * 
fûíame
, c⁄° 
kmlsh_idx_t
 * 
lshidx
);

222 
kmlsh_idx_ªad
 (c⁄° * 
fûíame
, 
kmlsh_idx_t
 * 
lshidx
);

	@machinedeps.c

39 
	~<m©h.h
>

40 
	~<°dio.h
>

41 
	~<°rög.h
>

42 
	~<sys/ty≥s.h
>

43 
	~<as£π.h
>

45 
	~<sys/time.h
>

48 
	~"machöedïs.h
"

51 #ifde‡
__löux__


53 
	#__USE_GNU


	)

54 
	~<sched.h
>

56 
	$cou¡_˝u
 ()

58 
˝u_£t_t
 
£t
;

59 
	`sched_gëafföôy
 (0,  (
˝u_£t_t
), &
£t
);

60 
i
, 
cou¡
 = 0;

61 
i
 = 0; i < 
CPU_SETSIZE
; i++)

62 i‡(
	`CPU_ISSET
 (
i
, &
£t
))

63 
cou¡
++;

64  
cou¡
;

65 
	}
}

68 #ñi‡
deföed
(
__APPLE__
)

70 
	~<sys/ty≥s.h
>

71 
	~<sys/sys˘l.h
>

74 
	$cou¡_˝u
 () {

75 
cou¡
=-1;

76 
size_t
 
cou¡_size
=(
cou¡
);

77 
	`sys˘lby«me
("hw.n˝u",&
cou¡
,&
cou¡_size
,
NULL
,0);

78  
cou¡
;

79 
	}
}

83 
	$cou¡_˝u
() {

85 
	}
}

90 #i‚de‡
__APPLE__


92 
	$log2
(
x
) {

93  
	`log
(
x
)/
M_LN2
;

94 
	}
}

99 #i‚de‡
__löux__


100 *
	$memÆign
 (
size_t
 
ign‹ed
, size_à
nbyãs
)

102  
	`mÆloc
 (
nbyãs
);

103 
	}
}

111 #ifde‡
__löux__


114 *
	m±r
;

115 
size_t
 
	msize
;

116 } 
	tÆloc_block_t
;

120 
	míabÀd
;

121 
mÆloc_°©s_t
 
	ms
;

123 
Æloc_block_t
 *
	mblocks
;

125 
	mn
,
	m«
;

129 (*
	mªÆ_‰ì
Ë(*
	m__±r
, c⁄° 
	m__mÆloc_±r_t
);

130 *(*
	mªÆ_mÆloc
Ë(
size_t
 
	m__size
, c⁄° 
	m__mÆloc_±r_t
);

131 *(*
	mªÆ_ªÆloc
Ë(*
	m__±r
, 
size_t
 
	m__size
, c⁄° 
	m__mÆloc_±r_t
);

132 *(*
	mªÆ_memÆign
Ë(
size_t
 
	m__Æignmít
, size_à
	m__size
, c⁄° 
	m__mÆloc_±r_t
);

134 } 
	gmsc
={0};

137 *
cﬁÀ˘‹_memÆign
 (
size_t
 
Æignmít
, size_à
size
, c⁄° 
__mÆloc_±r_t
 
f
);

138 *
cﬁÀ˘‹_mÆloc
 (
size_t
 
size
, c⁄° 
__mÆloc_±r_t
 
f
);

139 
cﬁÀ˘‹_‰ì
 (*
±r
, c⁄° 
__mÆloc_±r_t
 
f
);

140 *
cﬁÀ˘‹_ªÆloc
 (*
±r_ö
, 
size_t
 
size
, c⁄° 
__mÆloc_±r_t
 
f
);

144 
	#SET_MALLOC_HOOK
(
‚ame
Ë
__
##‚ame##
_hook
=
cﬁÀ˘‹_
##
	)
fname

145 
	#UNSET_MALLOC_HOOK
(
‚ame
Ë
__
##‚ame##
_hook
=
msc
.
ªÆ_
##
	)
fname

147 
	#SET_MALLOC_HOOKS
 \

148 
	`SET_MALLOC_HOOK
(
‰ì
); \

149 
	`SET_MALLOC_HOOK
(
mÆloc
); \

150 
	`SET_MALLOC_HOOK
(
ªÆloc
); \

151 
	`SET_MALLOC_HOOK
(
memÆign
);

	)

154 
	#UNSET_MALLOC_HOOKS
 \

155 
	`UNSET_MALLOC_HOOK
(
‰ì
); \

156 
	`UNSET_MALLOC_HOOK
(
mÆloc
); \

157 
	`UNSET_MALLOC_HOOK
(
ªÆloc
); \

158 
	`UNSET_MALLOC_HOOK
(
memÆign
);

	)

161 *
	$cﬁÀ˘‹_memÆign
 (
size_t
 
Æignmít
, size_à
size
, c⁄° 
__mÆloc_±r_t
 
f
) {

162 
UNSET_MALLOC_HOOKS
;

163 *
±r
;

165 if(
Æignmít
==1) {

166 
±r
=
	`mÆloc
(
size
);

168 
±r
=
	`memÆign
(
Æignmít
,
size
);

170 
msc
.
s
.
n_Æloc
++;

171 
msc
.
s
.
dñè_Æloc
+=
size
;

172 if(
msc
.
s
.
dñè_Æloc
>msc.s.
max_Æloc
)

173 
msc
.
s
.
max_Æloc
=msc.s.
dñè_Æloc
;

175 if(
msc
.
n
>=msc.
«
) {

176 
msc
.
«
=msc.na<8 ? 8 : msc.na*2;

177 
msc
.
blocks
=
	`ªÆloc
(msc.blocks,(*msc.blocks)*msc.
«
);

178 
	`as£π
(
msc
.
blocks
);

181 
msc
.
blocks
[msc.
n
].
±r
=ptr;

182 
msc
.
blocks
[msc.
n
].
size
=size;

183 
msc
.
n
++;

185 
SET_MALLOC_HOOKS
;

186  
±r
;

187 
	}
}

189 *
	$cﬁÀ˘‹_mÆloc
 (
size_t
 
size
, c⁄° 
__mÆloc_±r_t
 
f
) {

190  
	`cﬁÀ˘‹_memÆign
(1,
size
,
f
);

191 
	}
}

194 
	$cﬁÀ˘‹_‰ì
 (*
±r
, c⁄° 
__mÆloc_±r_t
 
f
) {

196 
UNSET_MALLOC_HOOKS
;

198 
	`‰ì
(
±r
);

200 
msc
.
s
.
n_‰ì
++;

203 
i
;

204 
i
=
msc
.
n
-1;i>=0;i--)

205 if(
msc
.
blocks
[
i
].
±r
==ptr) ;

207 if(
i
<0) {

208 
msc
.
s
.
n_u¡øcked_‰ìs
++;

210 
msc
.
s
.
dñè_Æloc
-=msc.
blocks
[
i
].
size
;

211 
msc
.
blocks
[
i
]=msc.blocks[msc.
n
-1];

212 
msc
.
n
--;

215 
SET_MALLOC_HOOKS
;

217 
	}
}

221 *
	$cﬁÀ˘‹_ªÆloc
 (*
±r_ö
, 
size_t
 
size
, c⁄° 
__mÆloc_±r_t
 
f
) {

223 
UNSET_MALLOC_HOOKS


225 *
±r
=
	`ªÆloc
(
±r_ö
,
size
);

228 
i
;

229 
i
=
msc
.
n
-1;i>=0;i--)

230 if(
msc
.
blocks
[
i
].
±r
==
±r_ö
) ;

232 
msc
.
s
.
n_ªÆloc
++;

234 if(
i
<0) {

235 
msc
.
s
.
n_u¡øcked_‰ìs
++;

237 
msc
.
s
.
dñè_Æloc
-=msc.
blocks
[
i
].
size
+size;

239 if(
msc
.
s
.
dñè_Æloc
>msc.s.
max_Æloc
)

240 
msc
.
s
.
max_Æloc
=msc.s.
dñè_Æloc
;

242 
msc
.
blocks
[
i
].
±r
=ptr;

245 
SET_MALLOC_HOOKS


247  
±r
;

248 
	}
}

251 
	#GET_MALLOC_HOOK
(
‚ame
Ë
msc
.
ªÆ_
##‚ame=
__
##‚ame##
_hook
; 
	`SET_MALLOC_HOOK
(‚ame)

	)

255 
	$mÆloc_°©s_begö
() {

256 
	`as£π
(!
msc
.
íabÀd
 || "malloc_stats_begin: collectorÉnabledálready");

257 
msc
.
íabÀd
=1;

259 
	`mem£t
(&
msc
.
s
,0,(
mÆloc_°©s_t
));

260 
msc
.
n
=msc.
«
=0;

261 
msc
.
blocks
=
NULL
;

263 
	`¥ötf
("initial hooks: %p %p %p %p\n",

264 
__‰ì_hook
,

265 
__mÆloc_hook
,

266 
__ªÆloc_hook
,

267 
__memÆign_hook
);

270 
	`GET_MALLOC_HOOK
(
‰ì
);

271 
	`GET_MALLOC_HOOK
(
mÆloc
);

272 
	`GET_MALLOC_HOOK
(
ªÆloc
);

273 
	`GET_MALLOC_HOOK
(
memÆign
);

275 
	}
}

278 
mÆloc_°©s_t
 
	$mÆloc_°©s_íd
() {

279 
	`as£π
(
msc
.
íabÀd
 || "malloc_stats_begin: collectorÇotÉnabled");

280 
msc
.
íabÀd
=0;

282 
UNSET_MALLOC_HOOKS
;

284 
	`‰ì
(
msc
.
blocks
);

286  
msc
.
s
;

287 
	}
}

291 
	$mÆloc_°©s_begö
() {

293 
	}
}

295 
mÆloc_°©s_t
 
	$mÆloc_°©s_íd
() {

296 
mÆloc_°©s_t
 
s
;

297 
	`mem£t
(&
s
,0,(
mÆloc_°©s_t
));

298  
s
;

299 
	}
}

305 
	$gëmûli£cs
()

307 
timevÆ
 
tv
;

308 
	`gëtimeofday
 (&
tv
,
NULL
);

309  
tv
.
tv_£c
*1e3 +tv.
tv_u£c
*1e-3;

310 
	}
}

318 
	~<omp.h
>

321 
compuã_èsks
 (
n
, 
¡hªad
,

322 (*
èsk_fun
Ë(*
¨g
, 
tid
, 
i
),

323 *
èsk_¨g
)

325 
i
;

327 
	`omp_£t_num_thªads
(
¡hªad
);

329 #¥agm®
omp
 
∑øŒñ
 
	`scheduÀ
(
dy«mic
)

330 
i
 = 0; i < 
n
; i++)

331 (*
èsk_fun
)(
èsk_¨g
, 
	`omp_gë_thªad_num
(), 
i
);

333 
	}
}

	@machinedeps.h

39 #i‚de‡
MACHINEDEPS_H_INCLUDED


40 
	#MACHINEDEPS_H_INCLUDED


	)

42 #ifde‡
__APPLE__


43 
	#HAVE_QSORT_R


	)

46 #ifde‡
__löux__


47 
	#HAVE_TLS


	)

49 
	#__thªad


	)

59 
cou¡_˝u
();

61 #i‚de‡
__APPLE__


63 
log2
(
x
);

67 #ifde‡
__löux__


68 
	~<mÆloc.h
>

70 
	~<°dlib.h
>

73 *
memÆign
 (
size_t
 
ign‹ed
, size_à
nbyãs
);

85 
	mn_Æloc
,
	mn_‰ì
,
	mn_ªÆloc
;

86 
size_t
 
	mdñè_Æloc
;

88 
size_t
 
	mmax_Æloc
;

89 
	mn_u¡øcked_‰ìs
;

91 } 
	tmÆloc_°©s_t
;

94 
mÆloc_°©s_begö
 ();

96 
mÆloc_°©s_t
 
mÆloc_°©s_íd
 ();

101 
gëmûli£cs
();

112 
compuã_èsks
 (
n
, 
¡hªad
,

113 (*
èsk_fun
Ë(*
¨g
, 
tid
, 
i
),

114 *
èsk_¨g
);

	@matrix.c

39 
	~<°dio.h
>

40 
	~<°dlib.h
>

41 
	~<as£π.h
>

42 
	~<m©h.h
>

43 
	~<°rög.h
>

44 
	~<sys/time.h
>

46 
	~"ve˘‹.h
"

47 
	~"m©rix.h
"

48 
	~"s‹tög.h
"

49 
	~"machöedïs.h
"

50 
	~"eigs.h
"

52 
	#NEWA
(
ty≥
,
n
Ë—y≥*)
	`mÆloc
(—y≥)*“))

	)

53 
	#NEWAC
(
ty≥
,
n
Ë—y≥*)
	`ˇŒoc
(—y≥),“))

	)

54 
	#NEW
(
ty≥
Ë
	`NEWA
—y≥,1)

	)

59 
	#ªÆ
 

	)

60 
	#öãgî
 
FINTEGER


	)

62 
sgemm_
 (*
å™ß
, *
å™sb
, 
öãgî
 * 
m
, integer *

63 
n
, 
öãgî
 * 
k
, 
ªÆ
 * 
Æpha
, c⁄°Ñó»* 
a
, i¡egî * 
lda
,

64 c⁄° 
ªÆ
 * 
b
, 
öãgî
 * 
ldb
,Ñó»* 
bëa
,Ñó»* 
c__
,

65 
öãgî
 * 
ldc
);

67 
ssyev_
 (*
jobz
, *
u∂o
, 
öãgî
 * 
n
, 
ªÆ
 * 
a
,

68 
öãgî
 * 
lda
, 
ªÆ
 * 
w
,Ñó»* 
w‹k
, i¡egî * 
lw‹k
,

69 
öãgî
 * 
öfo
);

72 
sgeqrf_
 (
öãgî
 * 
m
, i¡egî * 
n
, 
ªÆ
 * 
a
, i¡egî * 
lda
,

73 
ªÆ
 * 
èu
,Ñó»* 
w‹k
, 
öãgî
 * 
lw‹k
, i¡egî * 
öfo
);

75 
¶¨·_
 (*
dúe˘
, *
°‹ev
, 
öãgî
 * 
n
, integer *

76 
k
, 
ªÆ
 * 
v
, 
öãgî
 * 
ldv
,Ñó»* 
èu
,Ñó»* 
t
, i¡egî * 
ldt
);

78 
¶¨fb_
 (*
side
, *
å™s
, *
dúe˘
, *
°‹ev
, 
öãgî
 * 
m
,

79 
öãgî
 * 
n
, i¡egî * 
k
, 
ªÆ
 * 
v
, i¡egî * 
ldv
,Ñó»* 
t
,

80 
öãgî
 * 
ldt
, 
ªÆ
 * 
c__
, i¡egî * 
ldc
,Ñó»* 
w‹k
,

81 
öãgî
 * 
ldw‹k
);

83 
ssyrk_
(*
u∂o
, *
å™s
, 
öãgî
 *
n
, i¡egî *
k
,

84 
ªÆ
 *
Æpha
,Ñó»*
a
, 
öãgî
 *
lda
,Ñó»*
bëa
,Ñó»*
c__
, integer *

85 
ldc
);

88 
sgemv_
(c⁄° *
å™s
, 
öãgî
 *
m
, i¡egî *
n
, 
ªÆ
 *
Æpha
,

89 c⁄° 
ªÆ
 *
a
, 
öãgî
 *
lda
, c⁄°Ñó»*
x
, i¡egî *
öcx
,Ñó»*
bëa
,Ñó»*
y
,

90 
öãgî
 *
öcy
);

93 
sgñs_
(*
å™s
, 
öãgî
 *
m
, i¡egî *
n
, integer *

94 
ƒhs
, *
a
, 
öãgî
 *
lda
, *
b
, i¡egî *
ldb
,

95 *
w‹k
, 
öãgî
 *
lw‹k
, i¡egî *
öfo
);

98 #unde‡
ªÆ


99 #unde‡
öãgî


107 *
	$fm©_√w
 (
ƒow
, 
ncﬁ
)

109 *
m
 = 
	`fvec_√w
 (
ƒow
 * ()
ncﬁ
);

110  
m
;

111 
	}
}

113 *
	$fm©_√w_0
 (
ƒow
, 
ncﬁ
)

115  
	`fvec_√w_0
 (
ƒow
 * ()
ncﬁ
);

116 
	}
}

119 
	$fm©_mul_fuŒ
(c⁄° *
À·
, c⁄° *
right
,

120 
m
, 
n
, 
k
,

121 c⁄° *
å™•
,

122 *
ªsu…
) {

124 
	`fm©_mul_fuŒ_n⁄∑cked
(
À·
, 
right
, 
m
, 
n
, 
k
, 
å™•
,

125 (
å™•
[0] ='N' ? 
m
 : 
k
),

126 (
å™•
[1] ='N' ? 
k
 : 
n
),

127 
ªsu…
, 
m
);

130 
	}
}

132 
	$fm©_mul_fuŒ_n⁄∑cked
(c⁄° *
À·
, c⁄° *
right
,

133 
mi
, 
ni
, 
ki
,

134 c⁄° *
å™•
,

135 
ld_À·
, 
ld_right
,

136 *
ªsu…
,

137 
ld_ªsu…
) {

139 
Æpha
 = 1;

140 
bëa
 = 0;

141 
FINTEGER
 
m
=
mi
,
n
=
ni
,
k
=
ki
;

142 
FINTEGER
 
lda
 = 
ld_À·
;

143 
FINTEGER
 
ldb
 = 
ld_right
;

144 
FINTEGER
 
ldc
 = 
ld_ªsu…
;

146 
	`sgemm_
 ((*)
å™•
, (*)—øn•+1), &
m
, &
n
, &
k
,

147 &
Æpha
, 
À·
, &
lda
, 
right
, &
ldb
, &
bëa
, 
ªsu…
, &
ldc
);

149 
	}
}

152 * 
	$fm©_√w_mul_fuŒ
(c⁄° *
À·
, c⁄° *
right
,

153 
m
, 
n
, 
k
,

154 c⁄° *
å™•
) {

155 *
ªsu…
=
	`fm©_√w
(
m
,
n
);

157 
	`fm©_mul_fuŒ
(
À·
, 
right
, 
m
, 
n
, 
k
, 
å™•
, 
ªsu…
);

159  
ªsu…
;

160 
	}
}

164 
	$fm©_mul
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
, *
mout
) {

165 
	`fm©_mul_fuŒ
(
À·
,
right
,
m
,
n
,
k
,"NN",
mout
);

166 
	}
}

168 
	$fm©_mul_é
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
, *
mout
) {

169 
	`fm©_mul_fuŒ
(
À·
,
right
,
m
,
n
,
k
,"TN",
mout
);

170 
	}
}

172 
	$fm©_mul_å
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
, *
mout
) {

173 
	`fm©_mul_fuŒ
(
À·
,
right
,
m
,
n
,
k
,"NT",
mout
);

174 
	}
}

176 
	$fm©_mul_ér
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
, *
mout
) {

177 
	`fm©_mul_fuŒ
(
À·
,
right
,
m
,
n
,
k
,"TT",
mout
);

178 
	}
}

180 * 
	$fm©_√w_mul
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
) {

181  
	`fm©_√w_mul_fuŒ
(
À·
,
right
,
m
,
n
,
k
,"NN");

182 
	}
}

184 * 
	$fm©_√w_mul_é
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
) {

185  
	`fm©_√w_mul_fuŒ
(
À·
,
right
,
m
,
n
,
k
,"TN");

186 
	}
}

188 * 
	$fm©_√w_mul_å
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
) {

189  
	`fm©_√w_mul_fuŒ
(
À·
,
right
,
m
,
n
,
k
,"NT");

190 
	}
}

192 * 
	$fm©_√w_mul_ér
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
) {

193  
	`fm©_√w_mul_fuŒ
(
À·
,
right
,
m
,
n
,
k
,"TT");

194 
	}
}

198 
	$fm©_¥öt
 (c⁄° *
a
, 
ƒow
, 
ncﬁ
)

200 
i
, 
j
;

202 
	`¥ötf
 ("[");

203 
i
 = 0; i < 
ƒow
; i++) {

204 
j
 = 0; j < 
ncﬁ
; j++)

205 
	`¥ötf
 ("%.5g ", 
a
[
i
 + 
ƒow
 * 
j
]);

206 i‡(
i
 =
ƒow
 - 1)

207 
	`¥ötf
 ("]\n");

209 
	`¥ötf
 (";\n");

211 
	}
}

213 
	$fm©_¥öt_å™po£d
(c⁄° *
a
, 
ƒow
, 
ncﬁ
)

215 
i
, 
j
;

217 
	`¥ötf
 ("[");

218 
i
 = 0; i < 
ƒow
; i++) {

219 
j
 = 0; j < 
ncﬁ
; j++)

220 
	`¥ötf
 ("%.5g ", 
a
[
i
 * 
ncﬁ
 + 
j
]);

221 i‡(
i
 =
ƒow
 - 1)

222 
	`¥ötf
 ("]\n");

224 
	`¥ötf
 (";\n");

226 
	}
}

234 *
	$fm©_gë_subm©rix
 (c⁄° *
a
, 
ƒow
,

235 
ƒow_out
,

236 
ncﬁ
) {

237 
i
;

238 *
b
=
	`fm©_√w
(
ƒow_out
,
ncﬁ
);

240 
i
=0;i<
ncﬁ
;i++)

241 
	`mem˝y
(
b
+
i
*
ƒow_out
,
a
+i*
ƒow
,nrow_out*(*a));

243  
b
;

244 
	}
}

246 *
	$im©_gë_subm©rix
 (c⁄° *
a
, 
ƒow
,

247 
ƒow_out
,

248 
ncﬁ
) {

249 
i
;

250 *
b
=
	`ivec_√w
(
ƒow_out
*()
ncﬁ
);

252 
i
=0;i<
ncﬁ
;i++)

253 
	`mem˝y
(
b
+
i
*
ƒow_out
,
a
+i*
ƒow
,nrow_out*(*a));

255  
b
;

257 
	}
}

260 *
	$fm©_√w_gë_row
 (c⁄° *
a
, 
ƒow
, 
ncﬁ
, 
row
)

262 *
v
 = 
	`fvec_√w
 (
ncﬁ
);

263 
j
;

264 
j
 = 0 ; j < 
ncﬁ
 ; j++)

265 
v
[
j
] = 
a
[
row
 + 
ƒow
 * j];

267  
v
;

268 
	}
}

270 *
	$fm©_√w_gë_rows
 (c⁄° *
a
, 
d
, 
n
,

271 
ƒowout
, c⁄° *
rows
) {

272 *
b
=
	`fm©_√w
(
ƒowout
,
n
);

273 
i
,
j
;

274 
ii
=0;

275 
j
=0;j<
n
;j++) {

276 c⁄° *
aj
 = 
a
 + 
d
*()
j
;

277 
i
=0;i<
ƒowout
;i++)

278 
b
[
ii
++]=
aj
[
rows
[
i
]];

281  
b
;

282 
	}
}

284 
	$fm©_shufÊe_cﬁumns
(*
a
, 
ƒow
, 
ncﬁ
) {

285 
k
,
i
;

286 
i
 = 0; i < 
ncﬁ
 ; i++) {

287 
j
 = 
i
 + 
	`øndom
(Ë% (
ncﬁ
 - i);

289 *
ci
=
a
+
i
*
ƒow
;

290 *
cj
=
a
+
j
*
ƒow
;

291 
k
=0;k<
ƒow
;k++) {

292 
tmp
=
ci
[
k
];

293 
ci
[
k
]=
cj
[k];

294 
cj
[
k
]=
tmp
;

297 
	}
}

300 *
	$fm©_√w_gë_cﬁumns
 (c⁄° *
a
, 
ƒow
, 
ncﬁout
, c⁄° *
cﬁs
) {

301 *
b
 = 
	`fm©_√w
 (
ƒow
, 
ncﬁout
);

302 
	`fm©_gë_cﬁumns
(
a
, 
ƒow
, 
ncﬁout
, 
cﬁs
, 
b
);

303  
b
;

304 
	}
}

306 
	$fm©_gë_rows_cﬁs
(c⁄° *
a
, 
d
,

307 
ƒow
, c⁄° *
rows
,

308 
ncﬁ
, c⁄° *
cﬁs
,

309 *
out
) {

310 
i
, 
j
, 
k
 = 0;

312 
j
 = 0; j < 
ncﬁ
; j++) {

313 c⁄° *
a_cﬁ
 = 
a
 + 
cﬁs
[
j
] * 
d
;

314 
i
 = 0; i < 
ƒow
; i++) {

315 
out
[
k
++] = 
a_cﬁ
[
rows
[
i
]];

319 
	}
}

322 
	$fm©_gë_cﬁumns
 (c⁄° *
a
, 
d
, 
ncﬁout
, c⁄° *
cﬁs
, *
b
) {

323 
j
;

324 
j
=0;j<
ncﬁout
;j++)

325 
	`mem˝y
(
b
 + 
j
 * 
d
,

326 
a
 + 
cﬁs
[
j
] * 
d
,

327 
d
 * (
a
[0]));

328 
	}
}

331 
	$fm©_sum_cﬁumns
 (c⁄° * 
a
, 
ƒow
, 
ncﬁ
, * 
sums
)

333 
i
, 
j
;

334 
	`fvec_0
 (
sums
, 
ncﬁ
);

336 
j
=0 ; j<
ncﬁ
 ; j++)

337 
i
=0 ; i<
ƒow
 ; i++)

338 
sums
[
j
] +
a
[
ƒow
*j+
i
];

339 
	}
}

342 *
	$fm©_√w_sum_cﬁumns
 (c⁄° *
a
, 
ƒow
, 
ncﬁ
)

344 *
sums
 = 
	`fvec_√w
(
ncﬁ
);

346 
	`fm©_sum_cﬁumns
 (
a
, 
ƒow
, 
ncﬁ
, 
sums
);

347  
sums
;

348 
	}
}

352 
	$fm©_sum_rows
 (c⁄° * 
a
, 
ƒow
, 
ncﬁ
, * 
sums
)

354 
i
, 
j
;

355 
	`fvec_0
 (
sums
, 
ƒow
);

357 
j
=0 ; j<
ncﬁ
 ; j++)

358 
i
=0 ; i<
ƒow
 ; i++)

359 
sums
[
i
] +
a
[
ƒow
*
j
+i];

360 
	}
}

363 *
	$fm©_√w_sum_rows
 (c⁄° *
a
, 
ƒow
, 
ncﬁ
)

365 *
sums
 = 
	`fvec_√w
(
ƒow
);

367 
	`fm©_sum_rows
 (
a
, 
ƒow
, 
ncﬁ
, 
sums
);

368  
sums
;

369 
	}
}

371 
	$fm©_ªmove_0_cﬁumns
(*
a
, 
d
, 
n
) {

372 
¬z
 = 0, 
i
;

373 
i
 = 0; i < 
n
; i++) {

374 if(!
	`fvec_Æl_0
(
a
 + 
d
 * 
i
, d)) {

375 if(
¬z
 !
i
)

376 
	`mem˝y
(
a
 + 
d
 * 
¬z
,á + d * 
i
, () * d);

377 
¬z
 ++;

380  
¬z
;

381 
	}
}

383 
	gfú°
 = 1;

385 
	$fm©_n‹mÆize_cﬁumns_l2sqr_pow
(*
a
, 
d
, 
n
, 
pw
) {

386 
i
;

387 
i
 = 0; i < 
n
; i++) {

388 
l2sqr
 = 
	`fvec_n‹m2sqr
(
a
 + 
d
 * 
i
, d);

389 
n‹m
 = 
	`pow
(
l2sqr
, 
pw
);

390 
	`fvec_mul_by
(
a
 + 
d
 * 
i
, d, 
n‹m
);

392 
	}
}

400 *
	$fm©_√w_ønd_gauss
 (
ƒow
, 
ncﬁ
)

402 
i
;

403 *
m
 = 
	`fm©_√w
 (
ƒow
, 
ncﬁ
);

405 
i
 = 0; i < 
ƒow
 * 
ncﬁ
; i++)

406 
m
[
i
] = 
	`gaus§™d
 ();

408  
m
;

409 
	}
}

414 *
	$øndom_‹thog⁄Æ_basis
 (
di
)

416 
FINTEGER
 
d
=
di
;

417 
i
;

421 *
x
 = 
	`fm©_√w_ønd_gauss
 (
d
, d);

423 *
èu
 = 
	`NEWA
 (, 
d
);

428 
lw‹k_quîy
;

429 
FINTEGER
 
lw‹k
 = -1, 
öfo
;

430 
	`sgeqrf_
 (&
d
, &d, 
x
, &d, 
èu
, &
lw‹k_quîy
, &
lw‹k
, &
öfo
);

431 
	`as£π
 (
öfo
 == 0);

433 
lw‹k
 = (Ë
lw‹k_quîy
;

434 *
w‹k
 = 
	`NEWA
 (, 
lw‹k
);

435 
	`sgeqrf_
 (&
d
, &d, 
x
, &d, 
èu
, 
w‹k
, &
lw‹k
, &
öfo
);

436 
	`as£π
 (
öfo
 == 0);

438 
	`‰ì
 (
w‹k
);

444 *
q
 = 
	`NEWAC
 (, 
d
 * d);

447 *
t
 = 
	`NEWA
 (, 
d
 * d);

449 
	`¶¨·_
 ("F", "C", &
d
, &d, 
x
, &d, 
èu
, 
t
, &d);

451 
i
 = 0; i < 
d
; i++)

452 
q
[
i
 + 
d
 * i] = 1;

454 *
w‹k
 = 
	`NEWA
 (, 
d
 * d);

456 
	`¶¨fb_
 ("Left", "N", "F", "C",

457 &
d
, &d, &d, 
x
, &d, 
t
, &d, 
q
, &d, 
w‹k
, &d);

459 
	`‰ì
 (
t
);

460 
	`‰ì
 (
w‹k
);

463 
	`‰ì
 (
èu
);

464 
	`‰ì
 (
x
);

465  
q
;

466 
	}
}

471 *
	$hadam¨d
 (
d
)

473 
	`as£π
 ((
d
 & (d - 1)) == 0 || !"d must beÖower of 2");

475 
i
, 
j
;

476 *
had
 = 
	`fvec_√w
 (
d
 * d);

478 i‡(
d
 == 1) {

479 
had
[0] = 1;

480  
had
;

484 
dd
 = 
d
 / 2;

485 *
had_∑π
 = 
	`hadam¨d
 (
dd
);

487 
i
 = 0; i < 
dd
; i++)

488 
j
 = 0; j < 
dd
; j++) {

489 
had
[
i
 * 
d
 + 
j
] = 
had_∑π
[ò* 
dd
 + j];

490 
had
[
i
 * 
d
 + 
j
 + 
dd
] = 
had_∑π
[i * dd + j];

491 
had
[(
i
 + 
dd
Ë* 
d
 + 
j
] = 
had_∑π
[i * dd + j];

492 
had
[(
i
 + 
dd
Ë* 
d
 + 
j
 + dd] = -
had_∑π
[i * dd + j];

495 
	`‰ì
 (
had_∑π
);

496  (
had
);

497 
	}
}

506 *
	$fm©_˚¡î_cﬁumns
(
d
,
n
,*
v
)

508 
	`as£π
(
n
>0);

510 *
accu
=
	`fvec_√w_˝y
(
v
,
d
);

511 
i
;

513 
i
=1;i<
n
;i++)

514 
	`fvec_add
(
accu
,
v
+
i
*
d
,d);

516 
	`fvec_div_by
(
accu
,
d
,
n
);

518 
i
=0;i<
n
;i++)

519 
	`fvec_sub
(
v
+
i
*
d
,
accu
,d);

521  
accu
;

522 
	}
}

524 
	$fm©_subåa˘_‰om_cﬁumns
(
d
,
n
,*
v
,c⁄° *
avg
) {

525 
i
;

526 
i
=0;i<
n
;i++)

527 
	`fvec_sub
(
v
+
i
*
d
,
avg
,d);

528 
	}
}

530 
	$fm©_add_to_cﬁumns
(
d
,
n
,*
v
,c⁄° *
avg
) {

531 
i
;

532 
i
=0;i<
n
;i++)

533 
	`fvec_add
(
v
+
i
*
d
,
avg
,d);

534 
	}
}

537 
	$fm©_ªv_subåa˘_‰om_cﬁumns
(
d
,
n
,*
v
,c⁄° *
avg
) {

538 
i
;

539 
i
=0;i<
n
;i++)

540 
	`fvec_ªv_sub
(
v
+
i
*
d
,
avg
,d);

542 
	}
}

545 *
	$fm©_√w_v°ack
(c⁄° *
a
,
da
,

546 c⁄° *
b
,
db
,

547 
n
) {

548 
i
;

549 *
c
=
	`fm©_√w
(
da
+
db
,
n
),*
ªt
=c;

550 
i
=0;i<
n
;i++) {

551 
	`mem˝y
(
c
,
a
,
da
*());

552 
c
+=
da
;

553 
a
+=
da
;

554 
	`mem˝y
(
c
,
b
,
db
*());

555 
c
+=
db
;

556 
b
+=
db
;

558  
ªt
;

559 
	}
}

562 
	$fm©_•œt_£∑øbÀ
(c⁄° *
a
,
ƒow
,
ncﬁ
,

563 c⁄° *
row_assign
,c⁄° *
cﬁ_assign
,

564 
k
,

565 *
accu
) {

566 
i
,
j
;

568 
i
=0;i<
ƒow
;i++Ë
j
=0;j<
ncﬁ
;j++) {

569 
accu
[
row_assign
[
i
]*
k
+
cﬁ_assign
[
j
]]+=
a
[i*
ncﬁ
+j];

572 
	}
}

574 *
	$im©_joöt_hi°ogøm
(
n
,
k
,*
row_assign
,*
cﬁ_assign
) {

575 *
hi°
=
	`ivec_√w_0
(
k
*k);

576 
i
;

578 
i
=0;i<
n
;i++)

579 
hi°
[
row_assign
[
i
]*
k
+
cﬁ_assign
[i]]++;

581  
hi°
;

582 
	}
}

609 *
	$fm©_√w_cov¨ün˚
 (
d
, 
n
, c⁄° *
v
, *
avg
, 
assume_˚¡îed
)

612 
i
, 
j
;

614 *
cov
 = 
	`fvec_√w_0
 (
d
 * d);

616 if(!
assume_˚¡îed
) {

618 *
sums
 = 
avg
 ?ávg : 
	`fvec_√w
(
d
);

619 
	`fvec_0
(
sums
,
d
);

621 
i
 = 0; i < 
n
; i++)

622 
j
 = 0; j < 
d
; j++)

623 
sums
[
j
] +
v
[
i
 * 
d
 + j];

626 
i
 = 0; i < 
d
; i++)

627 
j
 = 0; j < 
d
; j++)

628 
cov
[
i
 + 
j
 * 
d
] = 
sums
[i] * sums[j];

631 if(
avg
)

632 
i
=0;i<
d
;i++Ë
avg
[i]/=
n
;

634 
	`‰ì
 (
sums
);

638 
FINTEGER
 
di
=
d
,
ni
=
n
;

641 
Æpha
 = 1.0 / 
n
, 
bëa
 = -1.0 / (n *Ç);

642 
	`sgemm_
 ("N", "T", &
di
, &di, &
ni
, &
Æpha
, 
v
, &di, v, &di, &
bëa
, 
cov
, &di);

645 *
vt
=
	`fvec_√w
(
n
*
d
);

646 
i
=0;i<
d
;i++)

647 
j
=0;j<
n
;j++)

648 
vt
[
i
*
n
+
j
]=
v
[j*
d
+i];

649 
Æpha
 = 1.0 / 
n
, 
bëa
 = -1.0 / (n *Ç);

651 
	`sgemm_
 ("T", "N", &
di
, &di, &
ni
, &
Æpha
, 
vt
, &ni, vt, &ni, &
bëa
, 
cov
, &di);

653 
	`‰ì
(
vt
);

655 
Æpha
 = 1.0 / 
n
, 
bëa
 = -1.0 / (n *Ç);

656 
	`ssyrk_
("L","N", &
di
, &
ni
, &
Æpha
,(*)
v
,&di,&
bëa
,
cov
,&di);

660 
i
=0;i<
d
;i++)

661 
j
=
i
+1;j<
d
;j++)

662 
cov
[
i
+
j
*
d
]=cov[j+i*d];

666  
cov
;

667 
	}
}

669 * 
	$fm©_√w_å™•
 (c⁄° *
a
, 
ncﬁ
, 
ƒow
)

671 
i
,
j
;

672 *
vt
=
	`fvec_√w
(
ncﬁ
*
ƒow
);

674 
i
=0;i<
ncﬁ
;i++)

675 
j
=0;j<
ƒow
;j++)

676 
vt
[
i
*
ƒow
+
j
]=
a
[j*
ncﬁ
+i];

678  
vt
;

679 
	}
}

683 
	$fm©_pˇ_‰om_cov¨ün˚
(
d
,c⁄° *
cov
, *
sögvÆs
, * 
pˇm©
)

685 *
evÆs
=
sögvÆs
;

687 if(!
sögvÆs
Ë
evÆs
=
	`fvec_√w
(
d
);

689 if(
	`eigs_sym
(
d
,
cov
,
evÆs
,
pˇm©
)!=0) {

690 
	`‰ì
(
pˇm©
);

691 
pˇm©
=
NULL
;

692 
îr‹
;

694 
	`eigs_ª‹dî
(
d
,
evÆs
,
pˇm©
,1);

696 
îr‹
:

697 if(!
sögvÆs
Ë
	`‰ì
(
evÆs
);

698 
	}
}

702 *
	$fm©_√w_pˇ_‰om_cov¨ün˚
(
d
,c⁄° *
cov
, *
sögvÆs
)

704 *
pˇm©
=
	`fvec_√w
(
d
*d);

705 
	`fm©_pˇ_‰om_cov¨ün˚
 (
d
, 
cov
, 
sögvÆs
, 
pˇm©
);

706  
pˇm©
;

707 
	}
}

712 *
	$fm©_√w_pˇ
(
d
,
n
,c⁄° *
v
, *
sögvÆs
) {

714 *
cov
=
	`fm©_√w_cov¨ün˚
(
d
,
n
,
v
,
NULL
,1);

716 
	`as£π
(
	`fvec_Æl_föôe
(
cov
,
d
*d));

718 *
evÆs
=
sögvÆs
;

720 if(!
sögvÆs
Ë
evÆs
=
	`fvec_√w
(
d
);

722 *
ªt
=
	`fm©_√w_pˇ_‰om_cov¨ün˚
(
d
,
cov
,
evÆs
);

724 if(!
sögvÆs
Ë
	`‰ì
(
evÆs
);

726 
	`‰ì
(
cov
);

728  
ªt
;

729 
	}
}

748 #ifde‡
_OPENMP


750 
	~<omp.h
>

752 
	#SET_NT
 
	`omp_£t_num_thªads
(
¡
)

	)

756 
	#SET_NT


	)

765 
	$fm©_mul_v
(
mi
,
ni
,c⁄° *
a
,
ldai
,

766 c⁄° *
x
,

767 *
y
,
¡
) {

768 
i
;

769 
FINTEGER
 
lda
=
ldai
,
n
=
ni
,
m
=
mi
;

770 
SET_NT
;

772 #¥agm®
omp
 
∑øŒñ


774 #¥agm®
omp
 

775 
i
=0;i<
¡
;i++) {

776 
i0
=
i
*()
m
/
¡
;

777 
i1
=(
i
+1)*()
m
/
¡
;

778 
FINTEGER
 
m1
=
i1
-
i0
;

779 
⁄e
=1.0,
zîo
=0.0;

780 
FINTEGER
 
i⁄e
=1;

782 
	`sgemv_
("Tøns",&
n
,&
m1
,&
⁄e
,

783 
a
+
lda
*()
i0
,&lda,
x
,&
i⁄e
,&
zîo
,
y
+i0,&ione);

788 
	}
}

790 
	$fm©_mul_tv
(
mi
,
ni
,c⁄° *
a
,
ldai
,

791 c⁄° *
x
,

792 *
y
,
¡
) {

793 
i
,
j
;

794 
FINTEGER
 
lda
=
ldai
,
n
=
ni
,
m
=
mi
;

796 
SET_NT
;

798 *
ybuf
=
	`mÆloc
(()*
¡
*
m
);

800 if(
¡
>
n
)Çt=n;

801 #¥agm®
omp
 
∑øŒñ


803 #¥agm®
omp
 

804 
i
=0;i<
¡
;i++) {

805 
i0
=
i
*()
n
/
¡
;

806 
i1
=(
i
+1)*()
n
/
¡
;

807 
FINTEGER
 
n1
=
i1
-
i0
;

808 
⁄e
=1.0,
zîo
=0.0;

809 
FINTEGER
 
i⁄e
=1;

810 
	`sgemv_
("NŸÅøn•o£d",&
m
,&
n1
,&
⁄e
,

811 
a
+
lda
*()
i0
,&lda,
x
+i0,&
i⁄e
,&
zîo
,
ybuf
+
i
*()
m
,&ione);

817 
	`mem˝y
(
y
,
ybuf
,()*
m
);

818 *
yb
=
ybuf
;

819 
i
=1;i<
¡
;i++) {

820 
yb
+=
m
;

821 
j
=0;j<
m
;j++)

822 
y
[
j
]+=
yb
[j];

825 
	`‰ì
(
ybuf
);

826 
	}
}

830 
	$fm©_svd_∑πül_fuŒ
(
n
,
m
,
√v
,c⁄° *
a
,
a_å™•o£d
,

831 *
s
,*
vout
,*
uout
,
¡
) {

833 
¨∑ck_eigs_t
 *
´
=
	`¨∑ck_eigs_begö
(
n
,
√v
);

834 
ªt
=0;

836 
j
,
i
;

837 *
ax
=
	`NEWA
(,
m
);

839 
ô
;

841 
ô
=0;;it++) {

842 *
x
,*
y
;

843 
ªt
=
	`¨∑ck_eigs_°ï
(
´
,&
x
,&
y
);

845 
	`¥ötf
("¨∑ck iãøti⁄ %dÑë=%d\r",
ô
,
ªt
);

847 if(
ªt
<0) ;

849 if(
ªt
==0) ;

853 if(!
a_å™•o£d
) {

854 
	`fm©_mul_v
(
m
,
n
,
a
,n,
x
,
ax
,
¡
);

855 
	`fm©_mul_tv
(
n
,
m
,
a
,n,
ax
,
y
,
¡
);

857 
	`fm©_mul_tv
(
m
,
n
,
a
,m,
x
,
ax
,
¡
);

858 
	`fm©_mul_v
(
n
,
m
,
a
,m,
ax
,
y
,
¡
);

861 
	`fÊush
(
°dout
);

863 
	`¥ötf
("\n");

865 
	`‰ì
(
ax
);

867 *
v
=
vout
 ? vouà: 
	`fm©_√w
(
√v
,
n
);

869 
ªt
=
	`¨∑ck_eigs_íd
(
´
,
s
,
v
);

871 if(
ªt
>0) {

872 
nc⁄v
=
ªt
;

874 if(
s
)

875 
j
=0;j<
nc⁄v
;j++)

876 
s
[
j
]=
	`sqπ
(s[j]);

878 if(
uout
)

879 
i
=0;i<
nc⁄v
;i++) {

880 *
u
=
uout
+
m
*()
i
;

881 if(!
a_å™•o£d
)

882 
	`fm©_mul_v
(
m
,
n
,
a
,n,
v
+n*()
i
,
u
,
¡
);

884 
	`fm©_mul_tv
(
m
,
n
,
a
,m,
v
+n*()
i
,
u
,
¡
);

885 
	`fvec_n‹mÆize
(
u
,
m
,2);

890 if(!
vout
Ë
	`‰ì
(
v
);

892  
ªt
;

893 
	}
}

895 
	$fm©_svd_∑πül
(
d
,
n
,
ns
,c⁄° *
a
,

896 *
sögvÆs
,*
u
,*
v
) {

897  
	`fm©_svd_∑πül_fuŒ
(
d
,
n
,
ns
,
a
,0,
sögvÆs
,
u
,
v
,
	`cou¡_˝u
());

898 
	}
}

902 *
	$fm©_√w_pˇ_∑π
(
d
,
n
,
√v
,

903 c⁄° *
v
,*
sögvÆs
) {

905 if(!(
√v
<=
d
 &&Çev<=
n
)) {

906 
	`Ârötf
(
°dîr
,"fm©_√w_pˇ_∑π:áskög f‹Åoÿm™yÉigívÆue†(%dËwπ %d*%d d©a\n",
√v
,
n
,
d
);

907  
NULL
;

911 *
pˇm©
=
	`fm©_√w
(
d
,
√v
);

914 
ªt
;

916 if(
n
>=
d
) {

917 
ªt
=
	`fm©_svd_∑πül_fuŒ
(
d
,
n
,
√v
,
v
,0,
sögvÆs
,
pˇm©
,
NULL
,
	`cou¡_˝u
());

919 
	`Ârötf
(
°dîr
,"fm©_√w_pˇ_∑π: w¨¿„wîÜó∫ögÖoöt†(%dËth™ dimísi⁄†(%d):Åøn•osög\n",
n
,
d
);

921 
ªt
=
	`fm©_svd_∑πül_fuŒ
(
n
,
d
,
√v
,
v
,1,
sögvÆs
,
NULL
,
pˇm©
,
	`cou¡_˝u
());

924 if(
ªt
<0) {

925 
	`‰ì
(
pˇm©
);

926 
pˇm©
=
NULL
;

929  
pˇm©
;

930 
	}
}

934 
	$fm©_sﬁve_ls_t_ö∂a˚
(
mi
, 
ni
, *
a
, *
bx
) {

937 
FINTEGER
 
öfo
;

938 
FINTEGER
 
m
=
mi
, 
ƒhs
=1, 
lda
=mi, 
lw‹k
=-1;

939 
FINTEGER
 
n
=
ni
, 
ldb
=n;

940 
w‹k_sz
;

942 
	`sgñs_
("Tøn•o£d", &
m
, &
n
, &
ƒhs
, 
a
, &
lda
,

943 
bx
, &
ldb
, &
w‹k_sz
, &
lw‹k
, &
öfo
);

945 
lw‹k
 = ()
w‹k_sz
;

947 *
w‹k
 = 
	`fvec_√w
(
lw‹k
);

949 
	`sgñs_
("Tøn•o£d", &
m
, &
n
, &
ƒhs
, 
a
, &
lda
,

950 
bx
, &
n
, 
w‹k
, &
lw‹k
, &
öfo
);

952 
	`‰ì
(
w‹k
);

954  
öfo
;

955 
	}
}

957 
	$fm©_sﬁve_ls_t
(
m
, 
n
, c⁄° *
a
, c⁄° *
b
, *
x
) {

961 *
aux
 = 
	`fvec_√w
(
m
 * 
n
 + (m <Ç ?Ç : 0));

963 *
a_c›y
 = 
aux
;

965 
	`mem˝y
(
a_c›y
, 
a
, (Ë* 
n
 * 
m
);

967 *
bx
 = 
m
 < 
n
 ? 
aux
 +Ç * m : 
x
;

969 
	`mem˝y
(
bx
, 
b
, (Ë* 
n
);

971 
öfo
 = 
	`fm©_sﬁve_ls_t_ö∂a˚
(
m
, 
n
, 
a_c›y
, 
bx
);

973 if(
m
 < 
n
)

974 
	`mem˝y
(
x
, 
bx
, (Ë* 
m
);

976 
	`‰ì
(
aux
);

978  
öfo
;

979 
	}
}

985 
pˇ_⁄löe_t
 * 
	$pˇ_⁄löe_√w
 (
d
)

987 
pˇ_⁄löe_t
 * 
pˇ
 = (pˇ_⁄löe_à*Ë
	`mÆloc
 ( (pca_online_t));

988 
pˇ
->
d
 = d;

989 
pˇ
->
n
 = 0;

990 
pˇ
->
mu
 = 
	`fvec_√w_0
 (
d
);

991 
pˇ
->
cov
 = 
	`fvec_√w_0
 (
d
*d);

992 
pˇ
->
eigvec
 = 
	`fvec_√w
 (
d
*d);

993 
pˇ
->
eigvÆ
 = 
	`fvec_√w
 (
d
);

994  
pˇ
;

995 
	}
}

998 
	$pˇ_⁄löe_dñëe
 (
pˇ_⁄löe_s
 * 
pˇ
)

1000 
	`‰ì
 (
pˇ
->
mu
);

1001 
	`‰ì
 (
pˇ
->
cov
);

1002 
	`‰ì
 (
pˇ
->
eigvec
);

1003 
	`‰ì
 (
pˇ
->
eigvÆ
);

1004 
	`‰ì
 (
pˇ
);

1005 
	}
}

1009 
	$pˇ_⁄löe_accu
 (
pˇ_⁄löe_s
 * 
pˇ
, c⁄° * 
v
, 
n
)

1011 
d
 = 
pˇ
->d;

1012 * 
cov
 = 
	`fvec_√w
 (
d
*d);

1013 * 
mu
 = 
	`fvec_√w
 (
d
);

1015 
	`fm©_sum_rows
 (
v
, 
d
, 
n
, 
mu
);

1016 
	`fm©_mul_å
 (
v
, v, 
d
, d, 
n
, 
cov
);

1018 
	`fvec_add
 (
pˇ
->
mu
, mu, 
d
);

1019 
	`fvec_add
 (
pˇ
->
cov
, cov, 
d
*d);

1021 
pˇ
->
n
 +=Ç;

1023 
	`‰ì
 (
cov
);

1024 
	`‰ì
 (
mu
);

1025 
	}
}

1029 
	$pˇ_⁄löe_cov
 (
pˇ_⁄löe_s
 * 
pˇ
)

1031 
d
 = 
pˇ
->d;

1032 
n
 = 
pˇ
->n;

1034 
	`fvec_div_by
 (
pˇ
->
mu
, 
d
, 
n
);

1035 
	`fvec_div_by
 (
pˇ
->
cov
, 
d
 * d, 
n
);

1037 * 
mumut
 = 
	`fvec_√w
 (
d
*d);

1038 
	`fm©_mul_å
 (
pˇ
->
mu
,Öˇ->mu, 
d
, d, 1, 
mumut
);

1039 
	`fvec_sub
 (
pˇ
->
cov
, 
mumut
, 
d
*d);

1040 
	`‰ì
 (
mumut
);

1042 
	`fvec_mul_by
 (
pˇ
->
cov
, 
d
 * d, 
n
 / () (n-1));

1043 
	`as£π
(
	`fvec_Æl_föôe
(
pˇ
->
cov
,
d
*d));

1044 
pˇ
->
n
 = -pca->n;

1045 
	}
}

1050 
	$pˇ_⁄löe_com∂ëe
 (
pˇ_⁄löe_s
 * 
pˇ
)

1052 i‡(
pˇ
->
n
 > 0)

1053 
	`pˇ_⁄löe_cov
 (
pˇ
);

1054 
	`fm©_pˇ_‰om_cov¨ün˚
 (
pˇ
->
d
,Öˇ->
cov
,Öˇ->
eigvÆ
,Öˇ->
eigvec
);

1055 
	}
}

1060 
	$pˇ_⁄löe_com∂ëe_∑π
 (
pˇ_⁄löe_s
 * 
pˇ
, 
√v
)

1062 i‡(
pˇ
->
n
 > 0)

1063 
	`pˇ_⁄löe_cov
 (
pˇ
);

1065 i‡(
√v
 * 2 >
pˇ
->
d
)

1066 
	`pˇ_⁄löe_com∂ëe
 (
pˇ
);

1068 
ªt
 = 
	`eigs_sym_∑π
(
pˇ
->
d
,pˇ->
cov
,
√v
,pˇ->
eigvÆ
,pˇ->
eigvec
);

1069 
	`as£π
 (
ªt
 > 0);

1070 if(
ªt
<
√v
)

1071 
	`¥ötf
("!!! o∆y %d / %dÉigívÆue†c⁄vîged\n",
ªt
,
√v
);

1074 
	}
}

1077 
	$pˇ_⁄löe_¥oje˘
 (c⁄° 
pˇ_⁄löe_t
 * 
pˇ
, c⁄° * 
v
, * 
vo
, 
d
, 
n
, 
dout
)

1079 c⁄° 
åm©
[2] = {'T', 'N'};

1080 * 
vb
 = 
	`fvec_√w_˝y
 (
v
, 
n
*
d
);

1081 
	`as£π
 (
d
 =
pˇ
->d);

1083 
	`fm©_subåa˘_‰om_cﬁumns
 (
pˇ
->
d
, 
n
, 
vb
,Öˇ->
mu
);

1084 
	`fm©_mul_fuŒ
 (
pˇ
->
eigvec
, 
vb
, 
dout
, 
n
,Öˇ->
d
, 
åm©
, 
vo
);

1085 
	`‰ì
 (
vb
);

1086 
	}
}

	@matrix.h

39 #i‚de‡
__m©rix_h


40 
	#__m©rix_h


	)

70 *
fm©_√w
 (
ƒow
, 
ncﬁ
);

71 *
fm©_√w_0
 (
ƒow
, 
ncﬁ
);

91 
fm©_mul_fuŒ
(c⁄° *
À·
, c⁄° *
right
,

92 
m
, 
n
, 
k
,

93 c⁄° *
å™•
,

94 *
ªsu…
);

97 
fm©_mul_fuŒ_n⁄∑cked
(c⁄° *
À·
, c⁄° *
right
,

98 
m
, 
n
, 
k
,

99 c⁄° *
å™•
,

100 
ld_À·
, 
ld_right
,

101 *
ªsu…
,

102 
ld_ªsu…
);

108 * 
fm©_√w_mul_fuŒ
(c⁄° *
À·
, c⁄° *
right
,

109 
m
, 
n
, 
k
,

110 c⁄° *
å™•
);

113 
fm©_mul
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
, *
mout
);

116 
fm©_mul_é
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
, *
mout
);

119 
fm©_mul_å
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
, *
mout
);

122 
fm©_mul_ér
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
, *
mout
);

125 * 
fm©_√w_mul
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
);

126 * 
fm©_√w_mul_é
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
);

127 * 
fm©_√w_mul_å
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
);

128 * 
fm©_√w_mul_ér
 (c⁄° *
À·
, c⁄° *
right
, 
m
, 
n
, 
k
);

142 
fm©_sﬁve_ls_t
(
m
, 
n
, c⁄° *
a
, c⁄° *
b
, *
x
);

146 
fm©_¥öt
 (c⁄° *
a
, 
ƒow
, 
ncﬁ
);

150 
fm©_¥öt_å™po£d
 (c⁄° *
a
, 
ƒow
, 
ncﬁ
);

167 *
fm©_gë_subm©rix
 (c⁄° *
a
, 
ƒow
,

168 
ƒow_out
,

169 
ncﬁ
);

171 *
im©_gë_subm©rix
 (c⁄° *
a
, 
ƒow
,

172 
ƒow_out
,

173 
ncﬁ
);

177 *
fm©_√w_gë_cﬁumns
 (c⁄° *
a
, 
ƒow
, 
ncﬁout
, c⁄° *
cﬁs
);

179 
fm©_gë_cﬁumns
 (c⁄° *
a
, 
d
, 
ncﬁout
, c⁄° *
cﬁs
, *
out
);

186 
fm©_gë_rows_cﬁs
(c⁄° *
a
, 
d
,

187 
n_row
, c⁄° *
rows
,

188 
n_cﬁ
, c⁄° *
cﬁs
,

189 *
out
);

191 
fm©_shufÊe_cﬁumns
(*
a
, 
ƒow
, 
ncﬁ
);

194 *
fm©_√w_gë_row
 (c⁄° *
a
, 
ƒow
, 
ncﬁ
, 
row
);

197 *
fm©_√w_gë_rows
 (c⁄° *
a
, 
d
, 
n
, 
ƒowout
, c⁄° *
rows
);

200 
fm©_sum_cﬁumns
 (c⁄° * 
a
, 
ƒow
, 
ncﬁ
, * 
sums
);

201 *
fm©_√w_sum_cﬁumns
 (c⁄° *
a
, 
ƒow
, 
ncﬁ
);

204 
fm©_sum_rows
 (c⁄° * 
a
, 
ƒow
, 
ncﬁ
, * 
sums
);

205 *
fm©_√w_sum_rows
 (c⁄° *
a
, 
ƒow
, 
ncﬁ
);

208 *
fm©_√w_v°ack
(c⁄° *
a
,
da
,

209 c⁄° *
b
,
db
,

210 
n
);

221 *
fm©_√w_å™•
 (c⁄° *
a
, 
ncﬁ
, 
ƒow
);

231 
fm©_•œt_£∑øbÀ
(c⁄° *
a
,
ƒow
,
ncﬁ
,

232 c⁄° *
row_assign
,c⁄° *
cﬁ_assign
,

233 
k
,

234 *
accu
);

236 *
im©_joöt_hi°ogøm
(
n
,
k
,*
row_assign
,*
cﬁ_assign
);

240 
fm©_ªmove_0_cﬁumns
(*
a
, 
d
, 
n
);

243 
fm©_n‹mÆize_cﬁumns_l2sqr_pow
(*
a
, 
d
, 
n
, 
pw
);

252 * 
fm©_√w_ønd_gauss
 (
ƒow
, 
ncﬁ
);

255 *
øndom_‹thog⁄Æ_basis
 (
d
);

259 * 
hadam¨d
 (
d
);

267 *
fm©_˚¡î_cﬁumns
(
d
,
n
,*
v
);

270 
fm©_subåa˘_‰om_cﬁumns
(
d
,
n
,*
m
,c⁄° *
avg
);

273 
fm©_add_to_cﬁumns
(
d
,
n
,*
m
,c⁄° *
avg
);

276 
fm©_ªv_subåa˘_‰om_cﬁumns
(
d
,
n
,*
m
,c⁄° *
avg
);

295 *
fm©_√w_cov¨ün˚
 (
d
, 
n
, c⁄° *
v
,

296 *
avg
,
assume_˚¡îed
);

306 *
fm©_√w_pˇ
(
d
,
n
,c⁄° *
v
,

307 *
sögvÆs
);

318 *
fm©_√w_pˇ_∑π
(
d
,
n
,
√v
,

319 c⁄° *
v
,*
sögvÆs
);

332 
fm©_svd_∑πül
(
d
, 
n
, 
ns
, c⁄° *
a
,

333 *
sögvÆs
, *
u
, *
v
);

337 
fm©_svd_∑πül_fuŒ
(
n
,
m
,
√v
,c⁄° *
a
,
a_å™•o£d
,

338 *
s
,*
vout
,*
uout
,
¡
);

342 *
fm©_√w_pˇ_‰om_cov¨ün˚
(
d
, c⁄° *
cov
, *
sögvÆs
);

343 
fm©_pˇ_‰om_cov¨ün˚
(
d
,c⁄° *
cov
, *
sögvÆs
, * 
pˇm©
);

349 
	spˇ_⁄löe_s
 {

350 
	mn
;

352 
	md
;

353 * 
	mmu
;

354 * 
	mcov
;

355 * 
	meigvec
;

356 * 
	meigvÆ
;

359 
pˇ_⁄löe_s
 
	tpˇ_⁄löe_t
;

362 
pˇ_⁄löe_t
 * 
pˇ_⁄löe_√w
 (
d
);

365 
pˇ_⁄löe_dñëe
 (
pˇ_⁄löe_s
 * 
pˇ
);

368 
pˇ_⁄löe_accu
 (
pˇ_⁄löe_s
 * 
pˇ
, c⁄° * 
v
, 
n
);

371 
pˇ_⁄löe_cov
 (
pˇ_⁄löe_s
 * 
pˇ
);

376 
pˇ_⁄löe_com∂ëe
 (
pˇ_⁄löe_s
 * 
pˇ
);

380 
pˇ_⁄löe_com∂ëe_∑π
 (
pˇ_⁄löe_s
 * 
pˇ
, 
√v
);

384 
pˇ_⁄löe_¥oje˘
 (c⁄° 
pˇ_⁄löe_t
 * 
pˇ
, c⁄° * 
v
, * 
vo
, 
d
, 
n
, 
dout
);

	@nn.c

39 
	~<°dlib.h
>

40 
	~<°dio.h
>

41 
	~<as£π.h
>

42 
	~<m©h.h
>

43 
	~<°rög.h
>

45 
	~"machöedïs.h
"

46 
	~"ve˘‹.h
"

47 
	~"¬.h
"

48 
	~"böhóp.h
"

49 
	~"s‹tög.h
"

53 
	#NEWA
(
ty≥
,
n
Ë—y≥*)
	`mÆloc
(“)*—y≥))

	)

54 
	#MAX
(
a
,
b
Ë(◊)>(bË? (aË: (b))

	)

55 
	#MIN
(
a
,
b
Ë(◊)<(bË? (aË: (b))

	)

65 
	#ªÆ
 

	)

66 
	#öãgî
 
FINTEGER


	)

68 
sgemm_
 (*
å™ß
, *
å™sb
, 
öãgî
 * 
m
, integer *

69 
n
, 
öãgî
 * 
k
, 
ªÆ
 * 
Æpha
, c⁄°Ñó»* 
a
, i¡egî * 
lda
,

70 c⁄° 
ªÆ
 * 
b
, 
öãgî
 * 
ldb
,Ñó»* 
bëa
,Ñó»* 
c__
,

71 
öãgî
 * 
ldc
);

74 
sgemv_
(*
å™s
, 
öãgî
 *
m
, i¡egî *
n
, 
ªÆ
 *
Æpha
,

75 c⁄° 
ªÆ
 *
a
, 
öãgî
 *
lda
, c⁄°Ñó»*
x
, i¡egî *
öcx
,Ñó»*
bëa
,Ñó»*
y
,

76 
öãgî
 *
öcy
);

78 #unde‡
ªÆ


79 #unde‡
öãgî


92 
	$add_m©mul
 (
FINTEGER
 
d
, FINTEGER 
«
, FINTEGER 
nb
,

93 c⁄° *
a
, 
FINTEGER
 
lda
,

94 c⁄° *
b
, 
FINTEGER
 
ldb
,

95 *
di°2
, 
FINTEGER
 
ldd
)

99 
möus_two
 = -2;

100 
⁄e
 = 1;

102 
	`sgemm_
 ("Tøn•o£d", "NŸÅøns", &
«
, &
nb
, &
d
,

103 &
möus_two
, 
a
, &
lda
, 
b
, &
ldb
, &
⁄e
, 
di°2
, &
ldd
);

105 
	}
}

108 
	$add_m©vecmul
 (
FINTEGER
 
d
, FINTEGER 
nb
,

109 c⁄° *
a
,

110 c⁄° *
b
, 
FINTEGER
 
ldb
,

111 *
di°2
)

115 
möus_two
 = -2;

116 
⁄e
 = 1;

117 
FINTEGER
 
i⁄e
 = 1;

119 
	`sgemv_
 ("Tøn•o£d", &
d
, &
nb
, &
möus_two
, 
b
, &
ldb
, 
a
, &
i⁄e
, &
⁄e
, 
di°2
, &ione);

121 
	}
}

130 
	$compuã_¸oss_di°™˚s
 (
d
, 
«
, 
nb
,

131 c⁄° *
a
, c⁄° *
b
,

132 *
di°2
)

134 
	`compuã_¸oss_di°™˚s_n⁄∑cked
 (
d
, 
«
, 
nb
, 
a
, d, 
b
, d, 
di°2
,Ça);

135 
	}
}

138 
	$compuã_¸oss_di°™˚s_n⁄∑cked
 (
d
, 
«
, 
nb
,

139 c⁄° *
a
, 
lda
,

140 c⁄° *
b
, 
ldb
,

141 *
di°2
, 
ldd
)

143 
i
, 
j
;

144 *
sum_c2
 = (*Ë
	`mÆloc
 ( (Ë* 
«
);

146 
i
 = 0; i < 
«
; i++) {

147 
s
 = 0;

148 c⁄° *
˛
 = 
a
 + 
lda
 * 
i
;

149 
j
 = 0; j < 
d
; j++)

150 
s
 +
˛
[
j
] * cl[j];

151 
sum_c2
[
i
] = 
s
;

154 
i
 = 0; i < 
nb
; i++) {

155 
sum_d2
 = 0;

156 c⁄° *
dl
 = 
b
 + 
ldb
 * 
i
;

157 
j
 = 0; j < 
d
; j++)

158 
sum_d2
 +
dl
[
j
] * dl[j];

159 *
d2l
 = 
di°2
 + 
i
 * 
ldd
;

160 
j
 = 0; j < 
«
; j++)

161 
d2l
[
j
] = 
sum_d2
 + 
sum_c2
[j];

164 
	`add_m©mul
 (
d
, 
«
, 
nb
, 
a
, 
lda
, 
b
, 
ldb
, 
di°2
, 
ldd
);

166 
	`‰ì
 (
sum_c2
);

167 
	}
}

170 
	$compuã_di°™˚s_1_n⁄∑cked
 (
d
, 
nb
,

171 c⁄° *
a
,

172 c⁄° *
b
, 
ldb
,

173 *
di°2
)

175 
i
, 
j
;

176 
sum_c2
;

178 
sum_c2
=0;

179 
j
 = 0; j < 
d
; j++)

180 
sum_c2
 +
a
[
j
] *á[j];

182 
i
 = 0; i < 
nb
; i++) {

183 
sum_d2
 = 0;

184 c⁄° *
dl
 = 
b
 + 
ldb
 * 
i
;

185 
j
 = 0; j < 
d
; j++)

186 
sum_d2
 +
dl
[
j
] * dl[j];

187 
di°2
[
i
] = 
sum_d2
 + 
sum_c2
;

190 
	`add_m©vecmul
 (
d
, 
nb
, 
a
, 
b
, 
ldb
, 
di°2
);

192 
	}
}

194 
	$compuã_di°™˚s_1
 (
d
, 
nb
,

195 c⁄° *
a
,

196 c⁄° *
b
,

197 *
di°2
)

199 
	`compuã_di°™˚s_1_n⁄∑cked
(
d
,
nb
,
a
,
b
,d,
di°2
);

200 
	}
}

207 #ifde‡
__SSE2__


209 
	~<emmöåö.h
>

214 
	$vec_chi2
 (c⁄° *
a
, c⁄° *
b
, 
n
)

216 
i
=0;

217 
__v4sf
 
accu
={0,0,0,0};

218 
__v4sf
 *
av
=(*)
a
,*
bv
=(*)
b
;

219 
n
/=4;

221 
i
 = 0 ; i < 
n
 ; i++) {

222 
__v4sf
 
ai
 = 
av
[
i
],
bi
=
bv
[i];

223 
__v4sf
 
sum
 = 
ai
+
bi
,
diff
=ai-bi;

224 
__v4sf
 
mask
 = 
	`_mm_cm≤eq_ps
(
ai
,
bi
);

225 
accu
+=
	`_mm_™d_ps
 (
	`_mm_div_ps
(
	`_mm_mul_ps
(
diff
,diff),
sum
),
mask
);

228 *
af
=(*)&
accu
;

230  
af
[0] +áf[1] +áf[2] +áf[3];

231 
	}
}

234 
	$vec_L1
 (c⁄° *
a
, c⁄° *
b
, 
n
)

236 
i
=0;

237 
__v4sf
 
accu
 = {0,0,0,0};

238 
__v4si
 
signbô
 = {0x7fffffff, 0x7fffffff, 0x7fffffff, 0x7fffffff};

239 
__v4sf
 *
av
=(*)
a
,*
bv
=(*)
b
;

240 
n
/=4;

242 
i
=0;i<
n
;i++) {

243 
__v4sf
 
ai
 = 
av
[
i
], 
bi
 = 
bv
[i];

244 
__v4sf
 
diff
 = 
ai
 - 
bi
;

245 
__v4sf
 
difÁbs
 = 
	`_mm_™d_ps
(
diff
, (
__m128
)
signbô
);

246 
accu
 +
difÁbs
;

249 *
af
=(*)&
accu
;

251  
af
[0]+af[1]+af[2]+af[3];

252 
	}
}

256 
	$¸oss_di°™˚s_chi2_vec
 (
d
, 
«
, 
nb
,

257 c⁄° *
a
, 
lda
,

258 c⁄° *
b
, 
ldb
,

259 *
c
, 
ldc
)

261 
i
, 
j
;

262 c⁄° *
bl
 = 
b
;

263 *
˛
=
c
;

265 
j
=0;j<
nb
;j++) {

266 c⁄° *
Æ
=
a
;

267 
i
=0;i<
«
;i++) {

268 
˛
[
i
]=
	`vec_chi2
(
Æ
,
bl
,
d
);;

269 
Æ
+=
lda
;

271 
˛
+=
ldc
;

272 
bl
+=
ldb
;

274 
	}
}

276 
	$¸oss_di°™˚s_L1_vec
(
d
,
«
,
nb
,

277 c⁄° *
a
,
lda
,

278 c⁄° *
b
,
ldb
,

279 *
c
,
ldc
) {

280 
i
,
j
;

281 c⁄° *
bl
=
b
;

282 *
˛
=
c
;

284 
j
=0;j<
nb
;j++) {

285 c⁄° *
Æ
=
a
;

286 
i
=0;i<
«
;i++) {

287 
˛
[
i
]=
	`vec_L1
(
Æ
,
bl
,
d
);;

288 
Æ
+=
lda
;

290 
˛
+=
ldc
;

291 
bl
+=
ldb
;

293 
	}
}

297 
	$sqr
 (
x
)

299  
x
 * x;

300 
	}
}

302 
	$m©_¥odu˘
(
FINTEGER
 
d
, FINTEGER 
«
, FINTEGER 
nb
,

303 c⁄° *
a
, 
FINTEGER
 
lda
,

304 c⁄° *
b
, 
FINTEGER
 
ldb
,

305 *
di°2
, 
FINTEGER
 
ldd
) {

306 
zîo
 = 0;

307 
⁄e
 = 1;

309 
	`sgemm_
("Tøns", "NŸ", &
«
, &
nb
, &
d
, &
⁄e
, 
a
, &
lda
, 
b
, &
ldb
, &
zîo
, 
di°2
, &
ldd
);

311 
	}
}

316 
	$compuã_¸oss_di°™˚s_Æt_n⁄∑cked
 (
di°™˚_ty≥
, 
d
, 
«
, 
nb
,

317 c⁄° *
a
, 
lda
,

318 c⁄° *
b
, 
ldb
,

319 *
di°2
, 
ldd
) {

321 #ifde‡
__SSE2__


322 if(
d
%4==0) {

323 if(
di°™˚_ty≥
 == 3) {

324 
	`¸oss_di°™˚s_chi2_vec
(
d
,
«
,
nb
,
a
,
lda
,
b
,
ldb
,
di°2
,
ldd
);

326 } if(
di°™˚_ty≥
 == 1) {

327 
	`¸oss_di°™˚s_L1_vec
(
d
,
«
,
nb
,
a
,
lda
,
b
,
ldb
,
di°2
,
ldd
);

334 if(
di°™˚_ty≥
 == 12) {

335 
	`compuã_¸oss_di°™˚s_n⁄∑cked
(
d
, 
«
, 
nb
, 
a
, 
lda
, 
b
, 
ldb
, 
di°2
, 
ldd
);

339 if(
di°™˚_ty≥
 == 16) {

340 
	`m©_¥odu˘
(
d
, 
«
, 
nb
, 
a
, 
lda
, 
b
, 
ldb
, 
di°2
, 
ldd
);

344 
i
,
j
,
k
;

346 
j
=0;j<
nb
;j++) {

347 * 
dlöe
=
di°2
+
j
*
ldd
;

348 c⁄° * 
blöe
=
b
+
ldb
*
j
;

349 c⁄° * 
Æöe
=
a
;

350 
i
=0;i<
«
;i++) {

352 
sum
=0;

353 if(
di°™˚_ty≥
==1)

354 
k
=0;k<
d
;k++Ë
sum
+=
	`Ábs
(
Æöe
[k]-
blöe
[k]);

355 if(
di°™˚_ty≥
==2)

356 
k
=0;k<
d
;k++Ë
sum
+=
	`sqr
(
Æöe
[k]-
blöe
[k]);

357 if(
di°™˚_ty≥
==3)

358 
k
=0;k<
d
;k++) {

359 
av
=
Æöe
[
k
],
bv
=
blöe
[k];

360 
sum
+=
av
+
bv
==0 ? 0 : 
	`sqr
(av-bv)/(av+bv);

362 if(
di°™˚_ty≥
==4)

363 
k
=0;k<
d
;k++) {

364 
av
=
Æöe
[
k
],
bv
=
blöe
[k];

365 
dí
=
	`Ábs
(
av
+
bv
);

366 
sum
+=
dí
==0 ? 0 : 
	`sqr
(
av
-
bv
)/den;

368 if(
di°™˚_ty≥
 == 5) {

369 
k
=0;k<
d
;k++) {

370 
av
 = 
Æöe
[
k
], 
bv
 = 
blöe
[k];

371 
sum
 +
	`MIN
(
av
, 
bv
);

374 if(
di°™˚_ty≥
 == 6) {

375 
k
=0;k<
d
;k++) {

376 
av
 = 
Æöe
[
k
], 
bv
 = 
blöe
[k];

377 
sum
 +
av
 * 
bv
;

380 
dlöe
[
i
]=
sum
;

382 
Æöe
+=
lda
;

386 
	}
}

388 
	$compuã_¸oss_di°™˚s_Æt
 (
di°™˚_ty≥
, 
d
, 
«
, 
nb
,

389 c⁄° *
a
,

390 c⁄° *
b
, *
di°2
) {

391 
	`compuã_¸oss_di°™˚s_Æt_n⁄∑cked
(
di°™˚_ty≥
, 
d
, 
«
, 
nb
, 
a
, d, 
b
, d, 
di°2
,Ça);

392 
	}
}

407 
	#BLOCK_N1
 256

	)

408 
	#BLOCK_N2
 256

	)

412 
	#MIN
(
a
,
b
Ë(◊)<(bË? (aË: (b))

	)

419 
	$¬_sögÀ_fuŒ
 (
di°™˚_ty≥
,

420 
n1
, 
n2
, 
d
,

421 c⁄° *
m©2
, c⁄° *
m©1
,

422 c⁄° *
vw_weights
,

423 *
vw
, *
vwdis
)

425 
°ï1
 = 
	`MIN
 (
n1
, 
BLOCK_N1
), 
°ï2
 = MIN (
n2
, 
BLOCK_N2
);

427 *
di°s
 = 
	`fvec_√w
 (
°ï1
 * 
°ï2
);

433 
i1
,
i2
,
j1
,
j2
;

434 
i1
 = 0; i1 < 
n1
; i1 +
°ï1
) {

436 
m1
 = 
	`MIN
 (
°ï1
, 
n1
 - 
i1
);

440 
j1
 = 0; j1 < 
m1
; j1++) {

441 
vw
[
j1
+
i1
]=-1;

442 
vwdis
[
j1
+
i1
]=1e30;

445 
i2
 = 0; i2 < 
n2
 ; i2 +
°ï2
) {

447 
m2
 = 
	`MIN
 (
°ï2
, 
n2
 - 
i2
);

449 if(
di°™˚_ty≥
==2)

450 
	`compuã_¸oss_di°™˚s
 (
d
, 
m2
, 
m1
, 
m©2
+
i2
*d, 
m©1
+
i1
*d, 
di°s
);

452 
	`compuã_¸oss_di°™˚s_Æt
 (
di°™˚_ty≥
, 
d
, 
m2
, 
m1
, 
m©2
+
i2
*d, 
m©1
+
i1
*d, 
di°s
);

454 if(
vw_weights
) {

455 
j1
=0;j1<
m1
;j1++Ë
j2
 = 0; j2 < 
m2
; j2++)

456 
di°s
[
j1
 * 
m2
 + 
j2
] *
vw_weights
[j2 + 
i2
];

461 
j1
=0;j1<
m1
;j1++) {

462 *
dlöe
=
di°s
+
j1
*
m2
;

464 
imö
=
vw
[
i1
+
j1
];

465 
dmö
=
vwdis
[
i1
+
j1
];

467 
j2
=0;j2<
m2
;j2++)

468 if(
dlöe
[
j2
]<
dmö
) {

469 
imö
=
j2
+
i2
;

470 
dmö
=
dlöe
[
j2
];

473 
vw
[
i1
+
j1
]=
imö
;

474 
vwdis
[
i1
+
j1
]=
dmö
;

481 
	`‰ì
 (
di°s
);

482 
	}
}

487 
	$k¬_fuŒ
 (
di°™˚_ty≥
,
n1
, 
n2
, 
d
, 
k
,

488 c⁄° *
m©2
, c⁄° *
m©1
,

489 c⁄° *
vw_weights
,

490 *
vw
, *
vwdis
)

492 
	`as£π
 (
k
 <
n2
);

494 if(
k
==1) {

495 
	`¬_sögÀ_fuŒ
(
di°™˚_ty≥
, 
n1
, 
n2
, 
d
, 
m©2
, 
m©1
, 
vw_weights
, 
vw
, 
vwdis
);

500 
°ï1
 = 
	`MIN
 (
n1
, 
BLOCK_N1
), 
°ï2
 = MIN (
n2
, 
BLOCK_N2
);

502 *
di°s
 = 
	`fvec_√w
 (
°ï1
 * 
°ï2
);

506 
⁄eh
 = 
	`fböhóp_sizeof
(
k
);

508 *
möbuf
 = 
	`mÆloc
 (
⁄eh
 * 
°ï1
);

510 
	#MINS
(
i
Ë((
fböhóp_t
*)(
möbuf
 + 
⁄eh
 * i))

	)

512 
i1
,
i2
,
j1
,
j2
;

513 
i1
 = 0; i1 < 
n1
; i1 +
°ï1
) {

515 
m1
 = 
	`MIN
 (
°ï1
, 
n1
 - 
i1
);

518 
j1
 = 0; j1 < 
m1
; j1++)

519 
	`fböhóp_öô
(
	`MINS
(
j1
),
k
);

522 
i2
 = 0; i2 < 
n2
 ; i2 +
°ï2
) {

524 
m2
 = 
	`MIN
 (
°ï2
, 
n2
 - 
i2
);

527 if(
di°™˚_ty≥
==2)

528 
	`compuã_¸oss_di°™˚s
 (
d
, 
m2
, 
m1
, 
m©2
+
i2
*d, 
m©1
+
i1
*d, 
di°s
);

530 
	`compuã_¸oss_di°™˚s_Æt
 (
di°™˚_ty≥
, 
d
, 
m2
, 
m1
, 
m©2
+
i2
*d, 
m©1
+
i1
*d, 
di°s
);

532 if(
vw_weights
) {

533 
j1
=0;j1<
m1
;j1++Ë
j2
 = 0; j2 < 
m2
; j2++)

534 
di°s
[
j1
 * 
m2
 + 
j2
] *
vw_weights
[j2 + 
i2
];

539 
j1
=0;j1<
m1
;j1++) {

540 *
dlöe
=
di°s
+
j1
*
m2
;

541 
	`fböhóp_addn_œbñ_ønge
(
	`MINS
(
j1
),
m2
,
i2
,
dlöe
);

546 
j1
 = 0; j1 < 
m1
; j1++) {

547 
fböhóp_t
 *
mh
 = 
	`MINS
(
j1
);

548 
	`as£π
 (
mh
->
k
 == k);

549 
	`fböhóp_s‹t
(
mh
, 
vw
 + (
i1
+
j1
Ë* 
k
, 
vwdis
 + (i1+j1) * k);

553 #unde‡
MINS


554 
	`‰ì
 (
möbuf
);

555 
	`‰ì
(
di°s
);

556 
	}
}

559 
	$k¬_ª‹dî_sh‹éi°
(
n
, 
nb
, 
d
, 
k
,

560 c⁄° *
b
, c⁄° *
v
,

561 *
assign
,

562 *
di°s
)

564 *
subb
=
	`fvec_√w
(
k
*
d
);

565 *
di°°mp
=
	`fvec_√w
(
k
);

566 *
≥rm
=
	`ivec_√w
(
k
);

567 *
assig¡mp
=
	`ivec_√w
(
k
);

568 
i
,
j
;

570 
i
=0;i<
n
;i++) {

571 *
assigni
=
assign
+
i
*
k
;

572 *
di°i
=
di°s
+
i
*
k
;

574 
ki
 ;

577 
j
=0;j<
k
;j++) {

578 if(
assigni
[
j
]<0) ;

579 
	`mem˝y
(
subb
+
j
*
d
,
b
+
assigni
[j]*d,(*subb)*d);

582 
ki
=
j
;

585 
j
=0;j<
k
;j++)

586 if(
assigni
[
j
]<0) ;

587 
ki
=
j
;

588 
	`ivec_s‹t
(
assigni
,
ki
);

589 
j
=0;j<
ki
;j++) {

590 
	`mem˝y
(
subb
+
j
*
d
,
b
+
assigni
[j]*() d,(*subb)*d);

595 
	`compuã_di°™˚s_1
(
d
,
ki
,
v
+
i
*d,
subb
,
di°°mp
);

597 
	`fvec_s‹t_ödex
(
di°°mp
,
ki
,
≥rm
);

599 
	`mem˝y
(
assig¡mp
,
assigni
,(*assigni)*
ki
);

601 
j
=0;j<
ki
;j++) {

602 
di°i
[
j
]=
di°°mp
[
≥rm
[j]];

603 
assigni
[
j
]=
assig¡mp
[
≥rm
[j]];

607 
	`‰ì
(
assig¡mp
);

608 
	`‰ì
(
di°°mp
);

609 
	`‰ì
(
subb
);

610 
	`‰ì
(
≥rm
);

611 
	}
}

614 
	$k¬_ªcompuã_exa˘_di°s
(
nq
, 
nb
, 
d
, 
k
,

615 c⁄° *
b
, c⁄° *
v
,

616 
œbñ0
, *
kp
,

617 c⁄° *
idx
, *
dis
)

619 
q
, 
i
;

621 
q
 = 0; q < 
nq
; q++) {

622 c⁄° * 
vq
 = 
v
 + 
d
 * 
q
;

623 
i
 = 
kp
[
q
]; i < 
k
; i++) {

624 
j
 = 
idx
[
q
 * 
k
 + 
i
] - 
œbñ0
;

625 
	`as£π
(
j
 >= 0);

626 if(
j
 >
nb
) ;

627 
dis
[
q
 * 
k
 + 
i
] = 
	`fvec_di°™˚_L2sqr
(
vq
, 
b
 + 
j
 * 
d
, d);

629 
kp
[
q
] = 
i
;

631 
	}
}

639 
	$¬
 (
≈t
, 
n˛u°
, 
d
,

640 c⁄° *
codebook
, c⁄° *
co‹ds
, *
vw
)

644 *
vwdis
 = 
	`fvec_√w
(
≈t
);

646 
	`k¬_fuŒ
 (2, 
≈t
, 
n˛u°
, 
d
, 1, 
codebook
, 
co‹ds
, 
NULL
, 
vw
, 
vwdis
);

648 
tŸîr
 = 
	`fvec_sum
(
vwdis
, 
≈t
);

649 
	`‰ì
(
vwdis
);

651  
tŸîr
;

652 
	}
}

655 *
	$k¬
 (
≈t
, 
n˛u°
, 
d
, 
k
,

656 c⁄° *
codebook
, c⁄° *
co‹ds
, *
vw
)

659 *
vwdis
 = 
	`fvec_√w
(
≈t
 * 
k
);

661 
	`k¬_fuŒ
 (2, 
≈t
, 
n˛u°
, 
d
, 
k
, 
codebook
, 
co‹ds
, 
NULL
, 
vw
, 
vwdis
);

662  
vwdis
;

663 
	}
}

677 
	mdi°™˚_ty≥
;

679 
	mn˛u°
, 
	md
, 
	mk
;

680 c⁄° *
	mcodebook
;

682 
	m≈t
;

683 c⁄° *
	mpoöts
;

684 c⁄° *
	mvw_weights
;

687 *
	mvw
;

688 *
	mvwdis
;

691 
	mn_thªad
;

692 } 
	t¬_öput_t
;

696 
	$¬_èsk
 (*
¨g
, 
tid
, 
i
)

698 
¬_öput_t
 *
t
 = 
¨g
;

700 
n0
 = 
t
->
≈t
 * ()
i
 /Å->
n_thªad
;

701 
n1
 = 
t
->
≈t
 * ()(
i
 + 1Ë/Å->
n_thªad
;

703 
	`k¬_fuŒ
 (
t
->
di°™˚_ty≥
, 
n1
 - 
n0
,Å->
n˛u°
,Å->
d
,Å->
k
,Å->
codebook
,

704 
t
->
poöts
 + 
n0
 *Å->
d
,Å->
vw_weights
,

705 
t
->
vw
 + 
n0
 *Å->
k
,Å->
vwdis
 +Ç0 *Å->k);

706 
	}
}

710 
	$k¬_fuŒ_thªad
 (
di°™˚_ty≥
, 
≈t
, 
n˛u°
, 
d
, 
k
,

711 c⁄° *
codebook
, c⁄° *
co‹ds
,

712 c⁄° *
vw_weights
,

713 *
vw
, *
vwdis2
,

714 
n_thªad
)

716 i‡(
≈t
 < 
n_thªad
 ||Ç_thread == 1) {

717  
	`k¬_fuŒ
 (
di°™˚_ty≥
, 
≈t
, 
n˛u°
, 
d
, 
k
, 
codebook
, 
co‹ds
, 
vw_weights
,

718 
vw
, 
vwdis2
);

721 
¬_öput_t
 
èsk
 = {

722 
di°™˚_ty≥
,

723 
n˛u°
, 
d
, 
k
, 
codebook
,

724 
≈t
, 
co‹ds
, 
vw_weights
, 
vw
, 
vwdis2
,

725 
n_thªad


728 
	`compuã_èsks
 (
n_thªad
,Ç_thªad, &
¬_èsk
, &
èsk
);

730 
	}
}

735 *
	$k¬_thªad
 (
≈t
, 
n˛u°
, 
d
, 
k
,

736 c⁄° *
codebook
, c⁄° *
co‹ds
,

737 *
vw
, 
n_thªad
)

739 *
vwdis2
=
	`fvec_√w
(
k
*
≈t
);

740 
	`k¬_fuŒ_thªad
 (2, 
≈t
, 
n˛u°
, 
d
, 
k
, 
codebook
, 
co‹ds
, 
NULL
, 
vw
, 
vwdis2
, 
n_thªad
);

741  
vwdis2
;

742 
	}
}

746 
	$¬_thªad
 (
≈t
, 
n˛u°
, 
d
,

747 c⁄° *
codebook
, c⁄° *
co‹ds
,

748 *
vw
, 
n_thªad
)

750 *
vwdis2
=
	`fvec_√w
(
≈t
);

751 
	`k¬_fuŒ_thªad
 (2, 
≈t
, 
n˛u°
, 
d
, 1, 
codebook
, 
co‹ds
, 
NULL
, 
vw
, 
vwdis2
, 
n_thªad
);

753 
tŸîr
 = 
	`fvec_sum
(
vwdis2
, 
≈t
);

755 
	`‰ì
(
vwdis2
);

756  
tŸîr
;

757 
	}
}

763 
	mdi°™˚_ty≥
;

764 
	md
, 
	m«
, 
	mnb
;

765 c⁄° *
	ma
,*
	mb
;

766 *
	mdi°2
;

767 
	m¡
;

768 
	m•lô_a
;

769 } 
	t¸oss_di°™˚s_∑øms_t
;

773 
	$compuã_¸oss_di°™˚s_èsk
 (*
¨g
, 
tid
, 
i
)

775 
¸oss_di°™˚s_∑øms_t
 *
t
=
¨g
;

776 if(
t
->
•lô_a
) {

777 
i0
 = 
t
->
«
*()
i
/t->
¡
;

778 
i1
 = 
t
->
«
*()(
i
+1)/t->
¡
;

779 if(
t
->
di°™˚_ty≥
<0)

780 
	`compuã_¸oss_di°™˚s_n⁄∑cked
 (
t
->
d
,
i1
-
i0
,t->
nb
,

781 
t
->
a
+
i0
*t->
d
,t->d,

782 
t
->
b
,t->
d
,

783 
t
->
di°2
+
i0
,t->
«
);

785 
	`compuã_¸oss_di°™˚s_Æt_n⁄∑cked
 (
t
->
di°™˚_ty≥
,t->
d
,
i1
-
i0
,t->
nb
,

786 
t
->
a
+
i0
*t->
d
,t->d,

787 
t
->
b
,t->
d
,

788 
t
->
di°2
+
i0
,t->
«
);

790 
i0
 = 
t
->
nb
*()
i
/t->
¡
;

791 
i1
 = 
t
->
nb
*()(
i
+1)/t->
¡
;

792 if(
t
->
di°™˚_ty≥
<0)

793 
	`compuã_¸oss_di°™˚s_n⁄∑cked
 (
t
->
d
,t->
«
,
i1
-
i0
,

794 
t
->
a
,t->
d
,

795 
t
->
b
+
i0
*t->
d
,t->d,

796 
t
->
di°2
+
i0
*t->
«
,t->na);

798 
	`compuã_¸oss_di°™˚s_Æt_n⁄∑cked
 (
t
->
di°™˚_ty≥
,

799 
t
->
d
,t->
«
,
i1
-
i0
,

800 
t
->
a
,t->
d
,

801 
t
->
b
+
i0
*t->
d
,t->d,

802 
t
->
di°2
+
i0
*t->
«
,t->na);

804 
	}
}

808 
	$compuã_¸oss_di°™˚s_thªad
 (
d
, 
«
, 
nb
,

809 c⁄° *
a
,

810 c⁄° *
b
, *
di°2
,

811 
¡
)

813 
¸oss_di°™˚s_∑øms_t
 
t
={-1,
d
,
«
,
nb
,
a
,
b
,
di°2
,
¡
};

815 
n
=
	`MAX
(
«
,
nb
);

817 if(
n
<
¡
)

818 
	`compuã_¸oss_di°™˚s
(
d
,
«
,
nb
,
a
,
b
,
di°2
);

820 
t
.
•lô_a
=
«
>
nb
;

821 
	`compuã_èsks
(
¡
,¡,&
compuã_¸oss_di°™˚s_èsk
,&
t
);

823 
	}
}

826 
	$compuã_¸oss_di°™˚s_Æt_thªad
 (
di°™˚_ty≥
,
d
, 
«
, 
nb
,

827 c⁄° *
a
,

828 c⁄° *
b
, *
di°2
,

829 
¡
)

831 
¸oss_di°™˚s_∑øms_t
 
t
 = {
di°™˚_ty≥
,
d
,
«
,
nb
,
a
,
b
,
di°2
,
¡
};

833 
n
=
	`MAX
(
«
,
nb
);

835 if(
n
<
¡
)

836 
	`compuã_¸oss_di°™˚s_Æt
 (
di°™˚_ty≥
,
d
,
«
,
nb
,
a
,
b
,
di°2
);

838 
t
.
•lô_a
=
«
>
nb
;

839 
	`compuã_èsks
(
¡
,¡,&
compuã_¸oss_di°™˚s_èsk
,&
t
);

841 
	}
}

845 #ifde‡
_OPENMP


847 
	~<omp.h
>

849 
	#SET_NT
 
	`omp_£t_num_thªads
(
¡
)

	)

853 
	#SET_NT


	)

861 
	$compuã_di°™˚s_1_thªad
 (
d
, 
nb
,

862 c⁄° *
a
,

863 c⁄° *
b
,

864 *
di°2
,

865 
n_thªad
) {

867 
	`compuã_di°™˚s_1_n⁄∑cked_thªad
(
d
,
nb
,
a
,
b
,d,
di°2
,
n_thªad
);

868 
	}
}

871 
	$compuã_di°™˚s_1_n⁄∑cked_thªad
 (
d
, 
nb
,

872 c⁄° *
a
,

873 c⁄° *
b
, 
ldb
,

874 *
di°2
,

875 
¡
) {

876 
i
;

878 
SET_NT
;

879 #¥agm®
omp
 
∑øŒñ


881 #¥agm®
omp
 

882 
i
=0;i<
¡
;i++) {

883 
i0
=
i
*
nb
/
¡
;

884 
i1
=(
i
+1)*
nb
/
¡
;

885 
	`compuã_di°™˚s_1_n⁄∑cked
 (
d
,
i1
-
i0
,
a
,

886 
b
+
i0
*
ldb
,ldb,

887 
di°2
+
i0
);

891 
	}
}

	@nn.h

41 #i‚de‡
NN_H_INCLUDED


42 
	#NN_H_INCLUDED


	)

79 
k¬_fuŒ
 (
di°™˚_ty≥
,

80 
nq
, 
nb
, 
d
, 
k
,

81 c⁄° *
b
, c⁄° *
q
,

82 c⁄° *
b_weights
,

83 *
assign
, *
dis
);

87 
k¬_fuŒ_thªad
 (
di°™˚_ty≥
,

88 
nq
, 
nb
, 
d
, 
k
,

89 c⁄° *
b
, c⁄° *
q
,

90 c⁄° *
b_weights
,

91 *
assign
, *
dis
,

92 
n_thªad
);

101 
¬
 (
n
, 
nb
, 
d
,

102 c⁄° *
b
, c⁄° *
v
,

103 *
assign
);

106 
¬_thªad
 (
n
, 
nb
, 
d
,

107 c⁄° *
b
, c⁄° *
v
,

108 *
assign
,

109 
n_thªad
);

113 * 
k¬
 (
n
, 
nb
, 
d
, 
k
,

114 c⁄° *
b
, c⁄° *
v
,

115 *
assign
);

118 * 
k¬_thªad
 (
nq
, 
nb
, 
d
, 
k
,

119 c⁄° *
b
, c⁄° *
v
,

120 *
assign
,

121 
n_thªad
);

140 
k¬_ª‹dî_sh‹éi°
(
n
, 
nb
, 
d
, 
k
,

141 c⁄° *
b
, c⁄° *
v
,

142 *
idx
, *
dis
);

163 
k¬_ªcompuã_exa˘_di°s
(
n
, 
nb
, 
d
, 
k
,

164 c⁄° *
b
, c⁄° *
v
,

165 
œbñ0
, *
kp
,

166 c⁄° *
idx
, *
dis
);

179 
compuã_¸oss_di°™˚s
 (
d
, 
«
, 
nb
,

180 c⁄° *
a
,

181 c⁄° *
b
, *
di°2
);

189 
compuã_¸oss_di°™˚s_n⁄∑cked
 (
d
, 
«
, 
nb
,

190 c⁄° *
a
, 
lda
,

191 c⁄° *
b
, 
ldb
,

192 *
di°2
, 
ldd
);

194 
compuã_¸oss_di°™˚s_thªad
 (
d
, 
«
, 
nb
,

195 c⁄° *
a
,

196 c⁄° *
b
, *
di°2
,

197 
¡
);

211 
compuã_¸oss_di°™˚s_Æt
 (
di°™˚_ty≥
, 
d
, 
«
, 
nb
,

212 c⁄° *
a
,

213 c⁄° *
b
, *
di°2
);

217 
compuã_¸oss_di°™˚s_Æt_n⁄∑cked
 (
di°™˚_ty≥
, 
d
, 
«
, 
nb
,

218 c⁄° *
a
, 
lda
,

219 c⁄° *
b
, 
ldb
,

220 *
di°2
, 
ldd
);

225 
compuã_¸oss_di°™˚s_Æt_thªad
 (
di°™˚_ty≥
,
d
, 
«
, 
nb
,

226 c⁄° *
a
,

227 c⁄° *
b
, *
di°2
,

228 
¡
);

232 
compuã_di°™˚s_1
 (
d
, 
nb
,

233 c⁄° *
a
,

234 c⁄° *
b
,

235 *
di°2
);

237 
compuã_di°™˚s_1_n⁄∑cked
 (
d
, 
nb
,

238 c⁄° *
a
,

239 c⁄° *
b
, 
ldb
,

240 *
di°2
);

242 
compuã_di°™˚s_1_thªad
 (
d
, 
nb
,

243 c⁄° *
a
,

244 c⁄° *
b
,

245 *
di°2
,

246 
n_thªad
);

248 
compuã_di°™˚s_1_n⁄∑cked_thªad
 (
d
, 
nb
,

249 c⁄° *
a
,

250 c⁄° *
b
, 
ldb
,

251 *
di°2
,

252 
n_thªad
);

	@sorting.c

39 
	~<as£π.h
>

40 
	~<°rög.h
>

41 
	~<m©h.h
>

43 
	~"s‹tög.h
"

44 
	~"machöedïs.h
"

45 
	~"böhóp.h
"

46 
	~"ve˘‹.h
"

48 
	#NEWA
(
ty≥
,
n
Ë—y≥*)
	`mÆloc
(—y≥)*“))

	)

51 
	$com∑ª_f‹_k_mö
 (c⁄° *
v1
, c⁄° *
v2
)

53  *(*(**Ë
v1
Ë> *(*(**Ë
v2
) ? 1 : -1;

54 
	}
}

64 
	#PERM
(
i
Ë(*
≥rm
[i])

	)

65 
	#SWAPFPTR
(
i
,
j
Ë{c⁄° * 
tmp
 = 
≥rm
[i];Öîm[i] =Öîm[j];Öîm[j] =Åmp; }

	)

69 
	$hﬂª_£À˘p
 (c⁄° **
≥rm
, 
i0
, 
i1
, 
q
)

71 
pivŸ
 = 
	`PERM
(
i0
);

72 
j0
, 
j1
, 
lim
;

73 
	`as£π
 (
i1
 - 
i0
 > 1 && 
q
 > i0 && q < i1);

75 
j0
 = 
i0
, 
j1
 = 
i1
 ; 1 ; ) {

76 
j0
 < 
j1
 - 1) {

77 
j0
++;

78 i‡(
	`PERM
(
j0
Ë> 
pivŸ
)

79 
íd£göf
;

81 
lim
 = 
j1
;

83 
íd£göf
:

84 
j1
 - 1 > 
j0
) {

85 
j1
--;

86 i‡(
	`PERM
(
j1
Ë<
pivŸ
)

87 
íd£gsup
;

89 
lim
 = 
j0
;

91 
íd£gsup
:

92 
	`SWAPFPTR
 (
j0
, 
j1
);

94 
	`as£π
 (
lim
 > 
i0
);

95 i‡(
lim
 =
i1
) {

96 
	`SWAPFPTR
 (
i0
, 
i1
 - 1);

97 
lim
 = 
i1
 - 1;

99 i‡(
lim
 =
q
)

101 i‡(
q
 < 
lim
)

102 
	`hﬂª_£À˘p
 (
≥rm
, 
i0
, 
lim
, 
q
);

104 
	`hﬂª_£À˘p
 (
≥rm
, 
lim
, 
i1
, 
q
);

105 
	}
}

107 #unde‡
PERM


108 #unde‡
SWAPFPTR


112 
	#PERM
(
i
Ë
f
[i]

	)

113 
	#SWAPFLOAT
(
i
,
j
Ë{
tmp
 = 
f
[i]; f[i]=f[j]; f[j]Òmp; }

	)

115 
	$hﬂª_£À˘_f
 (*
f
, 
i0
, 
i1
, 
q
)

117 
pivŸ
 = 
	`PERM
(
i0
);

118 
j0
, 
j1
, 
lim
;

119 
	`as£π
 (
i1
 - 
i0
 > 1 && 
q
 > i0 && q < i1);

121 
j0
 = 
i0
, 
j1
 = 
i1
 ; 1 ; ) {

122 
j0
 < 
j1
 - 1) {

123 
j0
++;

124 i‡(
	`PERM
(
j0
Ë> 
pivŸ
)

125 
íd£göf
;

127 
lim
 = 
j1
;

129 
íd£göf
:

130 
j1
 - 1 > 
j0
) {

131 
j1
--;

132 i‡(
	`PERM
(
j1
Ë<
pivŸ
)

133 
íd£gsup
;

135 
lim
 = 
j0
;

137 
íd£gsup
:

138 
	`SWAPFLOAT
 (
j0
, 
j1
);

140 
	`as£π
 (
lim
 > 
i0
);

141 i‡(
lim
 =
i1
) {

142 
	`SWAPFLOAT
 (
i0
, 
i1
 - 1);

143 
lim
 = 
i1
 - 1;

145 i‡(
lim
 =
q
)

147 i‡(
q
 < 
lim
)

148 
	`hﬂª_£À˘_f
 (
f
, 
i0
, 
lim
, 
q
);

150 
	`hﬂª_£À˘_f
 (
f
, 
lim
, 
i1
, 
q
);

151 
	}
}

153 #unde‡
PERM


154 #unde‡
SWAPFLOAT


162 
	$fvec_k_max_hﬂª
 (c⁄° *
vÆ
, 
n
, *
idx
, 
k
)

165 c⁄° **
idx_±r
 = 
	`NEWA
 (c⁄° *, 
n
);

167 
i
;

168 
i
 = 0; i < 
n
; i++)

169 
idx_±r
[
i
] = 
vÆ
 + i;

171 i‡(
k
 < 
n
)

172 
	`hﬂª_£À˘p
 (
idx_±r
, 0, 
n
,Ç - 
k
);

175 
	`qs‹t
 (
idx_±r
 + 
n
 - 
k
, k,  (*idx_±r), 
com∑ª_f‹_k_mö
);

177 
i
 = 0; i < 
k
; i++)

178 
idx
[
i
] = 
idx_±r
[
n
 - 1 - i] - 
vÆ
;

180 
	`‰ì
 (
idx_±r
);

181 
	}
}

185 
	$fvec_k_max_maxhóp
 (c⁄° *
vÆ
, 
n
,

186 *
idx
, 
k
)

188 
fböhóp_t
 *
mh
 = 
	`fböhóp_√w
 (
k
);

189 
i
;

191 
i
 = 0; i < 
n
; i++)

192 
	`fböhóp_add
 (
mh
, 
i
, -
vÆ
[i]);

194 
	`fböhóp_s‹t_œbñs
 (
mh
,
idx
);

195 
	`fböhóp_dñëe
 (
mh
);

196 
	}
}

199 
	$fvec_k_max
 (c⁄° *
vÆ
, 
n
, *
idx
, 
k
)

201 
	`as£π
 (
k
 <
n
);

203 i‡(
n
 =0 || 
k
 == 0)

207 i‡(
n
 > 4 * 
k
)

208 
	`fvec_k_max_maxhóp
 (
vÆ
, 
n
, 
idx
, 
k
);

210 
	`fvec_k_max_hﬂª
 (
vÆ
, 
n
, 
idx
, 
k
);

220 
	}
}

228 
	$fvec_k_mö_hﬂª
 (c⁄° *
vÆ
, 
n
, *
idx
, 
k
)

231 c⁄° **
idx_±r
 = 
	`NEWA
 (c⁄° *, 
n
);

233 
i
;

234 
i
 = 0; i < 
n
; i++)

235 
idx_±r
[
i
] = 
vÆ
 + i;

237 i‡(
k
 < 
n
)

238 
	`hﬂª_£À˘p
 (
idx_±r
, 0, 
n
, 
k
);

241 
	`qs‹t
 (
idx_±r
, 
k
,  (*idx_±r), 
com∑ª_f‹_k_mö
);

243 
i
 = 0; i < 
k
; i++)

244 
idx
[
i
] = 
idx_±r
[i] - 
vÆ
;

246 
	`‰ì
 (
idx_±r
);

247 
	}
}

251 
	$fvec_k_mö_maxhóp
 (c⁄° *
vÆ
, 
n
,

252 *
idx
, 
k
)

254 
fböhóp_t
 *
mh
 = 
	`fböhóp_√w
 (
k
);

255 
i
;

257 
i
 = 0; i < 
n
; i++)

258 
	`fböhóp_add
 (
mh
, 
i
, 
vÆ
[i]);

260 
	`fböhóp_s‹t_œbñs
 (
mh
, 
idx
);

261 
	`fböhóp_dñëe
 (
mh
);

262 
	}
}

265 
	$fvec_k_mö
 (c⁄° *
vÆ
, 
n
, *
idx
, 
k
)

267 
	`as£π
 (
k
 <
n
);

269 i‡(
n
 =0 || 
k
 == 0)

272 i‡(
k
 == 1) {

273 *
idx
 = 
	`fvec_¨g_mö
 (
vÆ
, 
n
);

278 i‡(
n
 > 3 * 
k
)

279 
	`fvec_k_mö_maxhóp
 (
vÆ
, 
n
, 
idx
, 
k
);

281 
	`fvec_k_mö_hﬂª
 (
vÆ
, 
n
, 
idx
, 
k
);

282 
	}
}

290 
	$föd_œbñs
 (c⁄° *
œbñs
, 
ƒes
, *
ûabñs
, 
nûabñs
)

292 
aux
[
nûabñs
];

293 
i
, 
j
, 
À·
 = 
nûabñs
;

294 
	`mem˝y
 (
aux
, 
ûabñs
,  (Ë* 
nûabñs
);

295 
	`mem£t
 (
ûabñs
, 0xff,  (Ë* 
nûabñs
);

296 
i
 = 0; i < 
ƒes
; i++) {

297 
j
 = 0; j < 
nûabñs
; j++)

298 i‡(
œbñs
[
i
] =
aux
[
j
]) {

299 i‡(
ûabñs
[
j
] < 0) {

300 
ûabñs
[
j
] = 
i
;

301 
À·
--;

302 i‡(!
À·
)

307 
	}
}

309 #ifde‡
HAVE_TLS


311 
__thªad
 c⁄° * 
	gèb_to_s‹t_f
;

313 
	$com∑ª_f‹_s‹t_ödex_f
 (c⁄° *
v1
, c⁄° *
v2
)

315 #ñi‡
	`deföed
(
HAVE_QSORT_R
)

316 
	$com∑ª_f‹_s‹t_ödex_f
 (*
thunk
, c⁄° *
v1
, c⁄° *
v2
)

318 c⁄° *
èb_to_s‹t_f
=
thunk
;

323 
dt
 = 
èb_to_s‹t_f
[*(*)
v1
] -Åab_to_s‹t_f[*(*)
v2
];

324 i‡(
dt
)

325  
dt
>0 ? 1 : -1;

326  *(*)
v1
 - *(*)
v2
;

327 
	}
}

331 
	$fvec_s‹t_ödex
(c⁄° *
èb
,
n
,*
≥rm
) {

332 
i
;

334 
i
 = 0 ; i < 
n
 ; i++)

335 
≥rm
[
i
] = i;

337 #ifde‡
HAVE_TLS


338 
èb_to_s‹t_f
 = 
èb
;

339 
	`qs‹t
 (
≥rm
, 
n
, (), 
com∑ª_f‹_s‹t_ödex_f
);

340 #ñi‡
	`deföed
(
HAVE_QSORT_R
)

341 
	`qs‹t_r
 (
≥rm
, 
n
, (), (*)
èb
, 
com∑ª_f‹_s‹t_ödex_f
);

343 
	}
}

347 #ifde‡
HAVE_TLS


349 
__thªad
 c⁄° * 
	gèb_to_s‹t
;

351 
	$com∑ª_f‹_s‹t_ödex
 (c⁄° *
v1
, c⁄° *
v2
)

353 #ñi‡
	`deföed
(
HAVE_QSORT_R
)

354 
	$com∑ª_f‹_s‹t_ödex
 (*
thunk
, c⁄° *
v1
, c⁄° *
v2
)

356 c⁄° *
èb_to_s‹t
 = 
thunk
;

361 
dt
 = 
èb_to_s‹t
[*(*)
v1
] -Åab_to_s‹t[*(*)
v2
];

362 i‡(
dt
)

363  
dt
;

364  *(*)
v1
 - *(*)
v2
;

365 
	}
}

368 
	$ivec_s‹t_ödex
 (c⁄° *
èb
, 
n
, *
≥rm
)

370 
i
;

372 
i
 = 0 ; i < 
n
 ; i++)

373 
≥rm
[
i
] = i;

375 #ifde‡
HAVE_TLS


376 
èb_to_s‹t
 = 
èb
;

377 
	`qs‹t
 (
≥rm
, 
n
, (), 
com∑ª_f‹_s‹t_ödex
);

378 #ñi‡
	`deföed
(
HAVE_QSORT_R
)

379 
	`qs‹t_r
 (
≥rm
, 
n
, (), (*)
èb
, 
com∑ª_f‹_s‹t_ödex
);

381 
	}
}

384 
	$ivec_övît_≥rm
 (c⁄° *
≥rm
, 
n
, *
ùîm
)

386 
i
;

387 
i
 = 0 ; i < 
n
 ; i++)

388 
ùîm
[
≥rm
[
i
]] = i;

389 
	}
}

392 
	$com∑ª_f‹_ivec_s‹t
 (c⁄° *
v1
, c⁄° *
v2
)

394 
dt
 = *(*)
v1
 - *(*)
v2
;

395 i‡(
dt
)

396  
dt
;

397  
v1
 - 
v2
;

398 
	}
}

400 
	$ivec_s‹t
(*
èb
, 
n
)

402 
	`qs‹t
 (
èb
, 
n
, (), 
com∑ª_f‹_ivec_s‹t
);

403 
	}
}

405 
	$com∑ª_f‹_fvec_s‹t
 (c⁄° *
v1
, c⁄° *
v2
)

407 
dt
 = *(*)
v1
 - *(*)
v2
;

408  
dt
>0 ? 1 : dt<0 ? -1 : 
v1
 - 
v2
;

409 
	}
}

412 
	$fvec_s‹t
(*
èb
, 
n
)

414 
	`qs‹t
 (
èb
, 
n
, (), 
com∑ª_f‹_fvec_s‹t
);

415 
	}
}

418 
	$fvecs_s‹t
 (* 
v
, 
d
, 
n
)

420 
i
;

421 
i
 = 0 ; i < 
n
 ; i++)

422 
	`fvec_s‹t
 (
v
 + 
i
 * 
d
, d);

423 
	}
}

427 
	$ivec_s‹t_by_≥rmuèti⁄
 (* 
v
, c⁄° * 
‹dî
, 
n
)

429 
i
;

430 * 
o
 = 
	`mÆloc
 (
n
 *  (*o));

432 
i
 = 0 ; i < 
n
 ; i++)

433 
o
[
‹dî
[
i
]] = i;

435 
i
 = 0 ; i < 
n
 ; i++)

436 
o
[
i
] != i) {

437 
√wpos
 = 
o
[
i
];

439 
a
 = 
v
[
i
];

440 
v
[
i
] = v[
√wpos
];

441 
v
[
√wpos
] = 
a
;

443 
b
 = 
o
[
√wpos
];

444 
o
[
√wpos
] = o[
i
];

445 
o
[
i
] = 
b
;

448 
	`‰ì
 (
o
);

449 
	}
}

452 
	$fvec_s‹t_by_≥rmuèti⁄
 (* 
v
, c⁄° * 
‹dî
, 
n
)

454 
i
;

455 * 
o
 = 
	`mÆloc
 (
n
 *  (*o));

457 
i
 = 0 ; i < 
n
 ; i++)

458 
o
[
‹dî
[
i
]] = i;

460 
i
 = 0 ; i < 
n
 ; i++)

461 
o
[
i
] != i) {

462 
√wpos
 = 
o
[
i
];

464 
a
 = 
v
[
i
];

465 
v
[
i
] = v[
√wpos
];

466 
v
[
√wpos
] = 
a
;

468 
b
 = 
o
[
√wpos
];

469 
o
[
√wpos
] = o[
i
];

470 
o
[
i
] = 
b
;

473 
	`‰ì
 (
o
);

474 
	}
}

483 
	mvÆ
;

484 
	mno
;

485 
	mn_gt
;

486 
	mn_eq
;

488 
	mc›y_‰om_no
;

489 } 
	t°›_t
;

491 
	$cmp_°›s_f‹_ö¸ósög
 (c⁄° *
v1
, c⁄° *
v2
)

493 
f1
=((
°›_t
 *Ë
v1
)->
vÆ
;

494 
f2
=((
°›_t
 *Ë
v2
)->
vÆ
;

496  
	`i¢™
(
f2
Ë|| f2 < 
f1
 ? 1 : -1;

497 
	}
}

500 
°›_t
 *
	$make_°›s
 (c⁄° *
èb
, 
n
,

501 c⁄° *
vÆs
, 
nvÆ
, *
n°›_out
)

503 
i
;

504 
°›_t
 *
°›s
 = 
	`NEWA
 (°›_t, 
nvÆ
 + 1);

506 
i
 = 0; i < 
nvÆ
; i++) {

507 
°›_t
 *
°›
 = 
°›s
 + 
i
;

508 
°›
->
vÆ
 = 
vÆs
[
i
];

509 
°›
->
no
 = 
i
;

510 
°›
->
n_gt
 = st›->
n_eq
 = 0;

513 
°›_t
 *
°›
 = 
°›s
 + 
nvÆ
;

514 
°›
->
vÆ
 = -1e30;

515 
°›
->
no
 = -1;

516 
°›
->
n_gt
 = st›->
n_eq
 = 0;

518 
	`qs‹t
 (
°›s
, 
nvÆ
 + 1,  (
°›_t
), &
cmp_°›s_f‹_ö¸ósög
);

519 
i
=1;i<
nvÆ
+1;i++Ë
	`as£π
(
°›s
[i-1].
vÆ
<=stops[i].val);

520 
	`as£π
 (
°›s
[0].
no
 =-1 || !
	`föôe
(°›s[0].
vÆ
));

523 
n°›
 = 
nvÆ
 + 1;

524 
i
 = 1;

525 
i
 < 
n°›
) {

526 i‡(
°›s
[
i
].
vÆ
 == stops[i - 1].val) {

527 
c›õd_no
 = 
°›s
[
i
].
no
;

529 
	`memmove
 (
°›s
 + 
i
, st›†+ i + 1, (
n°›
 - i - 1Ë*  (
°›_t
));

530 
n°›
--;

531 
°›s
[
n°›
].
no
 = 
c›õd_no
;

532 
°›s
[
n°›
].
c›y_‰om_no
 = st›s[
i
 - 1].
no
;

533 } 
i
++;

536 
i
 = 0; i < 
n
; i++) {

537 
v
 = 
èb
[
i
];

540 
t0
 = 0, 
t1
 = 
n°›
;

541 
t0
 + 1 !
t1
) {

542 
med
 = (
t0
 + 
t1
) / 2;

543 i‡(
°›s
[
med
].
vÆ
 <
v
)

544 
t0
 = 
med
;

546 
t1
 = 
med
;

548 i‡(
°›s
[
t0
].
vÆ
 < 
v
)

549 
°›s
[
t0
].
n_gt
++;

551 
°›s
[
t0
].
n_eq
++;

554 *
n°›_out
 = 
n°›
;

556  
°›s
;

557 
	}
}

559 
	$fvec_ønks_of
 (c⁄° *
èb
, 
n
,

560 c⁄° *
vÆs
, 
nvÆ
,

561 *
möønks
, *
maxønks
)

564 
i
, 
n°›
;

566 
°›_t
 *
°›s
 = 
	`make_°›s
 (
èb
, 
n
, 
vÆs
, 
nvÆ
, &
n°›
);

569 
ønk
 = 0;

570 
i
 = 
n°›
 - 1; i > 0; i--) {

571 
°›_t
 *
°›
 = 
°›s
 + 
i
;

572 
no
 = 
°›
->no;

573 
ønk
 +
°›
->
n_gt
;

574 i‡(
möønks
)

575 
möønks
[
no
] = 
ønk
;

576 
ønk
 +
°›
->
n_eq
;

577 i‡(
maxønks
)

578 
maxønks
[
no
] = 
ønk
;

582 
i
 = 
n°›
; i <
nvÆ
; i++) {

583 
§c
 = 
°›s
[
i
].
c›y_‰om_no
;

584 
d°
 = 
°›s
[
i
].
no
;

585 i‡(
möønks
)

586 
möønks
[
d°
] = möønks[
§c
];

587 i‡(
maxønks
)

588 
maxønks
[
d°
] = maxønks[
§c
];

591 
	`‰ì
 (
°›s
);

592 
	}
}

595 
	$fvec_ønks_öc_of
 (c⁄° *
èb
, 
n
,

596 c⁄° *
vÆs
, 
nvÆ
,

597 *
möønks
, *
maxønks
)

599 
i
, 
n°›
;

601 
°›_t
 *
°›s
 = 
	`make_°›s
 (
èb
, 
n
, 
vÆs
, 
nvÆ
, &
n°›
);

605 
ønk
 = 
°›s
[0].
n_gt
;

607 
i
 = 1; i < 
n°›
; i++) {

608 
°›_t
 *
°›
 = 
°›s
 + 
i
;

609 
no
 = 
°›
->no;

610 i‡(
möønks
)

611 
möønks
[
no
] = 
ønk
;

612 
ønk
 +
°›
->
n_eq
;

613 i‡(
maxønks
)

614 
maxønks
[
no
] = 
ønk
;

615 
ønk
 +
°›
->
n_gt
;

619 
i
 = 
n°›
; i <
nvÆ
; i++) {

620 
§c
 = 
°›s
[
i
].
c›y_‰om_no
;

621 
d°
 = 
°›s
[
i
].
no
;

622 i‡(
möønks
)

623 
möønks
[
d°
] = möønks[
§c
];

624 i‡(
maxønks
)

625 
maxønks
[
d°
] = maxønks[
§c
];

628 
	`‰ì
 (
°›s
);

629 
	}
}

631 
	$ivec_s‹ãd_föd
 (c⁄° *
v
,
n
,
vÆ
)

633 if(
n
==0 || 
v
[0]>
vÆ
)

636 
i0
 = 0;

637 
i1
 = 
n
;

640 
i1
 > 
i0
 + 1) {

641 
i2
 = (
i0
 + 
i1
) / 2;

642 i‡(
vÆ
 < 
v
[
i2
])

643 
i1
 = 
i2
;

645 
i0
 = 
i2
;

647  
i0
;

648 
	}
}

653 
	$ivec_s‹ãd_cou¡_occuºí˚s
 (c⁄° *
v
, 
n
, 
vÆ
)

655 
i0
 = 
	`ivec_s‹ãd_föd
 (
v
, 
n
, 
vÆ
);

657 i‡(
i0
<0 || 
v
[i0]!=
vÆ
)

661 
i1
 = 
i0
 + 1;

662 
i1
 < 
n
 && 
v
[i1] =
vÆ
)

663 
i1
++;

664 
i0
--;

665 
i0
 >0 && 
v
[i0] =
vÆ
)

666 
i0
--;

668  
i1
 - 
i0
 - 1;

669 
	}
}

672 
	$ivec_s‹ãd_cou¡_occuºí˚s_mu…ùÀ
(c⁄° *
v
,
n
,

673 c⁄° *
vÆs
,
nvÆ
)

675 
i
;

676 
accu
=0;

678 
i
 = 0 ; i < 
nvÆ
 ; i++)

679 
accu
 +
	`ivec_s‹ãd_cou¡_occuºí˚s
 (
v
, 
n
, 
vÆs
[
i
]);

681  
accu
;

682 
	}
}

686 
	$ivec_s‹ãd_cou¡_unique
 (c⁄° *
v
, 
n
)

688 
i
 = 0;

689 
cou¡
 = 0;

691 
i
 < 
n
) {

692 
cou¡
++;

693 
v0
 = 
v
[
i
];

694 
i
 < 
n
 && 
v
[i] =
v0
)

695 
i
++;

698  
cou¡
;

699 
	}
}

703 
	$fvec_medün
 (*
f
, 
n
)

705 if(
n
 == 0)

708 i‡(
n
 == 1)

709  
f
[0];

711 
hÆ‚
 = 
n
 / 2;

712 
j
;

714 
	`hﬂª_£À˘_f
 (
f
, 0, 
n
, 
hÆ‚
);

716 
mö_uµî
 = 
f
[
hÆ‚
];

717 
j
 = 
hÆ‚
 + 1; j < 
n
; j++)

718 i‡(
f
[
j
] < 
mö_uµî
)

719 
mö_uµî
 = 
f
[
j
];

721 i‡(
n
 % 2 == 1)

722  
mö_uµî
;

724 
max_lowî
 = 
f
[0];

725 
j
 = 1; j < 
hÆ‚
; j++)

726 i‡(
f
[
j
] > 
max_lowî
)

727 
max_lowî
 = 
f
[
j
];

728  0.5 * (
mö_uµî
 + 
max_lowî
);

730 
	}
}

733 
	$fvec_medün_c⁄°
 (c⁄° *
f
, 
n
)

735 *
f2
 = 
	`fvec_√w
 (
n
);

736 
	`fvec_˝y
 (
f2
, 
f
, 
n
);

737 
med
 = 
	`fvec_medün
 (
f2
, 
n
);

738 
	`‰ì
 (
f2
);

739  
med
;

740 
	}
}

743 
	$fvec_mö
 (c⁄° *
f
, 
n
)

745 
	`as£π
 (
n
 > 0);

746 
m
 = 
f
[0];

747 
i
;

748 
i
 = 1 ; i < 
n
 ; i++)

749 i‡(
f
[
i
] < 
m
)

750 
m
 = 
f
[
i
];

751  
m
;

752 
	}
}

755 
	$ivec_mö
 (c⁄° *
f
, 
n
)

757 
	`as£π
 (
n
 > 0);

758 
m
 = 
f
[0];

759 
i
;

760 
i
 = 1 ; i < 
n
 ; i++)

761 i‡(
f
[
i
] < 
m
)

762 
m
 = 
f
[
i
];

763  
m
;

764 
	}
}

767 
	$fvec_max
 (c⁄° *
f
, 
n
)

769 
	`as£π
 (
n
 > 0);

770 
m
 = 
f
[0];

771 
i
;

772 
i
 = 1 ; i < 
n
 ; i++)

773 i‡(
f
[
i
] > 
m
)

774 
m
 = 
f
[
i
];

775  
m
;

776 
	}
}

779 
	$ivec_max
 (c⁄° *
f
, 
n
)

781 
	`as£π
 (
n
 > 0);

782 
m
 = 
f
[0];

783 
i
;

784 
i
 = 1 ; i < 
n
 ; i++)

785 i‡(
f
[
i
] > 
m
)

786 
m
 = 
f
[
i
];

787  
m
;

788 
	}
}

791 
	$fvec_¨g_max
 (c⁄° *
f
, 
n
)

793 
	`as£π
 (
n
 > 0);

794 
m
 = 
f
[0];

795 
i
,
i0
 = 0;

796 
i
 = 1 ; i < 
n
 ; i++)

797 i‡(
f
[
i
] > 
m
) {

798 
m
 = 
f
[
i
];

799 
i0
 = 
i
;

801  
i0
;

802 
	}
}

805 
	$fvec_¨g_mö
 (c⁄° *
f
, 
n
)

807 
	`as£π
 (
n
 > 0);

808 
m
 = 
f
[0];

809 
i
, 
i0
 = 0;

810 
i
 = 1 ; i < 
n
 ; i++)

811 if(
f
[
i
] < 
m
) {

812 
m
 = 
f
[
i
];

813 
i0
 = 
i
;

815  
i0
;

816 
	}
}

819 
	$fvec_qu™tûe
 (*
f
, 
n
, 
q
)

821 
	`as£π
 (
n
>0);

822 i‡(
n
==1Ë 
f
[0];

823 i‡(
q
==0Ë 
	`fvec_mö
(
f
, 
n
);

824 i‡(
q
>=
n
Ë 
	`fvec_max
(
f
,Ç);

826 
	`hﬂª_£À˘_f
 (
f
, 0, 
n
, 
q
);

828 
mö_uµî
 = 
f
[
q
];

829 
j
;

830 
j
 = 
q
 + 1; j < 
n
; j++)

831 i‡(
f
[
j
] < 
mö_uµî
)

832 
mö_uµî
 = 
f
[
j
];

834  
mö_uµî
;

835 
	}
}

842 
	$mîge_‹dîed_£ts
 (c⁄° **
œbñs
,c⁄° **
vÆs
,

843 c⁄° *
sizes
,
k
,

844 **
œbñs_out
,**
vÆs_out
) {

845 
i
,
j
;

846 
n_out
 = 
	`ivec_sum
 (
sizes
, 
k
);

848 *
Æl_œbñs
 = 
	`ivec_√w
 (
n_out
);

849 *
Æl_vÆs
 = 
	`fvec_√w
 (
n_out
);

859 
fböhóp_t
 *
mh
 = 
	`fböhóp_√w
(
k
);

862 
ödi˚s
[
k
];

864  
i
 = 0 ; i < 
k
 ; i++) {

865 i‡(
sizes
[
i
] == 0)

867 
ödi˚s
[
i
] = 0;

868 
œbñ
 = 
œbñs
[
i
][0];

869 
mh_vÆ
 = -
œbñ
;

870 
	`as£π
 (()(-
mh_vÆ
Ë=
œbñ
 || !"lostÖrecision in int->float conversion");

871 
	`fböhóp_add
 (
mh
, 
i
, 
mh_vÆ
);

874 
Æl_i
 = 0;

875 
mh
->
k
>0) {

878 
i
 = 
mh
->
œbñ
[1];

879 
j
 = ()(-
mh
->
vÆ
[1]);

884 
Æl_œbñs
[
Æl_i
] = 
j
;

885 
Æl_vÆs
[
Æl_i
] = 
vÆs
[
i
][
ödi˚s
[i]];

886 
Æl_i
++;

889 
	`fböhóp_p›
 (
mh
);

891 
ödi˚s
[
i
]++;

892 i‡(
ödi˚s
[
i
] < 
sizes
[i]) {

893 
œbñ
 = 
œbñs
[
i
][
ödi˚s
[i]];

894 
mh_vÆ
 = -
œbñ
;

895 
	`as£π
 (()(-
mh_vÆ
Ë=
œbñ
 || !"lostÖrecision in int->float conversion");

896 
	`fböhóp_add
 (
mh
, 
i
, 
mh_vÆ
);

899 
	`fböhóp_dñëe
 (
mh
);

900 
	`as£π
 (
Æl_i
 =
n_out
);

902 *
œbñs_out
 = 
Æl_œbñs
;

903 *
vÆs_out
 = 
Æl_vÆs
;

904  
n_out
;

905 
	}
}

909 
	$com¥ess_œbñs_by_di§©io
 (*
œbñs
, c⁄° *
vÆs
, 
n
, 
øtio
) {

910 i‡(!
n
)

912 
i
;

913 
mö
 = 
vÆs
[0];

914 
i
 = 1 ; i < 
n
 ; i++)

915 i‡(
vÆs
[
i
] < 
mö
)

916 
mö
 = 
vÆs
[
i
];

918 
thªsh
 = 
mö
 * 
øtio
;

919 
j
 = 0;

920 
i
 = 0 ; i < 
n
 ; i++)

921 i‡(
vÆs
[
i
] < 
thªsh
)

922 
œbñs
[
j
++] =Üabñs[
i
];

925 
i
 = 
j
 ; i < 
n
 ; i++)

926 
œbñs
[
i
]=-1;

928  
j
;

929 
	}
}

	@sorting.h

39 #i‚de‡
SORTING_H_INCLUDED


40 
	#SORTING_H_INCLUDED


	)

57 
fvec_k_max
(c⁄° *
v
, 
n
, *
maxes
, 
k
);

63 
fvec_k_mö
(c⁄° *
v
, 
n
, *
mös
, 
k
);

84 
fvec_ønks_of
(c⁄° *
èb
,
n
,

85 c⁄° *
vÆs
,
nvÆ
,

86 *
möønks
,*
maxønks
);

89 
fvec_ønks_öc_of
(c⁄° *
èb
, 
n
,

90 c⁄° *
vÆs
, 
nvÆ
,

91 *
möønks
, *
maxønks
);

107 
föd_œbñs
 (c⁄° *
œbñs
, 
ƒes
, *
ûabñs
, 
nûabñs
);

110 
fvec_mö
 (c⁄° *
f
, 
n
);

111 
ivec_mö
 (c⁄° * 
f
, 
n
);

115 
fvec_max
(c⁄° *
f
, 
n
);

116 
ivec_max
 (c⁄° *
f
, 
n
);

120 
fvec_¨g_mö
 (c⁄° *
f
, 
n
);

124 
fvec_¨g_max
 (c⁄° *
f
, 
n
);

128 
fvec_medün
 (*
f
, 
n
);

131 
fvec_medün_c⁄°
 (c⁄° *
f
, 
n
);

138 
fvec_qu™tûe
 (*
f
,
n
,
q
);

142 
ivec_s‹t
 (*
èb
, 
n
);

155 
ivec_s‹t_ödex
 (c⁄° *
èb
, 
n
, *
≥rm
);

158 
ivec_övît_≥rm
 (c⁄° *
≥rm
, 
n
, *
ùîm
);

162 
fvec_s‹t
 (*
v
, 
n
);

165 
fvecs_s‹t
 (*
v
, 
d
, 
n
);

168 
fvec_s‹t_ödex
 (c⁄° *
èb
, 
n
, *
≥rm
);

174 
ivec_s‹t_by_≥rmuèti⁄
 (* 
v
, c⁄° * 
‹dî
, 
n
);

176 
fvec_s‹t_by_≥rmuèti⁄
 (* 
v
, c⁄° * 
‹dî
, 
n
);

182 
ivec_s‹ãd_cou¡_occuºí˚s
 (c⁄° *
v
, 
n
, 
vÆ
);

185 
ivec_s‹ãd_föd
 (c⁄° *
v
, 
n
, 
vÆ
);

188 
ivec_s‹ãd_cou¡_unique
 (c⁄° *
v
, 
n
);

191 
ivec_s‹ãd_cou¡_occuºí˚s_mu…ùÀ
 (c⁄° *
v
, 
n
,

192 c⁄° *
vÆs
, 
nvÆ
);

207 
mîge_‹dîed_£ts
 (c⁄° **
œbñs
, c⁄° **
vÆs
,

208 c⁄° *
sizes
, 
k
,

209 **
œbñs_out
, **
vÆs_out
);

221 
com¥ess_œbñs_by_di§©io
 (*
œbñs
, c⁄° *
vÆs
, 
n
,

222 
øtio
);

	@spectral_clustering.c

39 
	~<as£π.h
>

40 
	~<°dlib.h
>

41 
	~<m©h.h
>

43 
	~"¬.h
"

44 
	~"eigs.h
"

45 
	~"ve˘‹.h
"

46 
	~"m©rix.h
"

47 
	~"kmóns.h
"

48 
	~"•e˘øl_˛u°îög.h
"

51 
	$gaussün_kî√l
 (
d
, 
n1
, 
n2
,

52 c⁄° * 
v1
, c⁄° * 
v2
,

53 
sigma
, * 
kî
)

55 
i
;

57 
ƒ2
 = 1 / (2 * 
sigma
 * sigma);

60 
	`compuã_¸oss_di°™˚s
 (
d
, 
n1
, 
n2
, 
v1
, 
v2
, 
kî
);

62 
i
 = 0 ; i < 
n1
 * 
n2
 ; i++)

63 
kî
[
i
] = 
	`exp
 (-kî[i] * 
ƒ2
);

64 
	}
}

69 
	$•e˘øl_˛u°îög
 (
d
, 
n
, 
k
, 
sigma
, 
nôî
,

70 c⁄° * 
v
, 
¡
, 
£ed
, 
ƒedo
,

71 * 
assign
, * 
«ssign
)

73 
i
, 
j
;

76 * 
kî
 = 
	`fvec_√w
 (
n
 *Ç);

77 
	`gaussün_kî√l
 (
d
, 
n
,Ç, 
v
, v, 
sigma
, 
kî
);

79 
	`fm©_¥öt
 (
kî
, 
n
,Ç);

83 * 
deg
 = 
	`fvec_√w_0
 (
n
);

84 
i
 = 0 ; i < 
n
 ; i++) {

85 
kî
[
i
 * 
n
 + i] = 0;

86 
j
 = 0 ; j < 
n
 ; j++)

87 
deg
[
i
] +
kî
[ò* 
n
 + 
j
];

90 
i
 = 0 ; i < 
n
 ; i++)

91 
deg
[
i
] = 1 / 
	`sqπ
 (deg[i]);

93 
i
 = 0 ; i < 
n
 ; i++)

94 
j
 = 0 ; j < 
n
 ; j++)

95 
kî
[
i
 * 
n
 + 
j
] *
deg
[i] * deg[j];

98 * 
eigvÆ
 = 
	`fvec_√w
 (
n
);

99 * 
eigvec
 = 
	`fvec_√w
 (
n
 *Ç);

100 
ªt
 = 
	`eigs_sym
 (
n
, 
kî
, 
eigvÆ
, 
eigvec
);

101 
	`‰ì
 (
deg
);

102 
	`‰ì
 (
kî
);

103 
	`as£π
 (
ªt
==0);

107 
	`eigs_ª‹dî
 (
n
, 
eigvÆ
, 
eigvec
, 1);

110 * 
e
 = 
	`fvec_√w
 (
n
 * 
k
);

112 
i
 = 0 ; i < 
n
 ; i++) {

113 
j
 = 0 ; j < 
k
 ; j++)

114 
e
[
i
 * 
k
 + 
j
] = 
eigvec
[j * 
n
 + i];

115 
	`fvec_n‹mÆize
 (
e
, 
k
, 2);

118 
	`‰ì
 (
eigvÆ
);

119 
	`‰ì
 (
eigvec
);

121 
îr
 = 
	`kmóns
 (
k
, 
n
, k, 
nôî
, 
e
, 
¡
, 
£ed
, 
ƒedo
,

122 
NULL
, NULL, 
assign
, 
«ssign
);

124 
	`‰ì
 (
e
);

125  
îr
;

126 
	}
}

	@spectral_clustering.h

39 #i‚de‡
SPECTRAL_CLUSTERING_H_INCLUDED


40 
	#SPECTRAL_CLUSTERING_H_INCLUDED


	)

48 
•e˘øl_˛u°îög
 (
d
, 
n
, 
k
, 
sigma
, 
nôî
,

49 c⁄° * 
v
, 
¡
, 
£ed
, 
ƒedo
,

50 * 
assign
, * 
«ssign
);

	@vector.c

39 
	~<°dlib.h
>

40 
	~<°dio.h
>

41 
	~<as£π.h
>

42 
	~<°rög.h
>

43 
	~<m©h.h
>

44 
	~<î∫o.h
>

47 
	~<sys/ty≥s.h
>

48 
	~<sys/°©.h
>

49 
	~<f˙é.h
>

50 
	~<sys/mm™.h
>

51 
	~<uni°d.h
>

54 
	~"ve˘‹.h
"

57 #ifde‡
__löux__


58 
	~<mÆloc.h
>

60 *
	$memÆign
(
size_t
 
ign‹ed
,size_à
nbyãs
) {

61  
	`mÆloc
(
nbyãs
);

62 
	}
}

72 *
	$fvec_√w
 (
n
)

74 *
ªt
 = (*Ë
	`memÆign
 (16,  (*ªtË* 
n
);

75 i‡(!
ªt
) {

76 
	`Ârötf
 (
°dîr
, "fvec_√w %ld : ouào‡mem‹y\n", 
n
);

77 
	`ab‹t
();

79  
ªt
;

80 
	}
}

83 *
	$dvec_√w
 (
n
)

85 *
ªt
 = (*Ë
	`memÆign
 (16,  (*ªtË* 
n
);

86 i‡(!
ªt
) {

87 
	`Ârötf
 (
°dîr
, "dvec_√w %ld : ouào‡mem‹y\n", 
n
);

88 
	`ab‹t
();

90  
ªt
;

91 
	}
}

94 *
	$ivec_√w
 (
n
)

96 *
ªt
 = (*Ë
	`mÆloc
 ( (*ªtË* 
n
);

97 i‡(!
ªt
) {

98 
	`Ârötf
 (
°dîr
, "ivec_√w %ld : ouào‡mem‹y\n", 
n
);

99 
	`ab‹t
();

101  
ªt
;

102 
	}
}

104 * 
	$bvec_√w
 (
n
)

106 *
ªt
 = (*Ë
	`memÆign
 (16,  (*ªtË* 
n
);

107 i‡(!
ªt
) {

108 
	`Ârötf
 (
°dîr
, "bvec_√w %ld : ouào‡mem‹y\n", 
n
);

109 
	`ab‹t
();

111  
ªt
;

112 
	}
}

115 * 
	$lvec_√w
 (
n
)

117 *
ªt
 = (*Ë
	`mÆloc
 ( (*ªtË* 
n
);

118 i‡(!
ªt
) {

119 
	`Ârötf
 (
°dîr
, "ivec_√w %ld : ouào‡mem‹y\n", 
n
);

120 
	`ab‹t
();

122  
ªt
;

123 
	}
}

126 *
	$fvec_√w_0
 (
n
)

128 *
ªt
 = (*Ë
	`ˇŒoc
 ( (*ªt), 
n
);

129 i‡(!
ªt
) {

130 
	`Ârötf
 (
°dîr
, "fvec_√w_0 %ld : ouào‡mem‹y\n", 
n
);

131 
	`ab‹t
();

133  
ªt
;

134 
	}
}

137 * 
	$dvec_√w_0
 (
n
)

139 *
ªt
 = (*Ë
	`ˇŒoc
 ( (*ªt), 
n
);

140 i‡(!
ªt
) {

141 
	`Ârötf
 (
°dîr
, "fvec_√w_0 %ld : ouào‡mem‹y\n", 
n
);

142 
	`ab‹t
();

144  
ªt
;

145 
	}
}

148 *
	$lvec_√w_0
 (
n
)

150 *
ªt
 = (*Ë
	`ˇŒoc
 ( (*ªt), 
n
);

151 i‡(!
ªt
) {

152 
	`Ârötf
 (
°dîr
, "fvec_√w_0 %ld : ouào‡mem‹y\n", 
n
);

153 
	`ab‹t
();

155  
ªt
;

156 
	}
}

159 *
	$fvec_√w_«n
 (
n
)

161 *
ªt
 = 
	`fvec_√w
(
n
);

162 
	`fvec_«n
(
ªt
,
n
);

163  
ªt
;

164 
	}
}

173 
	$dønd_r
(*
£ed
) {

174  
	`ønd_r
(
£ed
)/(()
RAND_MAX
 + 1.0);

175 
	}
}

177 
	#NV_MAGICCONST
 1.71552776992141

	)

179 
	$gaus§™d_r
 (*
£ed
)

181 
z
;

183 
u1
, 
u2
, 
zz
;

184 
u1
 = 
	`dønd_r
 (
£ed
);

185 
u2
 = 
	`dønd_r
 (
£ed
);

186 
z
 = 
NV_MAGICCONST
 * (
u1
 - .5Ë/ 
u2
;

187 
zz
 = 
z
 * z / 4.0;

188 i‡(
zz
 < -
	`log
 (
u2
))

191  
z
;

192 
	}
}

194 
	$gaus§™d
 () {

195 
£ed
=
	`Ã™d48
();

196  
	`gaus§™d_r
(&
£ed
);

197 
	}
}

200 
	$fvec_ønd
 (* 
v
, 
n
)

202 
i
;

203 
i
 = 0 ; i < 
n
 ; i++)

204 
v
[
i
] = 
	`dønd48
();

205 
	}
}

207 
	$fvec_ønd_r
 (* 
v
, 
n
, 
£ed
)

209 
i
;

210 
i
 = 0 ; i < 
n
 ; i++)

211 
v
[
i
] = 
	`dønd_r
(&
£ed
);

212 
	}
}

215 
	$fvec_øndn
 (* 
v
, 
n
)

217 
i
;

218 
i
 = 0 ; i < 
n
 ; i++)

219 
v
[
i
] = 
	`gaus§™d
();

220 
	}
}

222 
	$fvec_øndn_r
 (* 
v
, 
n
, 
£ed
)

224 
i
;

225 
i
 = 0 ; i < 
n
 ; i++)

226 
v
[
i
] = 
	`gaus§™d_r
(&
£ed
);

227 
	}
}

230 *
	$fvec_√w_ønd
 (
n
)

232 * 
f
 = 
	`fvec_√w
 (
n
);

233 
	`fvec_ønd
 (
f
, 
n
);

234  
f
;

235 
	}
}

237 * 
	$fvec_√w_øndn
 (
n
)

239 * 
f
 = 
	`fvec_√w
 (
n
);

240 
	`fvec_øndn
(
f
,
n
);

241  
f
;

242 
	}
}

244 * 
	$fvec_√w_ønd_r
 (
n
, 
£ed
)

246 * 
f
 = 
	`fvec_√w
 (
n
);

247 
	`fvec_ønd_r
(
f
,
n
,
£ed
);

248  
f
;

249 
	}
}

251 * 
	$fvec_√w_øndn_r
 (
n
, 
£ed
)

253 * 
f
 = 
	`fvec_√w
 (
n
);

254 
	`fvec_øndn_r
(
f
,
n
,
£ed
);

255  
f
;

256 
	}
}

259 * 
	$ivec_√w_øndom_idx
 (
n
, 
k
)

261  
	`ivec_√w_øndom_idx_r
 (
n
, 
k
, 
	`Ã™d48
());

262 
	}
}

264 * 
	$ivec_√w_øndom_idx_r
 (
n
, 
k
, 
£ed
)

266 *
idx
 = 
	`ivec_√w
 (
n
);

267 
i
;

269 
i
 = 0; i < 
n
; i++)

270 
idx
[
i
] = i;

272 
i
 = 0; i < 
k
 ; i++) {

273 
j
 = 
i
 + 
	`ønd_r
(&
£ed
Ë% (
n
 - i);

275 
p
 = 
idx
[
i
];

276 
idx
[
i
] = idx[
j
];

277 
idx
[
j
] = 
p
;

280  
idx
;

281 
	}
}

283 *
	$ivec_√w_øndom_≥rm
 (
n
)

285  
	`ivec_√w_øndom_idx
 (
n
,Ç - 1);

286 
	}
}

288 *
	$ivec_√w_øndom_≥rm_r
 (
n
, 
£ed
)

290  
	`ivec_√w_øndom_idx_r
 (
n
,Ç - 1, 
£ed
);

291 
	}
}

294 
	$ivec_shufÊe
 (* 
v
, 
n
)

296 
i
;

298 
i
 = 0; i < 
n
 - 1; i++) {

299 
j
 = 
i
 + 
	`øndom
 (Ë% (
n
 - i);

301 
p
 = 
v
[
i
];

302 
v
[
i
] = v[
j
];

303 
v
[
j
] = 
p
;

305 
	}
}

312 *
	$ivec_√w_0
 (
n
)

314 *
ªt
 = (*Ë
	`ˇŒoc
 ( (*ªt), 
n
);

315 i‡(!
ªt
) {

316 
	`Ârötf
 (
°dîr
, "ivec_√w_0 %ld : ouào‡mem‹y\n", 
n
);

317 
	`ab‹t
();

319  
ªt
;

320 
	}
}

322 *
	$bvec_√w_0
 (
n
)

324 *
ªt
 = 
	`bvec_√w
 (
n
);

325 i‡(!
ªt
) {

326 
	`Ârötf
 (
°dîr
, "ivec_√w_0 %ld : ouào‡mem‹y\n", 
n
);

327 
	`ab‹t
();

329 
	`mem£t
 (
ªt
, 0, 
n
);

330  
ªt
;

331 
	}
}

335 *
	$fvec_√w_£t
 (
n
, 
vÆ
)

337 
i
;

338 *
ªt
 = (*Ë
	`ˇŒoc
 ( (*ªt), 
n
);

339 i‡(!
ªt
) {

340 
	`Ârötf
 (
°dîr
, "fvec_√w_£à%ld : ouào‡mem‹y\n", 
n
);

341 
	`ab‹t
();

344 
i
 = 0 ; i < 
n
 ; i++)

345 
ªt
[
i
] = 
vÆ
;

347  
ªt
;

348 
	}
}

351 *
	$ivec_√w_£t
 (
n
, 
vÆ
)

353 
i
;

354 *
ªt
 = 
	`ivec_√w
(
n
);

356 
i
 = 0 ; i < 
n
 ; i++)

357 
ªt
[
i
] = 
vÆ
;

359  
ªt
;

360 
	}
}

363 * 
	$ivec_√w_ønge
 (
a
, 
b
)

365 
i
;

366 *
ªt
 = 
	`ivec_√w
(
b
 - 
a
);

368 
i
 = 
a
 ; i < 
b
 ; i++)

369 
ªt
[
i
 - 
a
] = i;

371  
ªt
;

372 
	}
}

375 * 
	$ivec_√w_˝y
 (c⁄° * 
v
, 
n
)

377 *
ªt
 = 
	`ivec_√w
(
n
);

378 
	`mem˝y
 (
ªt
, 
v
, 
n
 *  (*ret));

379  
ªt
;

380 
	}
}

383 * 
	$fvec_√w_˝y
 (c⁄° * 
v
, 
n
) {

384 *
ªt
 = 
	`fvec_√w
(
n
);

385 
	`mem˝y
 (
ªt
, 
v
, 
n
 *  (*ret));

386  
ªt
;

387 
	}
}

395 * 
	$fvec_ªsize
 (* 
v
, 
n
)

397 * 
v2
 = 
	`ªÆloc
 (
v
, 
n
 *  (*v));

398  
v2
;

399 
	}
}

402 * 
	$ivec_ªsize
 (* 
v
, 
n
)

404 * 
v2
 = 
	`ªÆloc
 (
v
, 
n
 *  (*v));

405  
v2
;

406 
	}
}

415 *
	$ivec_√w_hi°ogøm
 (
k
, c⁄° *
v
, 
n
)

417 
i
;

418 *
h
 = 
	`ivec_√w_0
 (
k
);

420 
i
 = 0; i < 
n
; i++) {

421 
	`as£π
 (
v
[
i
] >0 && v[i] < 
k
);

422 
h
[
v
[
i
]]++;

425  
h
;

426 
	}
}

429 * 
	$ivec_√w_hi°ogøm_˛ù
 (
k
, * 
v
, 
n
) {

430 
i
;

431 *
h
 = 
	`ivec_√w_0
 (
k
);

433 
i
 = 0; i < 
n
; i++) {

434 
vÆ
=
v
[
i
];

435 if(
vÆ
>=
k
) val=k-1;

436 if(
vÆ
<0) val=0;

437 
h
[
vÆ
]++;

440  
h
;

441 
	}
}

443 * 
	$fvec_√w_hi°ogøm_˛ù
 (
vmö
,
vmax
, 
k
, *
v
, 
n
) {

444 
i
;

445 *
h
 = 
	`ivec_√w_0
 (
k
);

446 
i°ï
=
k
/(
vmax
-
vmö
);

448 
i
 = 0; i < 
n
; i++) {

449 
vf
=(
v
[
i
]-
vmö
)*
i°ï
;

450 if(
vf
>=
k
Ë
h
[k-1]++;

451 if(
vf
<0Ë
h
[0]++;

452 if(!
	`i¢™
(
vf
)Ë
h
[()(
	`Êo‹
(vf))]++;

455  
h
;

456 
	}
}

458 
	$ivec_cou¡_occuºí˚s
(c⁄° * 
v
, 
n
, 
vÆ
) {

459 
cou¡
=0;

460 
n
--Ëif(
v
[n]==
vÆ
Ë
cou¡
++;

461  
cou¡
;

462 
	}
}

464 
	$fvec_cou¡_occuºí˚s
(c⁄° * 
v
, 
n
, 
vÆ
) {

465 
cou¡
=0;

466 
n
--Ëif(
v
[n]==
vÆ
Ë
cou¡
++;

467  
cou¡
;

468 
	}
}

471 
	$fvec_cou¡_…
(c⁄° * 
v
, 
n
, 
vÆ
) {

472 
cou¡
=0;

473 
n
--Ëif(
v
[n]<
vÆ
Ë
cou¡
++;

474  
cou¡
;

475 
	}
}

477 
	$ivec_cou¡_…
(c⁄° * 
v
, 
n
, 
vÆ
) {

478 
cou¡
=0;

479 
n
--Ëif(
v
[n]<
vÆ
Ë
cou¡
++;

480  
cou¡
;

481 
	}
}

483 
	$fvec_cou¡_gt
(c⁄° * 
v
, 
n
, 
vÆ
) {

484 
cou¡
=0;

485 
n
--Ëif(
v
[n]>
vÆ
Ë
cou¡
++;

486  
cou¡
;

487 
	}
}

489 
	$ivec_cou¡_gt
(c⁄° * 
v
, 
n
, 
vÆ
) {

490 
cou¡
=0;

491 
n
--Ëif(
v
[n]>
vÆ
Ë
cou¡
++;

492  
cou¡
;

493 
	}
}

495 
	$fvec_cou¡_öønge
(c⁄° * 
v
, 
n
, 
vmö
, 
vmax
) {

496 
cou¡
=0;

497 
n
--Ëif(
v
[n]>=
vmö
 && v[n]<
vmax
Ë
cou¡
++;

498  
cou¡
;

499 
	}
}

501 
	$ivec_cou¡_öønge
(c⁄° * 
v
, 
n
, 
vmö
, 
vmax
) {

502 
cou¡
=0;

503 
n
--Ëif(
v
[n]>=
vmö
 && v[n]<
vmax
Ë
cou¡
++;

504  
cou¡
;

505 
	}
}

507 
	$fvec_cou¡_«n
 (c⁄° * 
v
, 
n
)

509 
i
, 
¬™
 = 0;

510 
i
 = 0 ; i < 
n
 ; i++)

511 i‡(
	`i¢™
(
v
[
i
]))

512 
¬™
++;

514  
¬™
;

515 
	}
}

517 
	$fvec_cou¡_n⁄föôe
 (c⁄° * 
v
, 
n
)

519 
i
, 
¬f
 = 0;

520 
i
 = 0 ; i < 
n
 ; i++)

521 i‡(!
	`föôe
(
v
[
i
]))

522 
¬f
++;

524  
¬f
;

525 
	}
}

527 
	$fvec_cou¡_0
 (c⁄° *
vÆ
, 
n
)

529 
n0
 = 0;

530 
n
--)

531 i‡(
vÆ
[
n
] == 0)

532 
n0
++;

533  
n0
;

534 
	}
}

541 *
	$ivec_ª≥©_wôh_öc
(c⁄° *
a
,
n
,

542 
ƒïót
, 
öc
) {

543 *
ªt
=
	`ivec_√w
(
ƒïót
*
n
);

544 
i
;

545 
i
=0;i<
ƒïót
;i++) {

546 
	`ivec_˝y
(
ªt
+
i
*
n
, 
a
,Ç);

547 
	`ivec_add_sˇœr
(
ªt
+
i
*
n
,Ç, i*
öc
);

549  
ªt
;

550 
	}
}

553 
	$fvec_•œt_add
(c⁄° *
a
,
n
,

554 c⁄° *
assign
,*
accu
) {

555 
i
;

556 
i
=0;i<
n
;i++)

557 
accu
[
assign
[
i
]] +
a
[i];

558 
	}
}

561 
	$fvec_i•œt_add
(c⁄° *
a
,
n
,

562 c⁄° *
assign
,*
accu
) {

563 
i
;

564 
i
=0;i<
n
;i++)

565 
accu
[
i
] +
a
[
assign
[i]];

567 
	}
}

569 
	$fvec_m≠
(c⁄° *
§c
,c⁄° *
m≠
,
n
,*
de°
) {

570 
i
;

571 
i
=0;i<
n
;i++)

572 
de°
[
i
]=
§c
[
m≠
[i]];

573 
	}
}

575 
	$ivec_m≠
 (c⁄° *
§c
,c⁄° *
m≠
,
n
,*
de°
) {

576 
i
;

577 
i
=0;i<
n
;i++)

578 
de°
[
i
]=
§c
[
m≠
[i]];

579 
	}
}

581 
	$fvec_im≠
(c⁄° *
§c
,c⁄° *
im≠
,
n
,*
de°
) {

582 
i
;

583 
i
=0;i<
n
;i++)

584 
de°
[
im≠
[
i
]]=
§c
[i];

585 
	}
}

588 
	$ivec_hash
(c⁄° * 
v
, 
n
) {

589 *
k
=(*)
v
;

590 
b
 = 378551;

591 
a
 = 63689;

592 
hash
 = 0;

593 
i
;

594 
i
 = 0; i < 
n
; i++) {

595 
hash
 = hash * 
a
 + 
k
[
i
];

596 
a
 =á * 
b
;

598  
hash
;

599 
	}
}

601 
	$ivec_ª∂a˚
(* 
v
, 
n
,
vÆ
,
ª∂a˚_vÆ
) {

602 
n
--Ëif(
v
[n]==
vÆ
Ëv[n]=
ª∂a˚_vÆ
;

603 
	}
}

606 
	$ivec_accumuœã_¶i˚s
(c⁄° *
v
,*
¶
,
n
) {

607 
i
;

608 
accu
=0,
j
=0;

609 
i
=0;i<
n
;i++) {

610 
j
<
¶
[
i
])

611 
accu
+=
v
[
j
++];

612 
¶
[
i
]=
accu
;

614 
	}
}

631 
	$xvecs_fsize
(
unôsize
, c⁄° * 
‚ame
, *
d_out
, *
n_out
)

633 
d
, 
ªt
;

634 
nbyãs
;

636 *
d_out
 = -1;

637 *
n_out
 = -1;

639 
FILE
 * 
f
 = 
	`f›í
 (
‚ame
, "r");

641 if(!
f
) {

642 
	`Ârötf
(
°dîr
, "xvecs_fsizê%s: %s\n", 
‚ame
, 
	`°ªº‹
(
î∫o
));

646 
ªt
 = 
	`‰ód
 (&
d
,  (d), 1, 
f
);

647 i‡(
ªt
 == 0) {

648 *
n_out
 = 0;

649  
ªt
;

652 
	`f£ek
 (
f
, 0, 
SEEK_END
);

653 
nbyãs
 = 
	`·ñl
 (
f
);

654 
	`f˛o£
 (
f
);

656 if(
nbyãs
 % (
unôsize
 * 
d
 + 4) != 0) {

657 
	`Ârötf
(
°dîr
, "xvecs_sizê%s: weúd fûêsizê%ld f‹ ve˘‹†o‡dimísi⁄ %d\n", 
‚ame
, 
nbyãs
, 
d
);

661 *
d_out
 = 
d
;

662 *
n_out
 = 
nbyãs
 / (
unôsize
 * 
d
 + 4);

663  
nbyãs
;

664 
	}
}

667 
	$fvecs_fsize
 (c⁄° * 
‚ame
, *
d_out
, *
n_out
) {

668  
	`xvecs_fsize
((), 
‚ame
, 
d_out
, 
n_out
);

669 
	}
}

671 
	$ivecs_fsize
 (c⁄° * 
‚ame
, *
d_out
, *
n_out
)

673  
	`xvecs_fsize
 ((), 
‚ame
, 
d_out
, 
n_out
);

674 
	}
}

676 
	$bvecs_fsize
 (c⁄° * 
‚ame
, *
d_out
, *
n_out
)

678  
	`xvecs_fsize
 ((), 
‚ame
, 
d_out
, 
n_out
);

679 
	}
}

681 
	$lvecs_fsize
 (c⁄° * 
‚ame
, *
d_out
, *
n_out
)

683  
	`xvecs_fsize
 ((), 
‚ame
, 
d_out
, 
n_out
);

684 
	}
}

689 
	$fvecs_√w_ªad
 (c⁄° *
‚ame
, *
d_out
, **
vf_out
)

692 
FILE
 *
f
 = 
	`f›í
 (
‚ame
, "r");

693 i‡(!
f
) {

694 
	`Ârötf
 (
°dîr
, "fvecs_√w_ªad: couldÇŸ o≥¿%s\n", 
‚ame
);

695 
	`≥º‹
 ("");

696 *
d_out
=-1;

697 
vf_out
=
NULL
;

701 
n
=
	`fvecs_√w_‰ód_max
(
f
,
d_out
,
vf_out
,-1);

703 
	`f˛o£
 (
f
);

705  
n
;

706 
	}
}

709 
	$fvecs_√w_‰ód_max
 (
FILE
 *
f
, *
d_out
, **
vf_out
, 
nmax
)

711 
n
;

712 
d
 = -1;

714 *
vf
=
NULL
;

715 
«Œoc
=0;

717 
n
=0; 
nmax
<0 ||Ç<nmax ;Ç++) {

718 
√w_d
;

720 i‡(
	`‰ód
 (&
√w_d
,  (), 1, 
f
) != 1) {

721 i‡(
	`„of
 (
f
))

724 
	`≥º‹
 ("fvecs_new_readÉrror 1");

725 
îr‹
;

729 i‡(
n
 == 0)

730 
d
 = 
√w_d
;

731 i‡(
√w_d
 !
d
) {

732 
	`Ârötf
 (
°dîr
, "fvecs_√w_ªad:Ç⁄-unif‹m ve˘‹†sizes:Çew_d=%d d=%d\n",
√w_d
,
d
);

733 
îr‹
;

736 if((
n
+1)*
d
>
«Œoc
) {

738 
«Œoc
=nalloc==0 ? 1024 :Çalloc*2;

739 } (
n
+1)*
d
>
«Œoc
);

740 
vf
=
	`ªÆloc
(vf,
«Œoc
*());

741 
	`as£π
(
vf
 || !"out of memory!");

744 i‡(
	`‰ód
 (
vf
+
n
*
d
,  (), d, 
f
) != d) {

745 
	`Ârötf
 (
°dîr
, "fvecs_new_readÉrror 3");

746 
îr‹
;

750 
vf
=
	`ªÆloc
(vf,
n
*
d
*());

752 *
vf_out
 = 
vf
;

753 *
d_out
 = 
d
;

754  
n
;

755 
îr‹
:

756 
	`‰ì
(
vf
);

757 *
vf_out
 = 
NULL
;

758 *
d_out
 = -1;

760 
	}
}

762 
	$bvecs_√w_‰om_si·geo
(c⁄° *
‚ame
,

763 *
d_out
, **
v_out
,

764 *
d_mëa_out
, **
mëa_out
) {

766 
FILE
 * 
f
 = 
	`f›í
(
‚ame
, "r");

767 if(!
f
) {

768 
	`Ârötf
(
°dîr
, "couldÇŸ o≥¿%s: %s\n", 
‚ame
, 
	`°ªº‹
(
î∫o
));

772 
	#READANDCHECK
(
a
,
n
Ëif(
	`‰ód
◊, (*◊)),Ç, 
f
Ë!nË{
	`Ârötf
(
°dîr
, "weúd f‹m© i¿%s\n", 
‚ame
); 
îr
; }

	)

774 
n
 = 0, 
«
 = 0;

775 
d
 = -1;

776 * 
v
 = 
NULL
;

777 * 
mëa
 = 
NULL
;

780 
buf
[9];

781 
hódî_ªad
 = 
	`‰ód
(
buf
, 1, (buf), 
f
);

783 if(
hódî_ªad
 =0 && 
	`„of
(
f
)) ;

784 if(
hódî_ªad
 !(
buf
)) {

785 
	`Ârötf
(
°dîr
, "bvecs_√w_‰om_si·geo:Éº‹ i¿poöàhódî i¿%s\n", 
‚ame
);

786 
îr
;

789 
d2
;

790 
	`READANDCHECK
(&
d2
, 1)

791 if(
n
 == 0) {

792 if(!(
d2
 >= 0 && d2 < 100000)) {

793 
	`Ârötf
(
°dîr
, "bvecs_√w_‰om_si·geo: weúd des¸ùt‹ dim %d i¿%s\n", 
d2
, 
‚ame
);

794 
îr
;

796 
d
 = 
d2
;

798 if(
d2
 !
d
) {

799 
	`Ârötf
(
°dîr
, "bvecs_√w_‰om_si·geo: weúd dim i¿%†”x≥˘ %d found %d)\n", 
‚ame
, 
d
, 
d2
);

800 
îr
;

803 if(
n
 >
«
) {

804 
«
 =Ça == 0 ? 512 :Ça*3/2;

805 if(
mëa_out
Ë
mëa
 = 
	`ªÆloc
(mëa, (Ë* 9 * 
«
);

806 
v
 = 
	`ªÆloc
(v, 
d
 * (Ë* 
«
);

809 if(
mëa_out
Ë
	`mem˝y
(
mëa
 + 9 * 
n
, 
buf
, (buf));

811 
	`READANDCHECK
(
v
 + 
d
 * 
n
, d);

813 
n
++;

815 #unde‡
READANDCHECK


817 
	`f˛o£
(
f
);

819 *
d_out
 = 
d
;

820 *
v_out
 = 
v
;

821 if(
mëa_out
Ë*mëa_ouà
mëa
;

822 if(
d_mëa_out
) *d_meta_out = 9;

823  
n
;

825 
îr
:

826 
	`f˛o£
(
f
);

827 
	`‰ì
(
v
);

828 
	`‰ì
(
mëa
);

829 *
d_out
 = -1;

830 *
v_out
 = 
NULL
;

831 if(
mëa_out
Ë*mëa_ouà
NULL
;

832 if(
d_mëa_out
) *d_meta_out = -1;

834 
	}
}

839 
	$fvecs_√w_ªad_•¨£
 (c⁄° *
‚ame
, 
d
, **
vf_out
) {

840 *
vf
=
NULL
;

841 
n
=0,
«
=0;

842 *
vÆs
=
	`fvec_√w
(
d
);

843 *
idx
=
	`ivec_√w
(
d
);

845 
FILE
 *
f
 = 
	`f›í
 (
‚ame
, "r");

846 
	#E
(
msg
) { \

847 
	`Ârötf
 (
°dîr
, "fvecs_√w_ªad_•¨£ %s: " 
msg
 , 
‚ame
); \

848 
	`≥º‹
 (""); \

849 
	`‰ì
(
vf
); fªe(
vÆs
); fªe(
idx
); \

851 }

	)

852 i‡(!
f
Ë
	`E
("");

854 !
	`„of
(
f
)) {

855 
nz
,
ªt
,
nz2
;

856 
ªt
=
	`‰ód
(&
nz
,(),1,
f
);

857 if(
ªt
!=1) {

858 if(
	`„of
(
f
)) ;

859 
	`E
("err 1");

861 if(
	`‰ód
(
idx
,(),
nz
,
f
)!ÚzË
	`E
("err 2");

862 if(
	`‰ód
(&
nz2
,(),1,
f
)!=1Ë
	`E
("err 3");

863 if(
nz
!=
nz2
Ë
	`E
("err 4");

864 if(
	`‰ód
(
vÆs
,(),
nz
,
f
)!ÚzË
	`E
("err 5");

866 if(
n
>=
«
) {

867 
«
=(na+1)*3/2;

868 
vf
=
	`ªÆloc
(vf,
«
*()*
d
);

871 *
dí£
=
	`•fvec_to_fvec
 (
idx
,
vÆs
,
nz
,
d
);

872 
	`mem˝y
(
vf
+
n
*
d
,
dí£
,()*d);

873 
	`‰ì
(
dí£
);

875 
n
++;

877 #unde‡
E


878 
	`‰ì
(
vÆs
);

879 
	`‰ì
(
idx
);

880 
	`f˛o£
(
f
);

881 *
vf_out
=
vf
;

882  
n
;

883 
	}
}

886 
	$fvecs_√w_mm≠
 (c⁄° *
‚ame
, *
d_out
, **
vf
) {

887 
fd
 = 
	`›í
 (
‚ame
, 
O_RDONLY
);

888 i‡(
fd
 < 0) {

889 
	`Ârötf
(
°dîr
,"[fi]vecs_√w_mm≠: couldÇŸ o≥¿%s",
‚ame
);

890 
	`≥º‹
 ("");

891 *
d_out
=-1; *
vf
=
NULL
;

895 
°©
 
sb
;

896 
	`f°©
 (
fd
, &
sb
);

897 *
mm
 = 
	`mm≠
 (
NULL
, 
sb
.
°_size
, 
PROT_READ
, 
MAP_SHARED
, 
fd
, 0);

898 i‡(
mm
 =
MAP_FAILED
) {

899 
	`Ârötf
(
°dîr
,"[fi]vecs_√w_mm≠: couldÇŸ mm≠ %s",
‚ame
);

900 
	`≥º‹
 ("");

901 
	`˛o£
(
fd
);

902 *
d_out
=-1; *
vf
=
NULL
;

905 
d
=(*(*)
mm
);

906 *
d_out
=
d
;

907 *
vf
=(*)(((*)
mm
));

908 
unôsz
=()+()*
d
;

909 
	`as£π
(
sb
.
°_size
 % 
unôsz
 == 0);

910  
sb
.
°_size
 / 
unôsz
;

911 
	}
}

913 
	$ivecs_√w_mm≠
 (c⁄° *
‚ame
, *
d_out
, **
vf
) {

914  
	`fvecs_√w_mm≠
(
‚ame
,
d_out
,(**)
vf
);

915 
	}
}

920 
	$fvecs_ªad
 (c⁄° *
‚ame
, 
d
, 
n
, *
a
)

922 
FILE
 *
f
 = 
	`f›í
 (
‚ame
, "r");

923 i‡(!
f
) {

924 
	`Ârötf
 (
°dîr
, "fvecs_ªad: couldÇŸ o≥¿%s\n", 
‚ame
);

925 
	`≥º‹
 ("");

929 
i
;

930 
i
 = 0; i < 
n
; i++) {

931 
√w_d
;

933 i‡(
	`‰ód
 (&
√w_d
,  (), 1, 
f
) != 1) {

934 i‡(
	`„of
 (
f
))

937 
	`≥º‹
 ("fvecs_readÉrror 1");

943 i‡(
√w_d
 !
d
) {

944 
	`Ârötf
 (
°dîr
, "fvecs_readÉrror 2: unexpected vector dimension\n");

948 i‡(
	`‰ód
 (
a
 + 
d
 * (Ë
i
,  (), d, 
f
) != d) {

949 
	`Ârötf
 (
°dîr
, "fvecs_readÉrror 3\n");

952 
n
++;

954 
	`f˛o£
 (
f
);

956  
i
;

957 
	}
}

960 
	$b2fvecs_ªad
 (c⁄° *
‚ame
, 
d
, 
n
, *
v
)

962 
n_√w
;

963 
d_√w
;

964 
	`bvecs_fsize
 (
‚ame
, &
d_√w
, &
n_√w
);

965 
	`as£π
 (
d_√w
 =
d
);

966 
	`as£π
 (
n
 <
n_√w
);

968 
FILE
 * 
f
 = 
	`f›í
 (
‚ame
, "r");

969 
	`as£π
 (
f
 || "b2fvecs_read: UnableÅo openÅhe file");

970 
	`b2fvecs_‰ód
 (
f
, 
v
, 
n
);

971 
	`f˛o£
 (
f
);

972  
n
;

973 
	}
}

976 
	$fvecs_ªad_txt
 (c⁄° *
‚ame
, 
d
, 
n
, *
v
)

978 
i
, 
ªt
;

979 
FILE
 * 
f
 = 
	`f›í
 (
‚ame
, "r");

980 i‡(!
f
) {

981 
	`Ârötf
 (
°dîr
, "fvecs_ªad_txt: couldÇŸ o≥¿%s\n", 
‚ame
);

982 
	`≥º‹
 ("");

986 
i
 = 0; i < 
n
 * 
d
 ; i++) {

987 
ªt
 = 
	`fsˇnf
 (
f
, "%f", 
v
 + 
i
);

988 i‡(
ªt
 != 1) {

989 i‡(
	`„of
 (
f
))

992 
	`≥º‹
 ("fvecs_read_txtÉrror 1");

998 
	`f˛o£
 (
f
);

1000  
i
 / 
d
;

1001 
	}
}

1006 
	$xvec_‰ód
 (
unô_size
, 
FILE
 * 
f
, * 
v
, 
d_Æloc
)

1008 
d
;

1009 
ªt
 = 
	`‰ód
 (&
d
,  (), 1, 
f
);

1011 i‡(
	`„of
 (
f
))

1014 i‡(
ªt
 != 1) {

1015 
	`≥º‹
 ("# xvec_freadÉrror 1");

1019 i‡(
d
 < 0 || d > 
d_Æloc
) {

1020 
	`Ârötf
(
°dîr
, "xvec_‰ód: weúd ve˘‹ sizê”x≥˘ %d found %d)\n", 
d_Æloc
, 
d
);

1024 
ªt
 = 
	`‰ód
 (
v
, 
unô_size
, 
d
, 
f
);

1025 i‡(
ªt
 !
d
) {

1026 
	`≥º‹
 ("# xvec_freadÉrror 2");

1030  
d
;

1031 
	}
}

1034 
	$fvec_‰ód
 (
FILE
 * 
f
, * 
v
, 
d_Æloc
)

1036  
	`xvec_‰ód
((), 
f
, 
v
, 
d_Æloc
);

1037 
	}
}

1039 
	$ivec_‰ód
 (
FILE
 * 
f
, * 
v
, 
d_Æloc
)

1041  
	`xvec_‰ód
((), 
f
, 
v
, 
d_Æloc
);

1042 
	}
}

1044 
	$bvec_‰ód
 (
FILE
 * 
f
, * 
v
, 
d_Æloc
)

1046  
	`xvec_‰ód
((), 
f
, 
v
, 
d_Æloc
);

1047 
	}
}

1049 
	$lvec_‰ód
 (
FILE
 * 
f
, * 
v
, 
d_Æloc
)

1051  
	`xvec_‰ód
((), 
f
, 
v
, 
d_Æloc
);

1052 
	}
}

1054 
	$fvec_ªad
 (c⁄° *
‚ame
, 
d
, *
a
, 
o_f
) {

1055 
FILE
 * 
f
 = 
	`f›í
(
‚ame
, "r");

1057 if(!
f
) {

1058 
	`Ârötf
(
°dîr
, "ˇ¬Ÿ o≥¿%s: %s\n", 
‚ame
, 
	`°ªº‹
(
î∫o
));

1062 
ªt
 = 
	`f£ek
(
f
, (4 * 
d
 + 4Ë* 
o_f
, 
SEEK_SET
);

1063 if(
ªt
 < 0) {

1064 
	`Ârötf
(
°dîr
, "£ekÉº‹ i¿%s: %s\n", 
‚ame
, 
	`°ªº‹
(
î∫o
));

1065 
	`f˛o£
(
f
);

1069 
ªt
 = 
	`fvec_‰ód
(
f
, 
a
, 
d
);

1071 
	`f˛o£
(
f
);

1073  
ªt
;

1074 
	}
}

1080 
	$xvecs_‰ód
 (
unô_size
, 
FILE
 * 
f
, * 
v
, 
n
, 
d_Æloc
)

1082 
i
 = 0, 
d
 = -1, 
ªt
;

1083 
i
 = 0 ; i < 
n
 ; i++) {

1084 i‡(
	`„of
 (
f
))

1087 
ªt
 = 
	`xvec_‰ód
 (
unô_size
, 
f
, (*Ë
v
 + unô_sizê* 
i
 * 
d
, 
d_Æloc
);

1089 i‡(
ªt
 == 0)

1092 i‡(
ªt
 == -1)

1095 i‡(
i
 == 0) {

1096 
d
 = 
ªt
;

1097 if(
d
 !
d_Æloc
)

1098 
	`Ârötf
(
°dîr
, "xvecs_fread: warnállocated d = %d, found d = %ld\n",

1099 
d_Æloc
, 
d
);

1103 i‡(
d
 !
ªt
) {

1104 
	`≥º‹
 ("# xvecs_fread: dimension ofÅhe vectors isÇot consistent\n");

1108  
i
;

1109 
	}
}

1112 
	$fvecs_‰ód
 (
FILE
 * 
f
, * 
v
, 
n
, 
d_Æloc
)

1114  
	`xvecs_‰ód
((), 
f
, 
v
, 
n
, 
d_Æloc
);

1115 
	}
}

1117 
	$ivecs_‰ód
 (
FILE
 * 
f
, * 
v
, 
n
, 
d_Æloc
)

1119  
	`xvecs_‰ód
((), 
f
, 
v
, 
n
, 
d_Æloc
);

1120 
	}
}

1122 
	$bvecs_‰ód
 (
FILE
 * 
f
, * 
v
, 
n
, 
d_Æloc
)

1124  
	`xvecs_‰ód
((), 
f
, 
v
, 
n
, 
d_Æloc
);

1125 
	}
}

1127 
	$lvecs_‰ód
 (
FILE
 * 
f
, * 
v
, 
n
, 
d_Æloc
)

1129  
	`xvecs_‰ód
((), 
f
, 
v
, 
n
, 
d_Æloc
);

1130 
	}
}

1137 
	$xvecs_√w_ªad
 (
unôsize
, c⁄° *
‚ame
, *
d_out
, **
v_out
)

1139 
n
;

1140 
d
;

1141 
	`xvecs_fsize
 (
unôsize
, 
‚ame
, &
d
, &
n
);

1142 * 
v
 = 
	`mÆloc
(
unôsize
 * 
n
 * 
d
);

1143 
FILE
 * 
f
 = 
	`f›í
 (
‚ame
, "r");

1144 if(!
f
) {

1145 
	`Ârötf
(
°dîr
, "xvecs_new_fread: cannot open %s: %s\n",

1146 
‚ame
, 
	`°ªº‹
(
î∫o
));

1147 *
d_out
 = -1;

1148 *
v_out
 = 
NULL
;

1151 
	`xvecs_‰ód
 (
unôsize
, 
f
, 
v
, 
n
, 
d
);

1152 
	`f˛o£
 (
f
);

1153 *
d_out
 = 
d
;

1154 *
v_out
 = 
v
;

1155  
n
;

1156 
	}
}

1158 
	$bvecs_√w_ªad
 (c⁄° *
‚ame
, *
d_out
, **
v_out
) {

1159  
	`xvecs_√w_ªad
((), 
‚ame
, 
d_out
, (**)
v_out
);

1160 
	}
}

1163 
	$lvecs_√w_ªad
 (c⁄° *
‚ame
, *
d_out
, **
v_out
) {

1164  
	`xvecs_√w_ªad
((), 
‚ame
, 
d_out
, (**)
v_out
);

1165 
	}
}

1168 
	$b2fvecs_√w_ªad
 (c⁄° *
‚ame
, *
d_out
, **
v_out
)

1170 
n
;

1171 
d
;

1172 
	`bvecs_fsize
 (
‚ame
, &
d
, &
n
);

1173 * 
v
 = 
	`fvec_√w
 ((Ë
n
 * (Ë
d
);

1174 
FILE
 * 
f
 = 
	`f›í
 (
‚ame
, "r");

1175 
	`as£π
 (
f
 || "bvecs_new_read: UnableÅo openÅhe file");

1176 
	`b2fvecs_‰ód
 (
f
, 
v
, 
n
);

1177 
	`f˛o£
 (
f
);

1179 
v_out
 = &
v
;

1180  
n
;

1181 
	}
}

1185 
	$fvec_‰ód_øw
 (
FILE
 *
f
, * 
v
, 
n
)

1187 
ªt
 = 
	`‰ód
 (
v
,  (*v), 
n
, 
f
);

1188 i‡(
ªt
 !
n
) {

1189 
	`‰ì
(
v
);

1190 
	`≥º‹
 ("# fvec_fread_rawÉrror");

1193  
n
;

1194 
	}
}

1197 
	$ivec_‰ód_øw
 (
FILE
 *
f
, * 
v
, 
n
)

1199 
ªt
 = 
	`‰ód
 (
v
,  (*v), 
n
, 
f
);

1200 i‡(
ªt
 !
n
) {

1201 
	`‰ì
(
v
);

1202 
	`≥º‹
 ("# ivec_fread_rawÉrror");

1205  
n
;

1206 
	}
}

1209 
	$bvec_‰ód_øw
 (
FILE
 *
f
, * 
v
, 
n
)

1211 
ªt
 = 
	`‰ód
 (
v
,  (*v), 
n
, 
f
);

1212 i‡(
ªt
 !
n
) {

1213 
	`‰ì
(
v
);

1214 
	`≥º‹
 ("# bvec_freadÉrror");

1217  
n
;

1218 
	}
}

1221 * 
	$fvec_√w_‰ód_øw
(
FILE
 * 
f
, 
d
)

1223 *
v
 = 
	`fvec_√w
(
d
);

1225 
ªt
 = 
	`‰ód
 (
v
,  (*v), 
d
, 
f
);

1226 i‡(
ªt
 !
d
) {

1227 
	`‰ì
(
v
);

1228 
	`≥º‹
 ("# fvec_freadÉrror 2");

1229  
NULL
;

1231  
v
;

1232 
	}
}

1235 * 
	$ivec_√w_‰ód_øw
(
FILE
 * 
f
, 
d
)

1237 * 
v
 = 
	`ivec_√w
(
d
);

1239 
ªt
 = 
	`‰ód
 (
v
,  (*v), 
d
, 
f
);

1240 i‡(
ªt
 !
d
) {

1241 
	`‰ì
(
v
);

1242 
	`≥º‹
 ("# fvec_freadÉrror 2");

1243  
NULL
;

1245  
v
;

1246 
	}
}

1248 *
	$bvec_√w_‰ód_øw
(
FILE
 * 
f
, 
d
)

1250 *
v
 = 
	`bvec_√w
(
d
);

1252 
ªt
 = 
	`‰ód
 (
v
,  (*v), 
d
, 
f
);

1253 i‡(
ªt
 !
d
) {

1254 
	`‰ì
(
v
);

1255 
	`≥º‹
 ("# fvec_freadÉrror 2");

1256  
NULL
;

1258  
v
;

1259 
	}
}

1262 * 
	$fvec_√w_ªad_øw
(c⁄° * 
‚ame
, 
d
)

1264 
FILE
 * 
f
 = 
	`f›í
 (
‚ame
, "r");

1265 * 
v
 = 
	`fvec_√w_‰ód_øw
 (
f
, 
d
);

1266 
	`f˛o£
 (
f
);

1267  (
v
);

1268 
	}
}

1270 * 
	$ivec_√w_ªad_øw
(c⁄° * 
‚ame
, 
d
)

1272 
FILE
 * 
f
 = 
	`f›í
 (
‚ame
, "r");

1273 * 
v
 = 
	`ivec_√w_‰ód_øw
 (
f
, 
d
);

1274 
	`f˛o£
 (
f
);

1275  (
v
);

1276 
	}
}

1279 *
	$bvec_√w_ªad_øw
(c⁄° * 
‚ame
, 
d
)

1281 
FILE
 * 
f
 = 
	`f›í
 (
‚ame
, "r");

1282 * 
v
 = 
	`bvec_√w_‰ód_øw
 (
f
, 
d
);

1283 
	`f˛o£
 (
f
);

1284  (
v
);

1285 
	}
}

1289 
	$b2fvecs_‰ód
 (
FILE
 * 
f
, * 
v
, 
n
)

1291 
i
 = 0, 
d
 = -1, 
ªt
;

1292 
i
 = 0 ; i < 
n
 ; i++) {

1293 i‡(
	`„of
 (
f
))

1296 
ªt
 = 
	`b2fvec_‰ód
 (
f
, 
v
 + 
i
 * 
d
);

1297 i‡(
ªt
 == 0)

1300 i‡(
ªt
 == -1)

1303 i‡(
i
 == 0)

1304 
d
 = 
ªt
;

1306 i‡(
d
 !
ªt
) {

1307 
	`≥º‹
 ("# b2fvecs_fread: dimension ofÅhe vectors isÇot consistent\n");

1311  
i
;

1312 
	}
}

1315 
	$ivecs_wrôe_txt
 (c⁄° * 
‚ame
, 
d
, 
n
, c⁄° *
v
)

1317 
i
, 
j
, 
ªt
 = 0;

1318 
FILE
 * 
fo
 = 
	`f›í
 (
‚ame
, "w");

1319 i‡(!
fo
) {

1320 
	`≥º‹
 ("ivecs_write_txt: cannot open file");

1324 
i
 = 0 ; i < 
n
 ; i++) {

1325 
j
 = 0 ; j < 
d
 ; j++)

1326 
	`Ârötf
 (
fo
, "%d ", 
v
[
i
 * 
d
 + 
j
]);

1327 
ªt
 +
	`Ârötf
 (
fo
, "\n");

1330  
ªt
;

1331 
	}
}

1334 
	$ivecs_√w_‰ód_max
 (
FILE
 *
f
, *
d_out
, **
vi_out
, 
nmax
)

1337 
	`as£π
(()==());

1339  
	`fvecs_√w_‰ód_max
(
f
,
d_out
,(**)
vi_out
,
nmax
);

1340 
	}
}

1343 
	$ivecs_√w_ªad
 (c⁄° *
‚ame
, *
d_out
, **
vi_out
)

1346 
FILE
 *
f
 = 
	`f›í
 (
‚ame
, "r");

1347 i‡(!
f
) {

1348 
	`Ârötf
 (
°dîr
, "ivecs_√w_ªad: couldÇŸ o≥¿%s\n", 
‚ame
);

1349 
	`≥º‹
 ("");

1350 *
d_out
=-1; *
vi_out
=
NULL
;

1354 
n
=
	`ivecs_√w_‰ód_max
(
f
,
d_out
,
vi_out
,-1);

1356 
	`f˛o£
(
f
);

1358  
n
;

1359 
	}
}

1362 *
	$ivec_√w_ªad
(c⁄° *
‚ame
, *
d_out
) {

1363 
d
;

1364 
n
;

1365 *
vi
;

1366 
n
 = 
	`ivecs_√w_ªad
(
‚ame
,&
d
,&
vi
);

1367 i‡(
n
<0)

1368  
NULL
;

1369 
	`as£π
 (
n
==1);

1370 i‡(
d_out
)

1371 *
d_out
=
d
;

1372  
vi
;

1373 
	}
}

1375 
	$b2fvec_‰ód
 (
FILE
 * 
f
, * 
v
)

1377 
d
, 
j
;

1378 
ªt
 = 
	`‰ód
 (&
d
,  (), 1, 
f
);

1379 i‡(
	`„of
 (
f
))

1382 i‡(
ªt
 != 1) {

1383 
	`≥º‹
 ("# bvec_freadÉrror 1");

1387 * 
vb
 = (*Ë
	`mÆloc
 ( (*vbË* 
d
);

1389 
ªt
 = 
	`‰ód
 (
vb
,  (*vb), 
d
, 
f
);

1390 i‡(
ªt
 !
d
) {

1391 
	`≥º‹
 ("# bvec_freadÉrror 2");

1394 
j
 = 0 ; j < 
d
 ; j++)

1395 
v
[
j
] = 
vb
[j];

1396 
	`‰ì
 (
vb
);

1397  
d
;

1398 
	}
}

1405 
	$fvec_fwrôe
 (
FILE
 *
fo
, c⁄° *
v
, 
d
)

1407 
ªt
;

1408 
ªt
 = 
	`fwrôe
 (&
d
,  (), 1, 
fo
);

1409 i‡(
ªt
 != 1) {

1410 
	`≥º‹
 ("fvec_fwrite: writeÉrror 1");

1413 
ªt
 = 
	`fwrôe
 (
v
,  (), 
d
, 
fo
);

1414 i‡(
ªt
 !
d
) {

1415 
	`≥º‹
 ("fvec_fwrite: writeÉrror 2");

1419 
	}
}

1422 
	$fvec_fwrôe_øw
(
FILE
 *
fo
, c⁄° *
v
, 
d
)

1424 
ªt
 = 
	`fwrôe
 (
v
,  (*v), 
d
, 
fo
);

1425 i‡(
ªt
 !
d
) {

1426 
	`≥º‹
 ("fvec_fwrite_raw: writeÉrror 2");

1430 
	}
}

1433 
	$ivec_fwrôe_øw
(
FILE
 *
fo
, c⁄° *
v
, 
d
)

1435 
ªt
 = 
	`fwrôe
 (
v
,  (*v), 
d
, 
fo
);

1436 i‡(
ªt
 !
d
) {

1437 
	`≥º‹
 ("ivec_fwrite_raw: writeÉrror 2");

1441 
	}
}

1444 
	$bvec_fwrôe_øw
(
FILE
 *
fo
, c⁄° *
v
, 
d
)

1446 
ªt
 = 
	`fwrôe
 (
v
,  (*v), 
d
, 
fo
);

1447 i‡(
ªt
 !
d
) {

1448 
	`≥º‹
 ("ivec_fwrite_raw: writeÉrror 2");

1452 
	}
}

1455 
	$ivec_wrôe_øw
 (c⁄° *
‚ame
, c⁄° *
v
, 
d
)

1457 
FILE
 * 
f
 = 
	`f›í
 (
‚ame
, "w");

1458 
	`as£π
 (
f
);

1459 
ªt
 = 
	`ivec_fwrôe_øw
 (
f
, 
v
, 
d
);

1460 
	`f˛o£
 (
f
);

1461  
ªt
;

1462 
	}
}

1464 
	$fvec_wrôe_øw
 (c⁄° *
‚ame
, c⁄° *
v
, 
d
)

1466 
FILE
 * 
f
 = 
	`f›í
 (
‚ame
, "w");

1467 
	`as£π
 (
f
);

1468 
ªt
 = 
	`fvec_fwrôe_øw
 (
f
, 
v
, 
d
);

1469 
	`f˛o£
 (
f
);

1470  
ªt
;

1471 
	}
}

1473 
	$bvec_wrôe_øw
 (c⁄° *
‚ame
, c⁄° *
v
, 
d
)

1475 
FILE
 * 
f
 = 
	`f›í
 (
‚ame
, "w");

1476 
	`as£π
 (
f
);

1477 
ªt
 = 
	`bvec_fwrôe_øw
 (
f
, 
v
, 
d
);

1478 
	`f˛o£
 (
f
);

1479  
ªt
;

1480 
	}
}

1482 
	$fvecs_fwrôe
 (
FILE
 *
fo
, 
d
, 
n
, c⁄° *
vf
)

1484 
i
;

1486 
i
 = 0; i < 
n
; i++) {

1487 if(
	`fvec_fwrôe
(
fo
, 
vf
+
i
*
d
, d)<0)

1488  
i
;

1490  
n
;

1491 
	}
}

1495 
	$fvecs_wrôe
 (c⁄° *
‚ame
, 
d
, 
n
, c⁄° *
vf
)

1497 
FILE
 *
fo
 = 
	`f›í
 (
‚ame
, "w");

1498 i‡(!
fo
) {

1499 
	`≥º‹
 ("fvecs_write: cannot open file");

1503 
ªt
 = 
	`fvecs_fwrôe
 (
fo
, 
d
, 
n
, 
vf
);

1505 
	`f˛o£
 (
fo
);

1506  
ªt
;

1507 
	}
}

1510 
	$fvecs_wrôe_txt
 (c⁄° * 
‚ame
, 
d
, 
n
, c⁄° *
vf
)

1512 
i
, 
j
, 
ªt
 = 0;

1513 
FILE
 * 
fo
 = 
	`f›í
 (
‚ame
, "w");

1514 i‡(!
fo
) {

1515 
	`≥º‹
 ("fvecs_write_txt: cannot open file");

1519 
i
 = 0 ; i < 
n
 ; i++) {

1520 
j
 = 0 ; j < 
d
 ; j++)

1521 
	`Ârötf
 (
fo
, "%‡", 
vf
[
i
 * 
d
 + 
j
]);

1522 
ªt
 +
	`Ârötf
 (
fo
, "\n");

1525  
ªt
;

1526 
	}
}

1529 
	$ivec_fwrôe
 (
FILE
 *
f
, c⁄° *
v
, 
d
)

1531 
ªt
 = 
	`fwrôe
 (&
d
,  (d), 1, 
f
);

1532 i‡(
ªt
 != 1) {

1533 
	`≥º‹
 ("ivec_fwrite: writeÉrror 1");

1537 
ªt
 = 
	`fwrôe
 (
v
,  (*v), 
d
, 
f
);

1538 i‡(
ªt
 !
d
) {

1539 
	`≥º‹
 ("ivec_fwrite: writeÉrror 2");

1543 
	}
}

1546 
	$ivecs_fwrôe
(
FILE
 *
f
, 
d
, 
n
, c⁄° *
v
)

1548 
i
;

1549 
i
 = 0 ; i < 
n
 ; i++) {

1550 
	`ivec_fwrôe
 (
f
, 
v
, 
d
);

1551 
v
+=
d
;

1553  
n
;

1554 
	}
}

1557 
	$ivecs_wrôe
 (c⁄° *
‚ame
, 
d
, 
n
, c⁄° *
v
)

1559 
ªt
 = 0;

1560 
FILE
 *
f
 = 
	`f›í
 (
‚ame
, "w");

1561 i‡(!
f
) {

1562 
	`≥º‹
 ("ivecs_write");

1566 
ªt
 = 
	`ivecs_fwrôe
 (
f
, 
d
, 
n
, 
v
);

1568 
	`f˛o£
 (
f
);

1569  
ªt
;

1570 
	}
}

1574 
	$fvec_¥öt
 (c⁄° * 
v
, 
n
)

1576 
i
;

1577 
	`¥ötf
 ("[");

1578 
i
 = 0 ; i < 
n
 ; i++)

1579 
	`¥ötf
 ("%g ", 
v
[
i
]);

1580 
	`¥ötf
 ("]\n");

1581 
	}
}

1584 
	$ivec_¥öt
 (c⁄° * 
v
, 
n
)

1586 
i
;

1587 
	`¥ötf
 ("[");

1588 
i
 = 0 ; i < 
n
 ; i++)

1589 
	`¥ötf
 ("%d ", 
v
[
i
]);

1590 
	`¥ötf
 ("]\n");

1591 
	}
}

1594 
	$bvec_¥öt
 (c⁄° * 
v
, 
n
)

1596 
i
;

1597 
	`¥ötf
 ("[");

1598 
i
 = 0 ; i < 
n
 ; i++)

1599 
	`¥ötf
 ("%d ", (Ë
v
[
i
]);

1600 
	`¥ötf
 ("]\n");

1601 
	}
}

1604 
	$lvec_¥öt
 (c⁄° * 
v
, 
n
)

1606 
i
;

1607 
	`¥ötf
 ("[");

1608 
i
 = 0 ; i < 
n
 ; i++)

1609 
	`¥ötf
 ("%Œd ", (Ë
v
[
i
]);

1610 
	`¥ötf
 ("]\n");

1611 
	}
}

1614 
	$fvec_Ârötf
 (
FILE
 * 
f
, c⁄° *
v
, 
n
, c⁄° *
fmt
)

1616 
i
;

1617 i‡(
fmt
 =
NULL
)

1618 
fmt
 = "%f ";

1620 
i
 = 0; i < 
n
; i++)

1621 
	`Ârötf
 (
f
, 
fmt
, 
v
[
i
]);

1622 
	}
}

1625 
	$ivec_Ârötf
 (
FILE
 * 
f
, c⁄° *
v
, 
n
, c⁄° *
fmt
)

1627 
i
;

1628 i‡(
fmt
 =
NULL
)

1629 
fmt
 = "%d ";

1631 
i
 = 0; i < 
n
; i++)

1632 
	`Ârötf
 (
f
, 
fmt
, 
v
[
i
]);

1633 
	}
}

1641 * 
	$ivec2fvec
 (c⁄° * 
v
, 
n
)

1643 
i
;

1644 * 
vo
 = 
	`fvec_√w
 (
n
);

1645 
i
 = 0 ; i < 
n
 ; i++)

1646 
vo
[
i
] = (Ë
v
[i];

1648  
vo
;

1649 
	}
}

1652 * 
	$bvec2fvec
 (c⁄° * 
v
, 
n
)

1654 
i
;

1655 * 
vo
 = 
	`fvec_√w
 (
n
);

1656 
i
 = 0 ; i < 
n
 ; i++)

1657 
vo
[
i
] = (Ë
v
[i];

1659  
vo
;

1660 
	}
}

1663 
	$bve˘ofvec
 (c⁄° * 
v
, * 
vb
, 
n
)

1665 
i
;

1666 
i
 = 0 ; i < 
n
 ; i++)

1667 
vb
[
i
] = (Ë
v
[i];

1668 
	}
}

1670 
	$fve˘odvec
 (c⁄° *
a
, *
b
, 
n
) {

1671 
i
;

1672 
i
 = 0 ; i < 
n
 ; i++)

1673 
b
[
i
] = 
a
[i];

1674 
	}
}

1681 
	$fvec_0
(* 
v
, 
n
)

1683 
	`mem£t
 (
v
, 0, 
n
 *  (*v));

1684 
	}
}

1686 
	$fvec_«n
 (* 
v
, 
n
) {

1687 
	`mem£t
 (
v
, -1, 
n
 *  (*v));

1688 
	}
}

1691 
	$ivec_0
(* 
v
, 
n
)

1693 
	`mem£t
 (
v
, 0, 
n
 *  (*v));

1694 
	}
}

1696 
	$fvec_Æl_0
 (c⁄° * 
v
, 
n
) {

1697 
n
--Ëif(
v
[n]!=0)  0;

1699 
	}
}

1701 
	$fvec_Æl_ge0
 (c⁄° * 
v
, 
n
) {

1702 
n
--Ëif(
v
[n]<0)  0;

1704 
	}
}

1706 
	$ivec_Æl_ge0
 (c⁄° * 
v
, 
n
) {

1707 
n
--Ëif(
v
[n]<0)  0;

1709 
	}
}

1711 
	$fvec_Æl_föôe
 (c⁄° * 
v
, 
n
) {

1712 
n
--Ëif(!
	`föôe
(
v
[n]))  0;

1714 
	}
}

1716 
	$ivec_Æl_0
 (c⁄° * 
v
, 
n
) {

1717 
n
--Ëif(
v
[n]!=0)  0;

1719 
	}
}

1721 
	$fvec_£t
 (* 
v
, 
n
, 
vÆ
)

1723 
i
;

1724 
i
 = 0 ; i < 
n
 ; i++)

1725 
v
[
i
] = 
vÆ
;

1726 
	}
}

1729 
	$ivec_£t
 (* 
v
, 
n
, 
vÆ
)

1731 
i
;

1732 
i
 = 0 ; i < 
n
 ; i++)

1733 
v
[
i
] = 
vÆ
;

1734 
	}
}

1737 
	$ivec_˝y
 (* 
vde°
, c⁄° * 
vsour˚
, 
n
)

1739 
	`memmove
 (
vde°
, 
vsour˚
, 
n
 *  (*vdest));

1740 
	}
}

1743 
	$fvec_˝y
 (* 
vde°
, c⁄° * 
vsour˚
, 
n
)

1745 
	`memmove
 (
vde°
, 
vsour˚
, 
n
 *  (*vdest));

1746 
	}
}

1749 
	$bvec_˝y
 (* 
vde°
, c⁄° * 
vsour˚
, 
n
)

1751 
	`memmove
 (
vde°
, 
vsour˚
, 
n
 *  (*vdest));

1752 
	}
}

1755 
	$fvec_ö¸
 (* 
v
, 
n
, 
sˇl
)

1757 
i
 = 0;

1758 
i
 = 0 ; i < 
n
 ; i++)

1759 
v
[
i
] +
sˇl
;

1760 
	}
}

1763 
	$fvec_de¸
 (* 
v
, 
n
, 
sˇl
)

1765 
	`fvec_ö¸
(
v
, 
n
, -
sˇl
);

1766 
	}
}

1769 
	$ivec_ö¸
 (* 
v
, 
n
, 
sˇl
) {

1770 
i
 = 0;

1771 
i
 = 0 ; i < 
n
 ; i++)

1772 
v
[
i
] +
sˇl
;

1773 
	}
}

1774 
	$ivec_de¸
 (* 
v
, 
n
, 
sˇl
) {

1775 
	`ivec_ö¸
(
v
, 
n
, -
sˇl
);

1776 
	}
}

1779 
	$fvec_mul_by
 (* 
v
, 
n
, 
sˇl
)

1781 
i
 = 0;

1782 
i
 = 0 ; i < 
n
 ; i++)

1783 
v
[
i
] *
sˇl
;

1784 
	}
}

1786 
	$fvec_div_by
 (* 
v
, 
n
, 
sˇl
)

1788 
	`fvec_mul_by
(
v
, 
n
, 1. / 
sˇl
);

1789 
	}
}

1791 
	$fvec_rdiv_by
 (* 
v
, 
n
, 
sˇl
) {

1792 
i
 = 0;

1793 
i
 = 0 ; i < 
n
 ; i++)

1794 
v
[
i
] = 
sˇl
 / v[i];

1795 
	}
}

1798 
	$fvec_add
 (* 
v1
, c⁄° * 
v2
, 
n
)

1800 
i
 = 0;

1801 
i
 = 0 ; i < 
n
 ; i++)

1802 
v1
[
i
] +
v2
[i];

1803 
	}
}

1805 
	$fvec_add_mul
 (* 
v1
, c⁄° * 
v2
, 
n
,
sˇl
) {

1806 
i
 = 0;

1807 
i
 = 0 ; i < 
n
 ; i++)

1808 
v1
[
i
] +
v2
[i]*
sˇl
;

1809 
	}
}

1811 
	$fvec_sub
 (* 
v1
, c⁄° * 
v2
, 
n
)

1813 
i
 = 0;

1814 
i
 = 0 ; i < 
n
 ; i++)

1815 
v1
[
i
] -
v2
[i];

1816 
	}
}

1818 
	$fvec_ªv_sub
 (* 
v1
, c⁄° * 
v2
, 
n
) {

1819 
i
 = 0;

1820 
i
 = 0 ; i < 
n
 ; i++)

1821 
v1
[
i
] = 
v2
[i] - v1[i];

1822 
	}
}

1824 
	$fvec_mul
 (* 
v1
, c⁄° * 
v2
, 
n
)

1826 
i
 = 0;

1827 
i
 = 0 ; i < 
n
 ; i++)

1828 
v1
[
i
] *
v2
[i];

1829 
	}
}

1832 
	$fvec_div
 (* 
v1
, c⁄° * 
v2
, 
n
)

1834 
i
 = 0;

1835 
i
 = 0 ; i < 
n
 ; i++)

1836 
v1
[
i
] /
v2
[i];

1837 
	}
}

1841 
	$fvec_round
 (* 
v
, 
n
)

1843 
i
 = 0;

1844 
i
 = 0 ; i < 
n
 ; i++)

1845 
v
[
i
] = ()(v[i]+0.5);

1846 
	}
}

1848 
	$fvec_sqπ
 (* 
v
, 
n
)

1850 
i
;

1851 
i
 = 0 ; i < 
n
 ; i++)

1852 
v
[
i
] = 
	`sqπ
 (v[i]);

1853 
	}
}

1856 
	$fvec_sqr
 (* 
v
, 
n
)

1858 
i
;

1859 
i
 = 0 ; i < 
n
 ; i++)

1860 
v
[
i
] = v[i] * v[i];

1861 
	}
}

1864 
	$fvec_exp
 (* 
v
, 
n
)

1866 
i
;

1867 
i
 = 0 ; i < 
n
 ; i++)

1868 
v
[
i
] = 
	`exp
 (v[i]);

1869 
	}
}

1872 
	$fvec_log
 (* 
v
, 
n
)

1874 
i
;

1875 
i
 = 0 ; i < 
n
 ; i++)

1876 
v
[
i
] = 
	`log
 (v[i]);

1877 
	}
}

1879 
	$fvec_√g
 (* 
v
, 
n
) {

1880 
i
;

1881 
i
 = 0 ; i < 
n
 ; i++)

1882 
v
[
i
] = -v[i];

1883 
	}
}

1885 
	$fvec_ssqπ
 (* 
v
, 
n
) {

1886 
i
;

1887 
i
 = 0 ; i < 
n
 ; i++)

1888 
v
[
i
] = v[i]>0 ? 
	`sqπ
(v[i]) : -sqrt(-v[i]);

1890 
	}
}

1892 
	$fvec_•ow
 (* 
v
, 
n
, 
sˇl
) {

1893 
i
;

1894 
i
 = 0 ; i < 
n
 ; i++)

1895 
v
[
i
] = v[i]>0 ? 
	`pow
(v[i],
sˇl
) : -pow(-v[i],scal);

1896 
	}
}

1898 
	$ivec_add
 (* 
v1
, c⁄° * 
v2
, 
n
) {

1899 
i
 = 0;

1900 
i
 = 0 ; i < 
n
 ; i++)

1901 
v1
[
i
] +
v2
[i];

1902 
	}
}

1904 
	$ivec_sub
 (* 
v1
, c⁄° * 
v2
, 
n
){

1905 
i
 = 0;

1906 
i
 = 0 ; i < 
n
 ; i++)

1907 
v1
[
i
] -
v2
[i];

1908 
	}
}

1910 
	$ivec_mul_by
 (* 
v
,
n
, 
sˇl
) {

1911 
i
 = 0;

1912 
i
 = 0 ; i < 
n
 ; i++)

1913 
v
[
i
] *
sˇl
;

1914 
	}
}

1916 
	$ivec_mod_by
 (* 
v
,
n
, 
sˇl
) {

1917 
i
 = 0;

1918 
i
 = 0 ; i < 
n
 ; i++)

1919 
v
[
i
] = v[i] % 
sˇl
;

1920 
	}
}

1923 
	$ivec_add_sˇœr
 (* 
v
, 
n
, 
sˇl
) {

1924 
i
 = 0;

1925 
i
 = 0 ; i < 
n
 ; i++)

1926 
v
[
i
] +
sˇl
;

1927 
	}
}

1929 
	$fvec_add_sˇœr
 (* 
v
, 
n
, 
sˇl
) {

1930 
i
 = 0;

1931 
i
 = 0 ; i < 
n
 ; i++)

1932 
v
[
i
] +
sˇl
;

1933 
	}
}

1942 
	$fvec_purge_«ns
(* 
v
, 
n
, 
ª∂a˚_vÆue
) {

1943 
i
, 
cou¡
=0;

1945 
i
=0;i<
n
;i++Ëif(
	`i¢™
(
v
[i])) {

1946 
cou¡
++;

1947 
v
[
i
]=
ª∂a˚_vÆue
;

1950  
cou¡
;

1951 
	}
}

1953 
	$fvec_purge_n⁄föôe
(* 
v
, 
n
, 
ª∂a˚_vÆue
) {

1954 
i
, 
cou¡
=0;

1956 
i
=0;i<
n
;i++Ëif(!
	`föôe
(
v
[i])) {

1957 
cou¡
++;

1958 
v
[
i
]=
ª∂a˚_vÆue
;

1961  
cou¡
;

1962 
	}
}

1964 
	$fvec_shrök_n⁄föôe
(* 
v
, 
n
) {

1965 
i
,
j
=0;

1967 
i
=0;i<
n
;i++Ëif(
	`föôe
(
v
[i]))

1968 
v
[
j
++]=v[
i
];

1969  
j
;

1970 
	}
}

1972 
	$fvec_ödex_n⁄föôe
(* 
v
, 
n
) {

1973 
i
;

1974 
i
=0;i<
n
;i++Ëif(!
	`föôe
(
v
[i]))  i;

1976 
	}
}

1982 
	$fvec_n‹mÆize
 (* 
v
, 
n
, 
n‹m
)

1984 if(
n‹m
==0)

1987 
ƒ
 = 
	`fvec_n‹m
 (
v
, 
n
, 
n‹m
);

1990 
	`fvec_mul_by
 (
v
, 
n
, 1. / 
ƒ
);

1991  
ƒ
;

1992 
	}
}

1994 
	$fvec_n‹mÆize_2°age
(* 
v
, 
n
, 
sˇl
) {

1995 
ƒ
 = 
	`fvec_n‹mÆize
 (
v
, 
n
, 2);

1997 if(
ƒ
 == 0) ;

1999 
ªn‹m
 = 0;

2000 
i
;

2002 
i
=0; i<
n
; i++)

2003 if(
v
[
i
] > 
sˇl
) {

2004 
v
[
i
] = 
sˇl
;

2005 
ªn‹m
 = 1;

2008 if(
ªn‹m
)

2009 
	`fvec_n‹mÆize
 (
v
, 
n
, 2);

2011 
	}
}

2015 
	$fvecs_n‹mÆize
 (* 
v
, 
n
, 
d
, 
n‹m
)

2017 
i
, 
nNaN
 = 0;

2018 i‡(
n‹m
 == 0)

2021 
i
 = 0 ; i < 
n
 ; i++) {

2022 
ƒ
 = 
	`fvec_n‹m
 (
v
 + 
i
 * 
d
, d, 
n‹m
);

2023 i‡(
ƒ
 == 0)

2024 
nNaN
++;

2026 
	`fvec_mul_by
 (
v
 + 
i
 * 
d
, d, 1 / 
ƒ
);

2029  
nNaN
;

2030 
	}
}

2032 
	$fvec_sum
 (c⁄° * 
v
, 
n
)

2034 
i
;

2035 
s
 = 0;

2036 
i
 = 0 ; i < 
n
 ; i++)

2037 
s
 +
v
[
i
];

2039  
s
;

2040 
	}
}

2042 
	$fvec_cumsum
(* 
v
, 
n
) {

2043 
i
;

2044 
s
 = 0;

2045 
i
 = 0 ; i < 
n
 ; i++) {

2046 
s
 +
v
[
i
];

2047 
v
[
i
] = 
s
;

2049 
	}
}

2051 
	$ivec_cumsum
(*
v
, 
n
) {

2052 
i
;

2053 
s
 = 0;

2054 
i
 = 0 ; i < 
n
 ; i++) {

2055 
s
 +
v
[
i
];

2056 
v
[
i
] = 
s
;

2058 
	}
}

2061 
	$fvec_cumdiff
(*
v
, 
n
) {

2062 
i
;

2063 
¥ev
 = 0;

2064 
i
 = 0 ; i < 
n
 ; i++) {

2065 
µªv
 = 
v
[
i
];

2066 
v
[
i
] -
¥ev
;

2067 
¥ev
 = 
µªv
;

2069 
	}
}

2071 
	$ivec_cumdiff
(*
v
, 
n
) {

2072 
i
;

2073 
¥ev
 = 0;

2074 
i
 = 0 ; i < 
n
 ; i++) {

2075 
µªv
 = 
v
[
i
];

2076 
v
[
i
] -
¥ev
;

2077 
¥ev
 = 
µªv
;

2079 
	}
}

2082 
	$fvec_món
 (c⁄° * 
v
, 
n
)

2084 
i
;

2085 
s
 = 0;

2086 
i
 = 0 ; i < 
n
 ; i++)

2087 
s
 +
v
[
i
];

2089  
s
 / 
n
;

2090 
	}
}

2093 
	$fvec_sum_sqr
 (c⁄° * 
v
, 
n
)

2095  
	`fvec_n‹m2sqr
(
v
, 
n
);

2096 
	}
}

2099 
	$fvec_¥odu˘
 (c⁄° * 
v
, 
n
) {

2100 
p
=1.0;

2101 
n
--Ë
p
*=
v
[n];

2102  
p
;

2103 
	}
}

2106 
	$ivec_¥odu˘
 (c⁄° * 
v
, 
n
) {

2107 
p
=1;

2108 
n
--Ë
p
*=
v
[n];

2109  
p
;

2110 
	}
}

2113 
	$ivec_sum
 (c⁄° * 
v
, 
n
)

2115 
i
;

2116 
s
 = 0;

2117 
i
 = 0 ; i < 
n
 ; i++)

2118 
s
 +
v
[
i
];

2120  
s
;

2121 
	}
}

2124 
	$ivec_món
 (c⁄° * 
v
, 
n
)

2126 
i
;

2127 
s
 = 0;

2128 
i
 = 0 ; i < 
n
 ; i++)

2129 
s
 +
v
[
i
];

2131  
s
 / 
n
;

2132 
	}
}

2135 
	$ivec_sum_sqr
 (c⁄° * 
v
, 
n
)

2137 
i
;

2138 
s
 = 0;

2139 
i
 = 0 ; i < 
n
 ; i++)

2140 
s
 +
v
[
i
]*()v[i];

2142  
s
;

2143 
	}
}

2146 
	$fvec_n‹m
 (c⁄° * 
v
, 
n
, 
n‹m
)

2148 if(
n‹m
==0Ë 
n
;

2150 
i
;

2151 
s
 = 0;

2153 if(
n‹m
==1) {

2154 
i
 = 0 ; i < 
n
 ; i++)

2155 
s
 +
	`Ábs
(
v
[
i
]);

2156  
s
;

2159 if(
n‹m
==2) {

2160 
i
 = 0 ; i < 
n
 ; i++)

2161 
s
 +
v
[
i
]*v[i];

2163  
	`sqπ
(
s
);

2166 if(
n‹m
==-1) {

2167 
i
 = 0 ; i < 
n
 ; i++)

2168 if(
	`Ábs
(
v
[
i
])>
s
) s=fabs(v[i]);

2169  
s
;

2172 
i
 = 0 ; i < 
n
 ; i++) {

2173 
s
 +
	`pow
 (
v
[
i
], 
n‹m
);

2177  
	`pow
 (
s
, 1 / 
n‹m
);

2178 
	}
}

2181 
	$fvec_n‹m2sqr
 (c⁄° * 
v
, 
n
) {

2182 
s
=0;

2183 
i
;

2184 
i
 = 0 ; i < 
n
 ; i++)

2185 
s
 +
v
[
i
] * v[i];

2186  
s
;

2187 
	}
}

2189 
	$fvec_nz
 (c⁄° * 
v
, 
n
)

2191 
i
, 
nz
 = 0;

2192 
i
 = 0 ; i < 
n
 ; i++)

2193 i‡(
v
[
i
] != 0)

2194 
nz
++;

2196  
nz
;

2197 
	}
}

2199 
	$ivec_nz
 (c⁄° * 
v
, 
n
)

2201 
i
, 
nz
 = 0;

2202 
i
 = 0 ; i < 
n
 ; i++)

2203 i‡(
v
[
i
] != 0)

2204 
nz
++;

2206  
nz
;

2207 
	}
}

2210 
	$fvec_föd
 (c⁄° *
v
, 
n
, ** 
nzpos_out
)

2212 
nz
 = 
	`fvec_nz
 (
v
, 
n
);

2213 * 
nzpos
 = 
	`ivec_√w
 (
nz
);

2214 
i
, 
ii
 = 0;

2216 
i
 = 0 ; i < 
n
 ; i++)

2217 i‡(
v
[
i
] != 0) {

2218 
nzpos
[
ii
] = 
i
;

2219 
ii
++;

2222 *
nzpos_out
 = 
nzpos
;

2223  
nz
;

2224 
	}
}

2227 
	$ivec_föd
 (c⁄° *
v
, 
n
, ** 
nzpos_out
)

2229 
nz
 = 
	`ivec_nz
 (
v
, 
n
);

2230 * 
nzpos
 = 
	`ivec_√w
 (
nz
);

2231 
i
, 
ii
 = 0;

2233 
i
 = 0 ; i < 
n
 ; i++)

2234 i‡(
v
[
i
] != 0) {

2235 
nzpos
[
ii
] = 
i
;

2236 
ii
++;

2239 *
nzpos_out
 = 
nzpos
;

2240  
nz
;

2241 
	}
}

2247 
	$fvec_íå›y
 (c⁄° *
pmf
, 
n
)

2249 
i
;

2250 
möu£¡
 = 0;

2252 
i
 = 0 ; i < 
n
 ; i++)

2253 i‡(
pmf
[
i
] > 0)

2254 
möu£¡
 +
pmf
[
i
] * 
	`log
 (pmf[i]);

2256  - 
möu£¡
 / 
	`log
(2);

2257 
	}
}

2260 
	$bö¨y_íå›y
 (
p
)

2262 i‡(
p
 == 0 ||Ö == 1)

2264  -(
p
 * 
	`log
 (p) + (1-p) *Üog (1-p)) /Üog (2);

2265 
	}
}

2267 
	$ivec_unbÆ™˚d_Á˘‹
(c⁄° *
hi°
, 
n
) {

2268 
vw
;

2269 
tŸ
 = 0, 
uf
 = 0;

2271 
vw
 = 0 ; vw < 
n
 ; vw++) {

2272 
tŸ
 +
hi°
[
vw
];

2273 
uf
 +
hi°
[
vw
] * () hist[vw];

2276 
uf
 = u‡* 
n
 / (
tŸ
 *Åot);

2278  
uf
;

2280 
	}
}

2286 
	$ivec_di°™˚_hammög
 (c⁄° * 
v1
, c⁄° * 
v2
, 
n
)

2288 
i
, 
dis
 = 0;

2290 
i
 = 0 ; i < 
n
 ; i++)

2291 
dis
 +(
v1
[
i
] =
v2
[i] ? 0 : 1);

2293  
dis
;

2294 
	}
}

2297 
	$fvec_di°™˚_L2
 (c⁄° * 
v1
, c⁄° * 
v2
, 
n
)

2299  
	`sqπ
 (
	`fvec_di°™˚_L2sqr
 (
v1
, 
v2
, 
n
));

2300 
	}
}

2303 
	$fvec_di°™˚_L1
 (c⁄° * 
v1
, c⁄° * 
v2
, 
n
) {

2304 
i
;

2305 
dis
 = 0;

2307 
i
 = 0 ; i < 
n
 ; i++) {

2308 
dis
 +
	`Ábs
(
v1
[
i
] - 
v2
[i]);

2311  
dis
;

2312 
	}
}

2314 
	$fvec_di°™˚_L2sqr
 (c⁄° * 
v1
, c⁄° * 
v2
, 
n
)

2316 
i
;

2317 
dis
 = 0, 
a
;

2319 
i
 = 0 ; i < 
n
 ; i++) {

2320 
a
 = (Ë
v1
[
i
] - 
v2
[i];

2321 
dis
 +
a
 *á;

2324  
dis
;

2325 
	}
}

2328 
	$fvec_ö√r_¥odu˘
 (c⁄° * 
v1
, c⁄° * 
v2
, 
n
)

2330 
i
;

2331 
ªs
 = 0;

2332 
i
 = 0 ; i < 
n
 ; i++)

2333 
ªs
 +
v1
[
i
] * 
v2
[i];

2334  
ªs
;

2335 
	}
}

2342 
	$fvec_to_•fvec
 (* 
v
, 
n
, ** 
idx_out
, ** 
v_out
)

2344 
i
, 
ii
 = 0;

2345 
nz
 = 
	`fvec_nz
 (
v
, 
n
);

2346 * 
idx
 = 
	`ivec_√w
 (
nz
);

2347 * 
vÆ
 = 
	`fvec_√w
 (
nz
);

2349 
i
 = 0 ; i < 
n
 ; i++)

2350 i‡(
v
[
i
] != 0) {

2351 
idx
[
ii
] = 
i
;

2352 
vÆ
[
ii
] = 
v
[
i
];

2353 
ii
++;

2356 *
idx_out
 = 
idx
;

2357 *
v_out
 = 
vÆ
;

2358  
nz
;

2359 
	}
}

2362 
	$ivec_to_•ivec
 (* 
v
, 
n
, ** 
idx_out
, ** 
v_out
)

2364 
i
, 
ii
 = 0;

2365 
nz
 = 
	`ivec_nz
 (
v
, 
n
);

2366 * 
idx
 = 
	`ivec_√w
 (
nz
);

2367 * 
vÆ
 = 
	`ivec_√w
 (
nz
);

2369 
i
 = 0 ; i < 
n
 ; i++)

2370 i‡(
v
[
i
] != 0) {

2371 
idx
[
ii
] = 
i
;

2372 
vÆ
[
ii
] = 
v
[
i
];

2373 
ii
++;

2376 *
idx_out
 = 
idx
;

2377 *
v_out
 = 
vÆ
;

2378  
nz
;

2379 
	}
}

2382 * 
	$•fvec_to_fvec
 (* 
idx
, * 
v
, 
nz
, 
n
)

2384 
i
;

2385 * 
ªt
 = 
	`fvec_√w_0
 (
n
);

2386 
i
 = 0 ; i < 
nz
 ; i++)

2387 if(
idx
[
i
] >= 0)

2388 
ªt
[
idx
[
i
]] = 
v
[i];

2390  
ªt
;

2391 
	}
}

2394 * 
	$•ivec_to_ivec
 (* 
idx
, * 
v
, 
nz
, 
n
)

2396 
i
;

2397 * 
ªt
 = 
	`ivec_√w_0
 (
n
);

2398 
i
 = 0 ; i < 
nz
 ; i++)

2399 
ªt
[
idx
[
i
]] = 
v
[i];

2401  
ªt
;

2402 
	}
}

2405 
	$•fvec_ö√r_¥odu˘
 (*
idx1
, *
vÆ1
, 
nz1
,

2406 *
idx2
, *
vÆ2
, 
nz2
)

2408 
s
 = 0;

2409 
i1
 = 0, 
i2
 = 0;

2413 i‡(
i1
 =
nz1
)

2416 i‡(
i2
 =
nz2
)

2419 i‡(
idx1
[
i1
] =
idx2
[
i2
]) {

2420 
s
 +
vÆ1
[
i1
] * 
vÆ2
[
i2
];

2421 
i1
++;

2422 
i2
++;

2426 i‡(
idx1
[
i1
] < 
idx2
[
i2
])

2427 
i1
++;

2430 
i2
++;

2433  
s
;

2434 
	}
}

2437 
	$ivec_ödex
(c⁄° * 
v
, 
n
,
vÆ
) {

2438 
i
;

2439 
i
=0;i<
n
;i++Ëif(
v
[i]==
vÆ
)  i;

2441 
	}
}

2444 
	$fvec_˝y_subve˘‹s
 (c⁄° * 
v
, * 
idx
, 
d
, 
nout
, * 
vout
)

2446 
i
;

2447 
i
 = 0 ; i < 
nout
 ; i++)

2448 
	`fvec_˝y
 (
vout
 + 
i
 * 
d
, 
v
 + (Ë
idx
[i] * d, d);

2449 
	}
}

2452 
	$ivec_to_fvec
(c⁄° *
v
, *
f
, 
n
) {

2453 
n
--Ë
f
[n] = 
v
[n];

2454 
	}
}

2457 
	$b2fvec_˝y_subve˘‹s
 (c⁄° * 
v
, * 
idx
, 
d
, 
nout
, * 
vout
)

2459 
i
, 
j
;

2460 
i
 = 0 ; i < 
nout
 ; i++)

2461 
j
 = 0 ; j < 
d
 ; j++)

2462 
vout
[
i
* ()
d
+
j
] = 
v
[
idx
[i] * () d+j];

2463 
	}
}

	@vector.h

39 #i‚de‡
__ve˘‹_h


40 
	#__ve˘‹_h


	)

42 
	~<°dio.h
>

48 
gaus§™d
 ();

89 * 
fvec_√w
 (
n
);

92 *
ivec_√w
 (
n
);

95 *
bvec_√w
 (
n
);

98 * 
lvec_√w
 (
n
);

101 * 
dvec_√w
 (
n
);

104 * 
fvec_√w_0
 (
n
);

105 * 
dvec_√w_0
 (
n
);

108 *
ivec_√w_0
 (
n
);

109 *
bvec_√w_0
 (
n
);

112 *
lvec_√w_0
 (
n
);

115 *
fvec_√w_«n
 (
n
);

118 *
fvec_√w_£t
 (
n
, 
vÆ
);

121 *
ivec_√w_£t
 (
n
, 
vÆ
);

124 *
fvec_√w_ønd
 (
n
);

127 *
fvec_√w_øndn
 (
n
);

131 
fvec_øndn_r
 (* 
v
, 
n
, 
£ed
);

134 *
fvec_√w_ønd_r
 (
n
, 
£ed
);

137 *
fvec_√w_øndn_r
 (
n
, 
£ed
);

140 * 
ivec_√w_ønge
 (
a
, 
b
);

143 * 
ivec_√w_˝y
 (c⁄° * 
v
, 
n
);

146 * 
fvec_√w_˝y
 (c⁄° * 
v
, 
n
);

149 *
ivec_√w_øndom_≥rm
 (
n
);

152 *
ivec_√w_øndom_idx
 (
n
, 
k
);

155 *
ivec_√w_øndom_≥rm_r
 (
n
, 
£ed
);

158 *
ivec_√w_øndom_idx_r
 (
n
, 
k
, 
£ed
);

161 * 
fvec_ªsize
 (* 
v
, 
n
);

164 * 
ivec_ªsize
 (* 
v
, 
n
);

170 * 
ivec_√w_hi°ogøm
 (
k
, c⁄° * 
v
, 
n
);

173 * 
ivec_√w_hi°ogøm_˛ù
 (
k
, * 
v
, 
n
);

182 * 
fvec_√w_hi°ogøm_˛ù
 (
vmö
,
vmax
, 
k
, *
v
, 
n
);

186 
ivec_hash
 (c⁄° * 
v
, 
n
);

189 
ivec_ª∂a˚
 (* 
v
, 
n
, 
vÆ
, 
ª∂a˚_vÆ
);

192 
ivec_cou¡_occuºí˚s
 (c⁄° * 
v
, 
n
, 
vÆ
);

193 
fvec_cou¡_occuºí˚s
 (c⁄° * 
v
, 
n
, 
vÆ
);

196 
fvec_cou¡_…
(c⁄° * 
v
, 
n
, 
vÆ
);

197 
ivec_cou¡_…
(c⁄° * 
v
, 
n
, 
vÆ
);

200 
fvec_cou¡_gt
(c⁄° * 
v
, 
n
, 
vÆ
);

201 
ivec_cou¡_gt
(c⁄° * 
v
, 
n
, 
vÆ
);

204 
fvec_cou¡_öønge
(c⁄° * 
v
, 
n
, 
vmö
, 
vmax
);

205 
ivec_cou¡_öønge
(c⁄° * 
v
, 
n
, 
vmö
, 
vmax
);

208 
fvec_cou¡_«n
 (c⁄° * 
v
, 
n
);

209 
fvec_cou¡_n⁄föôe
 (c⁄° * 
v
, 
n
);

211 
fvec_cou¡_0
 (c⁄° *
vÆ
, 
n
);

221 
fvecs_fsize
 (c⁄° * 
‚ame
, *
d_out
, *
n_out
);

222 
ivecs_fsize
 (c⁄° * 
‚ame
, *
d_out
, *
n_out
);

223 
bvecs_fsize
 (c⁄° * 
‚ame
, *
d_out
, *
n_out
);

224 
lvecs_fsize
 (c⁄° * 
‚ame
, *
d_out
, *
n_out
);

228 
ivec_fwrôe
(
FILE
 *
f
, c⁄° *
v
, 
d
);

229 
fvec_fwrôe
(
FILE
 *
f
, c⁄° *
v
, 
d
);

232 
ivec_fwrôe_øw
 (
FILE
 *
f
, c⁄° *
v
, 
d
);

233 
fvec_fwrôe_øw
 (
FILE
 *
f
, c⁄° *
v
, 
d
);

234 
bvec_fwrôe_øw
 (
FILE
 *
f
, c⁄° *
v
, 
d
);

236 
ivec_wrôe_øw
 (c⁄° * 
‚ame
, c⁄° *
v
, 
d
);

237 
fvec_wrôe_øw
 (c⁄° * 
‚ame
, c⁄° *
v
, 
d
);

238 
bvec_wrôe_øw
 (c⁄° * 
‚ame
, c⁄° *
v
, 
d
);

241 
ivecs_fwrôe
(
FILE
 *
f
, 
d
, 
n
, c⁄° *
v
);

242 
fvecs_fwrôe
 (
FILE
 *
fo
, 
d
, 
n
, c⁄° *
vf
);

245 
ivecs_wrôe
 (c⁄° *
‚ame
, 
d
, 
n
, c⁄° *
v
);

246 
ivecs_wrôe_txt
 (c⁄° * 
‚ame
, 
d
, 
n
, c⁄° *
v
);

247 
fvecs_wrôe
 (c⁄° *
‚ame
, 
d
, 
n
, c⁄° *
vf
);

248 
fvecs_wrôe_txt
 (c⁄° * 
‚ame
, 
d
, 
n
, c⁄° *
vf
);

254 
fvecs_√w_ªad
 (c⁄° *
‚ame
, *
d_out
, **
vf
);

256 
fvecs_√w_‰ód_max
 (
FILE
 *
f
, *
d_out
, **
vf
, 
nmax
);

271 
fvecs_√w_mm≠
 (c⁄° *
‚ame
, *
d_out
, **
vf
);

273 
ivecs_√w_mm≠
 (c⁄° *
‚ame
, *
d_out
, **
vi
);

280 
bvecs_√w_ªad
 (c⁄° *
‚ame
, *
d_out
, **
v_out
);

282 
lvecs_√w_ªad
 (c⁄° *
‚ame
, *
d_out
, **
v_out
);

285 
b2fvecs_√w_ªad
 (c⁄° *
‚ame
, *
d_out
, **
v_out
);

288 
fvecs_√w_ªad_•¨£
 (c⁄° *
‚ame
, 
d
, **
vf_out
);

291 
bvecs_√w_‰om_si·geo
(c⁄° *
‚ame
,

292 *
d_v_out
, **
v_out
,

293 *
d_mëa_out
, **
mëa_out
);

300 
fvecs_ªad
 (c⁄° *
‚ame
, 
d
, 
n
, *
v
);

303 
b2fvecs_ªad
 (c⁄° *
‚ame
, 
d
, 
n
, *
v
);

307 
fvecs_ªad_txt
 (c⁄° *
‚ame
, 
d
, 
n
, *
v
);

314 
fvec_ªad
 (c⁄° *
‚ame
, 
d
, *
a
, 
o_f
);

317 
fvec_‰ód
 (
FILE
 * 
f
, * 
v
, 
d_Æloc
);

321 
fvec_‰ód_øw
 (
FILE
 *
f
, * 
v
, 
n
);

322 
ivec_‰ód_øw
 (
FILE
 *
f
, * 
v
, 
n
);

323 
bvec_‰ód_øw
 (
FILE
 *
f
, * 
v
, 
n
);

326 *
fvec_√w_‰ód_øw
(
FILE
 * 
f
, 
n
);

327 * 
ivec_√w_‰ód_øw
(
FILE
 * 
f
, 
d
);

328 *
bvec_√w_‰ód_øw
(
FILE
 * 
f
, 
n
);

330 * 
fvec_√w_ªad_øw
(c⁄° * 
‚ame
, 
d
);

331 * 
ivec_√w_ªad_øw
(c⁄° * 
‚ame
, 
d
);

332 *
bvec_√w_ªad_øw
(c⁄° * 
‚ame
, 
d
);

336 
fvecs_‰ód
 (
FILE
 * 
f
, * 
v
, 
n
, 
d_Æloc
);

338 
ivecs_‰ód
 (
FILE
 * 
f
, * 
v
, 
n
, 
d_Æloc
);

340 
bvecs_‰ód
 (
FILE
 * 
f
, * 
v
, 
n
, 
d_Æloc
);

342 
lvecs_‰ód
 (
FILE
 * 
f
, * 
v
, 
n
, 
d_Æloc
);

344 
b2fvecs_‰ód
 (
FILE
 * 
f
, * 
v
, 
n
);

348 * 
ivec_√w_ªad
(c⁄° *
‚ame
, *
d_out
);

351 
ivec_‰ód
 (
FILE
 *
f
, * 
v
, 
d_Æloc
);

354 
bvec_‰ód
 (
FILE
 *
f
, * 
v
, 
d_Æloc
);

355 
b2fvec_‰ód
 (
FILE
 * 
f
, * 
v
);

358 
lvec_‰ód
 (
FILE
 *
f
, * 
v
, 
d_Æloc
);

362 
ivecs_√w_ªad
 (c⁄° *
‚ame
, *
d_out
, **
vi
);

365 
ivecs_√w_‰ód_max
 (
FILE
 *
f
, *
d_out
, **
vi
, 
nmax
);

369 
fvec_¥öt
 (c⁄° * 
v
, 
n
);

370 
fvec_Ârötf
 (
FILE
 * 
f
, c⁄° *
v
, 
n
, c⁄° *
fmt
);

373 
ivec_¥öt
 (c⁄° * 
v
, 
n
);

374 
ivec_Ârötf
 (
FILE
 * 
f
, c⁄° *
v
, 
n
, c⁄° *
fmt
);

377 
ivec_ödex
 (c⁄° * 
v
, 
n
,
vÆ
);

385 * 
ivec2fvec
 (c⁄° * 
v
, 
n
);

388 * 
bvec2fvec
 (c⁄° * 
v
, 
n
);

391 
bve˘ofvec
 (c⁄° * 
v
, * 
vb
, 
n
);

393 
fve˘odvec
 (c⁄° *
a
, *
b
, 
n
);

401 
fvec_0
 (* 
v
, 
n
);

402 
ivec_0
 (* 
v
, 
n
);

404 
fvec_«n
 (* 
v
, 
n
);

407 
fvec_ønd
 (* 
v
, 
n
);

410 
fvec_øndn
 (* 
v
, 
n
);

414 
fvec_Æl_0
 (c⁄° * 
v
, 
n
);

415 
ivec_Æl_0
 (c⁄° * 
v
, 
n
);

418 
fvec_Æl_ge0
 (c⁄° * 
v
, 
n
);

419 
ivec_Æl_ge0
 (c⁄° * 
v
, 
n
);

422 
fvec_Æl_föôe
 (c⁄° * 
v
, 
n
);

425 
fvec_£t
 (* 
v
, 
n
, 
vÆ
);

426 
ivec_£t
 (* 
v
, 
n
, 
vÆ
);

429 
ivec_˝y
 (* 
vde°
, c⁄° * 
vsour˚
, 
n
);

430 
fvec_˝y
 (* 
vde°
, c⁄° * 
vsour˚
, 
n
);

431 
bvec_˝y
 (* 
vde°
, c⁄° * 
vsour˚
, 
n
);

434 
fvec_ö¸
 (* 
v
, 
n
, 
sˇl
);

435 
fvec_de¸
 (* 
v
, 
n
, 
sˇl
);

436 
ivec_ö¸
 (* 
v
, 
n
, 
sˇl
);

437 
ivec_de¸
 (* 
v
, 
n
, 
sˇl
);

441 
fvec_mul_by
 (* 
v
, 
n
, 
sˇl
);

442 
fvec_div_by
 (* 
v
, 
n
, 
sˇl
);

444 
fvec_rdiv_by
 (* 
v
, 
n
, 
sˇl
);

447 
fvec_add
 (* 
v1
, c⁄° * 
v2
, 
n
);

448 
fvec_sub
 (* 
v1
, c⁄° * 
v2
, 
n
);

451 
fvec_ªv_sub
 (* 
v1
, c⁄° * 
v2
, 
n
);

454 
fvec_add_mul
 (* 
v1
, c⁄° * 
v2
, 
n
, 
sˇl
);

457 
fvec_mul
 (* 
v1
, c⁄° * 
v2
, 
n
);

458 
fvec_div
 (* 
v1
, c⁄° * 
v2
, 
n
);

465 
fvec_n‹mÆize
 (* 
v
, 
n
, 
n‹m
);

470 
fvecs_n‹mÆize
 (* 
v
, 
n
, 
d
, 
n‹m
);

472 
fvec_round
 (* 
v
, 
n
);

473 
fvec_sqπ
 (* 
v
, 
n
);

474 
fvec_sqr
 (* 
v
, 
n
);

475 
fvec_exp
 (* 
v
, 
n
);

476 
fvec_log
 (* 
v
, 
n
);

477 
fvec_√g
 (* 
v
, 
n
);

480 
fvec_ssqπ
 (* 
v
, 
n
);

483 
fvec_•ow
 (* 
v
, 
n
, 
sˇl
);

486 
fvec_n‹mÆize_2°age
(* 
v
, 
n
, 
sˇl
);

488 
ivec_add
 (* 
v1
, c⁄° * 
v2
, 
n
);

489 
ivec_sub
 (* 
v1
, c⁄° * 
v2
, 
n
);

490 
ivec_mul_by
 (* 
v1
,
n
, 
sˇl
);

491 
ivec_mod_by
 (* 
v1
,
n
, 
sˇl
);

492 
ivec_add_sˇœr
 (* 
v
, 
n
, 
sˇl
);

493 
fvec_add_sˇœr
 (* 
v
, 
n
, 
sˇl
);

497 
fvec_purge_«ns
(* 
v
, 
n
, 
ª∂a˚_vÆue
);

498 
fvec_purge_n⁄föôe
(* 
v
, 
n
, 
ª∂a˚_vÆue
);

502 
fvec_shrök_n⁄föôe
(* 
v
, 
n
);

505 
fvec_ödex_n⁄föôe
 (* 
v
, 
n
);

512 
fvec_sum
 (c⁄° * 
v
, 
n
);

513 
ivec_sum
 (c⁄° * 
v
, 
n
);

516 
fvec_cumsum
(* 
v
, 
n
);

517 
ivec_cumsum
(*
v
, 
n
);

520 
fvec_cumdiff
(*
v
, 
n
);

521 
ivec_cumdiff
(*
v
, 
n
);

524 
fvec_¥odu˘
 (c⁄° * 
v
, 
n
);

525 
ivec_¥odu˘
 (c⁄° * 
v
, 
n
);

528 
fvec_sum_sqr
 (c⁄° * 
v
, 
n
);

529 
ivec_sum_sqr
 (c⁄° * 
v
, 
n
);

532 
fvec_món
 (c⁄° * 
v
, 
n
);

533 
ivec_món
 (c⁄° * 
v
, 
n
);

536 
fvec_n‹m
 (c⁄° * 
v
, 
n
, 
n‹m
);

539 
fvec_n‹m2sqr
 (c⁄° * 
v
, 
n
);

542 
fvec_nz
 (c⁄° * 
v
, 
n
);

543 
ivec_nz
 (c⁄° * 
v
, 
n
);

547 
fvec_föd
 (c⁄° *
v
, 
n
, ** 
nzpos_out
);

548 
ivec_föd
 (c⁄° *
v
, 
n
, ** 
nzpos_out
);

551 
ivec_shufÊe
 (*
v
, 
n
);

554 
fvec_íå›y
 (c⁄° *
pmf
, 
n
);

557 
bö¨y_íå›y
 (
p
);

559 
ivec_unbÆ™˚d_Á˘‹
(c⁄° *
hi°
, 
n
);

566 
ivec_di°™˚_hammög
 (c⁄° * 
v1
, c⁄° * 
v2
, 
n
);

569 
fvec_di°™˚_L2
 (c⁄° * 
v1
, c⁄° * 
v2
, 
n
);

572 
fvec_di°™˚_L1
 (c⁄° * 
v1
, c⁄° * 
v2
, 
n
);

575 
fvec_di°™˚_L2sqr
 (c⁄° * 
v1
, c⁄° * 
v2
, 
n
);

578 
fvec_ö√r_¥odu˘
 (c⁄° * 
v1
, c⁄° * 
v2
, 
n
);

593 
fvec_to_•fvec
 (* 
v
, 
n
, ** 
idx_out
, ** 
v_out
);

594 
ivec_to_•ivec
 (* 
v
, 
n
, ** 
idx_out
, ** 
v_out
);

598 * 
•fvec_to_fvec
 (* 
idx
, * 
v
, 
nz
, 
n
);

599 * 
•ivec_to_ivec
 (* 
idx
, * 
v
, 
nz
, 
n
);

602 
•fvec_ö√r_¥odu˘
 (*
idx1
, *
vÆ1
, 
nz1
,

603 *
idx2
, *
vÆ2
, 
nz2
);

616 
ivec_accumuœã_¶i˚s
(c⁄° *
v
,*
¶
,
n
);

620 
fvec_m≠
 (c⁄° *
§c
,c⁄° *
m≠
,
n
,*
de°
);

623 
ivec_m≠
 (c⁄° *
§c
,c⁄° *
m≠
,
n
,*
de°
);

626 
fvec_im≠
(c⁄° *
§c
,c⁄° *
im≠
,
n
,*
de°
);

632 
fvec_•œt_add
(c⁄° *
a
,
n
,

633 c⁄° *
assign
,*
accu
);

639 
fvec_i•œt_add
(c⁄° *
a
,
n
,

640 c⁄° *
assign
,*
accu
);

649 * 
ivec_ª≥©_wôh_öc
(c⁄° *
a
,
n
,

650 
ƒïót
, 
öc
);

659 
fvec_˝y_subve˘‹s
 (c⁄° * 
v
, * 
idx
, 
d
, 
nout
, * 
vout
);

661 
b2fvec_˝y_subve˘‹s
 (c⁄° * 
v
, * 
idx
, 
d
, 
nout
, * 
vout
);

664 
ivec_to_fvec
(c⁄° *
v
, *
f
, 
n
);

	@vlad.c

39 
	~<m©h.h
>

40 
	~<°dlib.h
>

41 
	~<as£π.h
>

43 
	~"vœd.h
"

44 
	~"¬.h
"

45 
	~"ve˘‹.h
"

46 
	~"s‹tög.h
"

48 
	$vœd_compuã
(
k
, 
d
, c⁄° *
˚¡roids
,

49 
n
, c⁄° *
v
, *
desc
)

52 
i
,
j
;

53 *
assign
 = 
	`ivec_√w
 (
n
);

55 
	`¬
 (
n
, 
k
, 
d
, 
˚¡roids
, 
v
, 
assign
);

57 
	`fvec_0
 (
desc
, 
k
 * 
d
);

59 
i
 = 0 ; i < 
n
 ; i++) {

60 
j
 = 0 ; j < 
d
 ; j++)

61 
desc
[
assign
[
i
]*
d
+
j
] +
v
[i*d+j] - 
˚¡roids
[assign[i]*d+j];

64 
	`‰ì
(
assign
);

65 
	}
}

68 
	$vœd_compuã_weighãd
(
k
, 
d
, c⁄° *
˚¡roids
,

69 
n
, c⁄° *
v
, c⁄° *
weights
,

70 *
desc
)

73 
i
,
j
;

74 *
assign
 = 
	`ivec_√w
 (
n
);

76 
	`¬
 (
n
, 
k
, 
d
, 
˚¡roids
, 
v
, 
assign
);

78 
	`fvec_0
(
desc
,
k
*
d
);

80 
i
 = 0 ; i < 
n
 ; i++) {

81 
w
 = 
weights
[
i
];

82 
j
 = 0 ; j < 
d
 ; j++)

83 
desc
[
assign
[
i
]*
d
+
j
] +(
v
[i*d+j] - 
˚¡roids
[assign[i]*d+j]Ë* 
w
;

86 
	`‰ì
(
assign
);

87 
	}
}

90 
	$vœd_compuã_sub£ts
(
k
, 
d
, c⁄° *
˚¡roids
,

91 
n
, c⁄° *
v
,

92 
n_sub£t
,

93 c⁄° *
sub£t_ödexes
,

94 c⁄° *
sub£t_íds
,

95 *
desc
)

97 
j
;

98 *
assign
 = 
	`ivec_√w
(
n
);

100 
	`¬
 (
n
, 
k
, 
d
, 
˚¡roids
, 
v
, 
assign
);

102 
	`fvec_0
 (
desc
, 
k
 * 
d
 * 
n_sub£t
);

104 
ss
, 
ss_begö
 = 0;

105 
ss
 = 0 ; s†< 
n_sub£t
 ; ss++) {

106 *
descss
 = 
desc
 + 
ss
 * 
k
 * 
d
;

107 
ss_íd
 = 
sub£t_íds
[
ss
], 
ii
;

108 
ii
 = 
ss_begö
 ; iò< 
ss_íd
 ; ii++) {

109 
i
 = 
sub£t_ödexes
[
ii
];

110 
j
 = 0 ; j < 
d
 ; j++)

111 
descss
[
assign
[
i
]*
d
+
j
] +
v
[i*d+j] - 
˚¡roids
[assign[i]*d+j];

113 
ss_begö
 = 
ss_íd
;

116 
	`‰ì
(
assign
);

117 
	}
}

120 
	$bof_compuã_sub£ts
(
k
, 
d
, c⁄° *
˚¡roids
,

121 
n
, c⁄° *
v
,

122 
n_sub£t
,

123 c⁄° *
sub£t_ödexes
,

124 c⁄° *
sub£t_íds
,

125 *
desc
)

127 *
assign
=
	`ivec_√w
(
n
);

129 
	`¬
 (
n
, 
k
, 
d
, 
˚¡roids
, 
v
, 
assign
);

131 
	`fvec_0
 (
desc
, 
k
 * 
n_sub£t
);

133 
ss
, 
ss_begö
 = 0;

134 
ss
 = 0 ; s†< 
n_sub£t
 ; ss++) {

135 *
descss
 = 
desc
 + 
ss
 * 
k
;

136 
ss_íd
 = 
sub£t_íds
[
ss
], 
ii
;

137 
ii
 = 
ss_begö
 ; iò< 
ss_íd
 ; ii++) {

138 
i
 = 
sub£t_ödexes
[
ii
];

139 
descss
[
assign
[
i
]] ++;

141 
ss_begö
 = 
ss_íd
;

144 
	`‰ì
 (
assign
);

145 
	}
}

148 
	$bof_compuã
 (
k
, 
d
, c⁄° *
˚¡roids
,

149 
n
, c⁄° *
v
, *
desc
)

151 
i
;

152 *
assign
 = 
	`ivec_√w
(
n
);

153 
	`¬
 (
n
, 
k
, 
d
, 
˚¡roids
, 
v
, 
assign
);

154 
	`ivec_0
(
desc
,
k
);

156 
i
=0;i<
n
;i++)

157 
desc
[
assign
[
i
]]++;

159 
	`‰ì
(
assign
);

160 
	}
}

163 
	$bof_compuã_ma
 (
k
, 
d
, c⁄° *
˚¡roids
,

164 
n
, c⁄° *
v
, *
desc
,

165 
ma
, 
Æpha
, 
¡
)

167 
i
;

168 *
assign
 = 
	`ivec_√w
(
n
*
ma
);

169 
	`k¬_thªad
 (
n
, 
k
, 
d
, 
ma
, 
˚¡roids
, 
v
, 
assign
, 
¡
);

170 
	`ivec_0
(
desc
,
k
);

172 
i
=0;i<
n
*
ma
;i++)

173 
desc
[
assign
[
i
]]++;

175 
	`‰ì
(
assign
);

176 
	}
}

	@vlad.h

39 #i‚de‡
VLAD_H_INCLUDED


40 
	#VLAD_H_INCLUDED


	)

42 
	~<°dlib.h
>

55 
vœd_compuã
 (
k
, 
d
, c⁄° *
˚¡roids
,

56 
n
, c⁄° *
v
,

57 *
desc
);

62 
vœd_compuã_weighãd
 (
k
, 
d
, c⁄° *
˚¡roids
,

63 
n
, c⁄° *
v
, c⁄° *
weights
,

64 *
desc
);

78 
vœd_compuã_sub£ts
(
k
, 
d
, c⁄° *
˚¡roids
,

79 
n
, c⁄° *
v
,

80 
n_sub£t
,

81 c⁄° *
sub£t_ödexes
,

82 c⁄° *
sub£t_íds
,

83 *
desc
);

95 
bof_compuã
 (
k
, 
d
, c⁄° *
˚¡roids
,

96 
n
, c⁄° *
v
, *
desc
);

100 
bof_compuã_ma
 (
k
, 
d
, c⁄° *
˚¡roids
,

101 
n
, c⁄° *
v
, *
desc
,

102 
ma
, 
Æpha
, 
¡
);

110 
bof_compuã_sub£ts
(
k
, 
d
, c⁄° *
˚¡roids
,

111 
n
, c⁄° *
v
,

112 
n_sub£t
,

113 c⁄° *
sub£t_ödexes
,

114 c⁄° *
sub£t_íds
,

115 *
desc
);

	@/usr/include/assert.h

24 #ifdef 
_ASSERT_H


26 #unde‡
_ASSERT_H


27 #unde‡
as£π


28 #unde‡
__ASSERT_VOID_CAST


30 #ifdef 
__USE_GNU


31 #unde‡
as£π_≥º‹


36 
	#_ASSERT_H
 1

	)

37 
	~<„©uªs.h
>

39 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,95)

40 
	#__ASSERT_VOID_CAST
 
°©ic_ˇ°
<>

	)

42 
	#__ASSERT_VOID_CAST
 ()

	)

50 #ifdef 
NDEBUG


52 
	#as£π
(
ex¥
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

60 #ifdef 
__USE_GNU


61 
	#as£π_≥º‹
(
î∫um
Ë(
	`__ASSERT_VOID_CAST
 (0))

	)

66 
__BEGIN_DECLS


69 
	$__as£π_Áû
 (
__c⁄°
 *
__as£πi⁄
, __c⁄° *
__fûe
,

70 
__löe
, 
__c⁄°
 *
__fun˘i⁄
)

71 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

74 
	$__as£π_≥º‹_Áû
 (
__î∫um
, 
__c⁄°
 *
__fûe
,

75 
__löe
,

76 
__c⁄°
 *
__fun˘i⁄
)

77 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

82 
	$__as£π
 (c⁄° *
__as£πi⁄
, c⁄° *
__fûe
, 
__löe
)

83 
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

86 
__END_DECLS


88 
	#as£π
(
ex¥
) \

89 ((
ex¥
) \

90 ? 
	`__ASSERT_VOID_CAST
 (0) \

91 : 
	`__as£π_Áû
 (
	`__STRING
(
ex¥
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

93 #ifdef 
__USE_GNU


94 
	#as£π_≥º‹
(
î∫um
) \

95 (!(
î∫um
) \

96 ? 
	`__ASSERT_VOID_CAST
 (0) \

97 : 
	`__as£π_≥º‹_Áû
 ((
î∫um
), 
__FILE__
, 
__LINE__
, 
__ASSERT_FUNCTION
))

	)

105 #i‡
deföed
 
__˝lu•lus
 ? 
	`__GNUC_PREREQ
 (2, 6) : __GNUC_PREREQ (2, 4)

106 
	#__ASSERT_FUNCTION
 
__PRETTY_FUNCTION__


	)

108 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

109 
	#__ASSERT_FUNCTION
 
__func__


	)

111 
	#__ASSERT_FUNCTION
 ((
__c⁄°
 *Ë0)

	)

	@/usr/include/errno.h

23 #i‚def 
_ERRNO_H


27 #i‚def 
__√ed_Em©h


28 
	#_ERRNO_H
 1

	)

29 
	~<„©uªs.h
>

32 
	g__BEGIN_DECLS


36 
	~<bôs/î∫o.h
>

37 #unde‡
__√ed_Em©h


39 #ifdef 
_ERRNO_H


46 #i‚def 
î∫o


47 
î∫o
;

50 #ifde‡
__USE_GNU


55 *
¥ogøm_övoˇti⁄_«me
, *
¥ogøm_övoˇti⁄_sh‹t_«me
;

59 
	g__END_DECLS


67 #i‡
deföed
 
__USE_GNU
 || deföed 
__√ed_îr‹_t


68 #i‚de‡
__îr‹_t_deföed


69 
	tîr‹_t
;

70 
	#__îr‹_t_deföed
 1

	)

72 #unde‡
__√ed_îr‹_t


	@/usr/include/fcntl.h

24 #i‚def 
_FCNTL_H


25 
	#_FCNTL_H
 1

	)

27 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/f˙é.h
>

37 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


38 
	~<bôs/ty≥s.h
>

39 
	#__√ed_time•ec


	)

40 
	~<time.h
>

41 
	~<bôs/°©.h
>

43 
	#S_IFMT
 
__S_IFMT


	)

44 
	#S_IFDIR
 
__S_IFDIR


	)

45 
	#S_IFCHR
 
__S_IFCHR


	)

46 
	#S_IFBLK
 
__S_IFBLK


	)

47 
	#S_IFREG
 
__S_IFREG


	)

48 #ifde‡
__S_IFIFO


49 
	#S_IFIFO
 
__S_IFIFO


	)

51 #ifde‡
__S_IFLNK


52 
	#S_IFLNK
 
__S_IFLNK


	)

54 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
Ë&& deföed 
__S_IFSOCK


55 
	#S_IFSOCK
 
__S_IFSOCK


	)

60 
	#S_ISUID
 
__S_ISUID


	)

61 
	#S_ISGID
 
__S_ISGID


	)

63 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


65 
	#S_ISVTX
 
__S_ISVTX


	)

68 
	#S_IRUSR
 
__S_IREAD


	)

69 
	#S_IWUSR
 
__S_IWRITE


	)

70 
	#S_IXUSR
 
__S_IEXEC


	)

72 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

74 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

75 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

76 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

78 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

80 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

81 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

82 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

84 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

87 #ifdef 
__USE_MISC


88 #i‚de‡
R_OK


91 
	#R_OK
 4

	)

92 
	#W_OK
 2

	)

93 
	#X_OK
 1

	)

94 
	#F_OK
 0

	)

99 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


100 
	#SEEK_SET
 0

	)

101 
	#SEEK_CUR
 1

	)

102 
	#SEEK_END
 2

	)

105 #ifde‡
__USE_ATFILE


106 
	#AT_FDCWD
 -100

	)

109 
	#AT_SYMLINK_NOFOLLOW
 0x100

	)

110 
	#AT_REMOVEDIR
 0x200

	)

112 
	#AT_SYMLINK_FOLLOW
 0x400

	)

113 
	#AT_NO_AUTOMOUNT
 0x800

	)

115 
	#AT_EMPTY_PATH
 0x1000

	)

116 
	#AT_EACCESS
 0x200

	)

125 
f˙é
 (
__fd
, 
__cmd
, ...);

133 #i‚de‡
__USE_FILE_OFFSET64


134 
	$›í
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

136 #ifde‡
__REDIRECT


137 
	`__REDIRECT
 (
›í
, (
__c⁄°
 *
__fûe
, 
__oÊag
, ...), 
›í64
)

138 
	`__n⁄nuŒ
 ((1));

140 
	#›í
 
›í64


	)

143 #ifde‡
__USE_LARGEFILE64


144 
	$›í64
 (
__c⁄°
 *
__fûe
, 
__oÊag
, ...Ë
	`__n⁄nuŒ
 ((1));

147 #ifde‡
__USE_ATFILE


157 #i‚de‡
__USE_FILE_OFFSET64


158 
	$›í©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

159 
	`__n⁄nuŒ
 ((2));

161 #ifde‡
__REDIRECT


162 
	`__REDIRECT
 (
›í©
, (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
,

163 ...), 
›í©64
Ë
	`__n⁄nuŒ
 ((2));

165 
	#›í©
 
›í©64


	)

168 #ifde‡
__USE_LARGEFILE64


169 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__oÊag
, ...)

170 
	`__n⁄nuŒ
 ((2));

179 #i‚de‡
__USE_FILE_OFFSET64


180 
	$¸ót
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

182 #ifde‡
__REDIRECT


183 
	`__REDIRECT
 (
¸ót
, (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
),

184 
¸ót64
Ë
	`__n⁄nuŒ
 ((1));

186 
	#¸ót
 
¸ót64


	)

189 #ifde‡
__USE_LARGEFILE64


190 
	$¸ót64
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
Ë
	`__n⁄nuŒ
 ((1));

193 #i‡!
deföed
 
F_LOCK
 && (deföed 
__USE_MISC
 || (deföed 
__USE_XOPEN_EXTENDED
 \

194 && !
deföed
 
__USE_POSIX
))

203 
	#F_ULOCK
 0

	)

204 
	#F_LOCK
 1

	)

205 
	#F_TLOCK
 2

	)

206 
	#F_TEST
 3

	)

208 #i‚de‡
__USE_FILE_OFFSET64


209 
	`lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
);

211 #ifde‡
__REDIRECT


212 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
), 
lockf64
);

214 
	#lockf
 
lockf64


	)

217 #ifde‡
__USE_LARGEFILE64


218 
	`lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
);

222 #ifde‡
__USE_XOPEN2K


225 #i‚de‡
__USE_FILE_OFFSET64


226 
	$posix_Ádvi£
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
,

227 
__advi£
Ë
__THROW
;

229 #ifde‡
__REDIRECT_NTH


230 
	`__REDIRECT_NTH
 (
posix_Ádvi£
, (
__fd
, 
__off64_t
 
__off£t
,

231 
__off64_t
 
__Àn
, 
__advi£
),

232 
posix_Ádvi£64
);

234 
	#posix_Ádvi£
 
posix_Ádvi£64


	)

237 #ifde‡
__USE_LARGEFILE64


238 
	$posix_Ádvi£64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
,

239 
__advi£
Ë
__THROW
;

247 #i‚de‡
__USE_FILE_OFFSET64


248 
	`posix_ÁŒoˇã
 (
__fd
, 
__off_t
 
__off£t
, __off_à
__Àn
);

250 #ifde‡
__REDIRECT


251 
	`__REDIRECT
 (
posix_ÁŒoˇã
, (
__fd
, 
__off64_t
 
__off£t
,

252 
__off64_t
 
__Àn
),

253 
posix_ÁŒoˇã64
);

255 
	#posix_ÁŒoˇã
 
posix_ÁŒoˇã64


	)

258 #ifde‡
__USE_LARGEFILE64


259 
	`posix_ÁŒoˇã64
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__Àn
);

265 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
 \

266 && 
deföed
 
__va_¨g_∑ck_Àn


267 
	~<bôs/f˙é2.h
>

270 
__END_DECLS


	@/usr/include/malloc.h

21 #i‚de‡
_MALLOC_H


22 
	#_MALLOC_H
 1

	)

24 
	~<„©uªs.h
>

25 
	~<°ddef.h
>

26 
	~<°dio.h
>

27 
	#__mÆloc_±r_t
 *

	)

30 
	#__mÆloc_size_t
 
size_t


	)

31 
	#__mÆloc_±rdiff_t
 
±rdiff_t


	)

33 #ifde‡
__GNUC__


35 
	#__MALLOC_P
(
¨gs
Ë¨g†
__THROW


	)

38 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

40 #ifde‡
_LIBC


41 
	#__MALLOC_HOOK_VOLATILE


	)

42 
	#__MALLOC_DEPRECATED


	)

44 
	#__MALLOC_HOOK_VOLATILE
 
__vﬁ©ûe


	)

45 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

50 
	#__MALLOC_P
(
¨gs
Ë
	)
args

51 
	#__MALLOC_PMT
(
¨gs
Ë
	)
args

52 
	#__MALLOC_HOOK_VOLATILE


	)

53 
	#__MALLOC_DEPRECATED
 
__©åibuã_dïªˇãd__


	)

58 
__BEGIN_DECLS


61 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

64 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

65 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

72 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

73 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

76 
	$‰ì
 (*
__±r
Ë
__THROW
;

79 
	$c‰ì
 (*
__±r
Ë
__THROW
;

82 *
	$memÆign
 (
size_t
 
__Æignmít
, size_à
__size
)

83 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

86 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

90 * 
	$pvÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

94 *(*
__m‹ec‹e
Ë(
±rdiff_t
 
__size
);

97 *
	$__deÁu…_m‹ec‹e
 (
±rdiff_t
 
__size
)

98 
__THROW
 
__©åibuã_mÆloc__
;

102 
	smÆlöfo


104 
¨ía
;

105 
‹dblks
;

106 
smblks
;

107 
hblks
;

108 
hblkhd
;

109 
usmblks
;

110 
fsmblks
;

111 
u‹dblks
;

112 
f‹dblks
;

113 
kìpco°
;

117 
mÆlöfo
 
	$mÆlöfo
 (Ë
__THROW
;

120 #i‚de‡
M_MXFAST


121 
	#M_MXFAST
 1

	)

123 #i‚de‡
M_NLBLKS


124 
	#M_NLBLKS
 2

	)

126 #i‚de‡
M_GRAIN


127 
	#M_GRAIN
 3

	)

129 #i‚de‡
M_KEEP


130 
	#M_KEEP
 4

	)

134 
	#M_TRIM_THRESHOLD
 -1

	)

135 
	#M_TOP_PAD
 -2

	)

136 
	#M_MMAP_THRESHOLD
 -3

	)

137 
	#M_MMAP_MAX
 -4

	)

138 
	#M_CHECK_ACTION
 -5

	)

139 
	#M_PERTURB
 -6

	)

140 
	#M_ARENA_TEST
 -7

	)

141 
	#M_ARENA_MAX
 -8

	)

144 
	$mÆl›t
 (
__∑øm
, 
__vÆ
Ë
__THROW
;

148 
	$mÆloc_åim
 (
size_t
 
__∑d
Ë
__THROW
;

152 
size_t
 
	$mÆloc_ußbÀ_size
 (*
__±r
Ë
__THROW
;

155 
	$mÆloc_°©s
 (Ë
__THROW
;

158 
	$mÆloc_öfo
 (
__›ti⁄s
, 
FILE
 *
__Â
Ë
__THROW
;

161 *
	$mÆloc_gë_°©e
 (Ë
__THROW
;

165 
	$mÆloc_£t_°©e
 (*
__±r
Ë
__THROW
;

170 (*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_öôülize_hook
) ()

171 
__MALLOC_DEPRECATED
;

173 (*
__MALLOC_HOOK_VOLATILE
 
__‰ì_hook
Ë(*
__±r
,

174 
__c⁄°
 
__mÆloc_±r_t
)

175 
__MALLOC_DEPRECATED
;

176 *(*
__MALLOC_HOOK_VOLATILE
 
__mÆloc_hook
Ë(
size_t
 
__size
,

177 
__c⁄°
 
__mÆloc_±r_t
)

178 
__MALLOC_DEPRECATED
;

179 *(*
__MALLOC_HOOK_VOLATILE
 
__ªÆloc_hook
Ë(*
__±r
,

180 
size_t
 
__size
,

181 
__c⁄°
 
__mÆloc_±r_t
)

182 
__MALLOC_DEPRECATED
;

183 *(*
__MALLOC_HOOK_VOLATILE
 
__memÆign_hook
Ë(
size_t
 
__Æignmít
,

184 
size_t
 
__size
,

185 
__c⁄°
 
__mÆloc_±r_t
)

186 
__MALLOC_DEPRECATED
;

187 (*
__MALLOC_HOOK_VOLATILE
 
__a·î_m‹ec‹e_hook
) ();

190 
	$__mÆloc_check_öô
 (Ë
__THROW
 
__MALLOC_DEPRECATED
;

193 
__END_DECLS


	@/usr/include/math.h

25 #i‚def 
_MATH_H


26 
	#_MATH_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 
	~<bôs/huge_vÆ.h
>

35 #ifde‡
__USE_ISOC99


36 
	~<bôs/huge_vÆf.h
>

37 
	~<bôs/huge_vÆl.h
>

40 
	~<bôs/öf.h
>

43 
	~<bôs/«n.h
>

47 
	~<bôs/m©hdef.h
>

54 
	#__MATHCALL
(
fun˘i⁄
,
suffix
, 
¨gs
) \

55 
	`__MATHDECL
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
)

	)

56 
	#__MATHDECL
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

57 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
); \

58 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
)

	)

59 
	#__MATHCALLX
(
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

60 
	`__MATHDECLX
 (
_MdoubÀ_
,
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
)

	)

61 
	#__MATHDECLX
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
©åib
) \

62 
	`__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
); \

63 
	`__MATHDECL_1
(
ty≥
, 
	`__CONCAT
(
__
,
fun˘i⁄
),
suffix
, 
¨gs
Ë
	`__©åibuã__
 (
©åib
)

	)

64 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

65 
ty≥
 
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
Ë
¨gs
 
__THROW


	)

67 
	#_MdoubÀ_
 

	)

68 
	#__MATH_PRECNAME
(
«me
,
r
Ë
	`__CONCAT
“ame,r)

	)

69 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_STD


	)

70 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_STD


	)

71 
	~<bôs/m©hˇŒs.h
>

72 #unde‡
_MdoubÀ_


73 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


74 #unde‡
_MdoubÀ_END_NAMESPACE


75 #unde‡
__MATH_PRECNAME


77 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


83 #i‚de‡
_MÊﬂt_


84 
	#_MÊﬂt_
 

	)

86 
	#_MdoubÀ_
 
_MÊﬂt_


	)

87 #ifde‡
__STDC__


88 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
f
##
	)
r

90 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
f
 
	)
r

92 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

93 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

94 
	~<bôs/m©hˇŒs.h
>

95 #unde‡
_MdoubÀ_


96 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


97 #unde‡
_MdoubÀ_END_NAMESPACE


98 #unde‡
__MATH_PRECNAME


100 #i‡(
__STDC__
 - 0 || 
__GNUC__
 - 0) \

101 && (!(
deföed
 
__NO_LONG_DOUBLE_MATH
 && deföed 
_LIBC
) \

102 || 
deföed
 
__LDBL_COMPAT
)

103 #ifde‡
__LDBL_COMPAT


105 #ifde‡
__USE_ISOC99


106 
	$__∆dbl_√xâow¨df
 (
__x
, 
__y
)

107 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

108 #ifde‡
__REDIRECT_NTH


109 
	`__REDIRECT_NTH
 (
√xâow¨df
, (
__x
, 
__y
),

110 
__∆dbl_√xâow¨df
)

111 
	`__©åibuã__
 ((
__c⁄°__
));

112 
	`__REDIRECT_NTH
 (
√xâow¨d
, (
__x
, 
__y
),

113 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

114 
	`__REDIRECT_NTH
 (
√xâow¨dl
,

115 (
__x
, 
__y
),

116 
√xè·î
Ë
	`__©åibuã__
 ((
__c⁄°__
));

120 #unde‡
__MATHDECL_1


121 
	#__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
Æüs
) \

122 
ty≥
 
	`__REDIRECT_NTH
(
	`__MATH_PRECNAME
(
fun˘i⁄
,
suffix
), \

123 
¨gs
, 
Æüs
)

	)

124 
	#__MATHDECL_1
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
) \

125 
	`__MATHDECL_2
(
ty≥
, 
fun˘i⁄
,
suffix
, 
¨gs
, 
	`__CONCAT
(fun˘i⁄,suffix))

	)

131 #i‚de‡
_Ml⁄g_doubÀ_


132 
	#_Ml⁄g_doubÀ_
 

	)

134 
	#_MdoubÀ_
 
_Ml⁄g_doubÀ_


	)

135 #ifde‡
__STDC__


136 
	#__MATH_PRECNAME
(
«me
,
r
Ë«me##
l
##
	)
r

138 
	#__MATH_PRECNAME
(
«me
,
r
Ë«mê
l
 
	)
r

140 
	#_MdoubÀ_BEGIN_NAMESPACE
 
__BEGIN_NAMESPACE_C99


	)

141 
	#_MdoubÀ_END_NAMESPACE
 
__END_NAMESPACE_C99


	)

142 
	#__MATH_DECLARE_LDOUBLE
 1

	)

143 
	~<bôs/m©hˇŒs.h
>

144 #unde‡
_MdoubÀ_


145 #unde‡
_MdoubÀ_BEGIN_NAMESPACE


146 #unde‡
_MdoubÀ_END_NAMESPACE


147 #unde‡
__MATH_PRECNAME


152 #unde‡
__MATHDECL_1


153 #unde‡
__MATHDECL


154 #unde‡
__MATHCALL


157 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


159 
signgam
;

164 #ifde‡
__USE_ISOC99


202 
FP_NAN
,

203 
	#FP_NAN
 
FP_NAN


	)

204 
FP_INFINITE
,

205 
	#FP_INFINITE
 
FP_INFINITE


	)

206 
FP_ZERO
,

207 
	#FP_ZERO
 
FP_ZERO


	)

208 
FP_SUBNORMAL
,

209 
	#FP_SUBNORMAL
 
FP_SUBNORMAL


	)

210 
FP_NORMAL


211 
	#FP_NORMAL
 
FP_NORMAL


	)

215 #ifde‡
__NO_LONG_DOUBLE_MATH


216 
	#Â˛assify
(
x
) \

217 ( (
x
Ë= (Ë? 
	`__Â˛assifyf
 (xË: 
	`__Â˛assify
 (x))

	)

219 
	#Â˛assify
(
x
) \

220 ( (
x
) ==  () \

221 ? 
	`__Â˛assifyf
 (
x
) \

222 :  (
x
) ==  () \

223 ? 
	`__Â˛assify
 (
x
Ë: 
	`__Â˛assifyl
 (x))

	)

227 #ifde‡
__NO_LONG_DOUBLE_MATH


228 
	#signbô
(
x
) \

229 ( (
x
Ë= (Ë? 
	`__signbôf
 (xË: 
	`__signbô
 (x))

	)

231 
	#signbô
(
x
) \

232 ( (
x
) ==  () \

233 ? 
	`__signbôf
 (
x
) \

234 :  (
x
) ==  () \

235 ? 
	`__signbô
 (
x
Ë: 
	`__signbôl
 (x))

	)

239 #ifde‡
__NO_LONG_DOUBLE_MATH


240 
	#isföôe
(
x
) \

241 ( (
x
Ë= (Ë? 
	`__föôef
 (xË: 
	`__föôe
 (x))

	)

243 
	#isföôe
(
x
) \

244 ( (
x
) ==  () \

245 ? 
	`__föôef
 (
x
) \

246 :  (
x
) ==  () \

247 ? 
	`__föôe
 (
x
Ë: 
	`__föôñ
 (x))

	)

251 
	#i¢‹mÆ
(
x
Ë(
	`Â˛assify
 (xË=
FP_NORMAL
)

	)

255 #ifde‡
__NO_LONG_DOUBLE_MATH


256 
	#i¢™
(
x
) \

257 ( (
x
Ë= (Ë? 
	`__i¢™f
 (xË: 
	`__i¢™
 (x))

	)

259 
	#i¢™
(
x
) \

260 ( (
x
) ==  () \

261 ? 
	`__i¢™f
 (
x
) \

262 :  (
x
) ==  () \

263 ? 
	`__i¢™
 (
x
Ë: 
	`__i¢™l
 (x))

	)

267 #ifde‡
__NO_LONG_DOUBLE_MATH


268 
	#isöf
(
x
) \

269 ( (
x
Ë= (Ë? 
	`__isöff
 (xË: 
	`__isöf
 (x))

	)

271 
	#isöf
(
x
) \

272 ( (
x
) ==  () \

273 ? 
	`__isöff
 (
x
) \

274 :  (
x
) ==  () \

275 ? 
	`__isöf
 (
x
Ë: 
	`__isöÊ
 (x))

	)

279 
	#MATH_ERRNO
 1

	)

280 
	#MATH_ERREXCEPT
 2

	)

285 #i‚de‡
__FAST_MATH__


286 
	#m©h_îrh™dlög
 (
MATH_ERRNO
 | 
MATH_ERREXCEPT
)

	)

291 #ifdef 
__USE_MISC


295 
_IEEE_
 = -1,

296 
_SVID_
,

297 
_XOPEN_
,

298 
_POSIX_
,

299 
_ISOC_


300 } 
	t_LIB_VERSION_TYPE
;

305 
_LIB_VERSION_TYPE
 
_LIB_VERSION
;

309 #ifde‡
__USE_SVID


315 #ifde‡
__˝lu•lus


316 
__ex˚±i⁄


318 
ex˚±i⁄


321 
ty≥
;

322 *
«me
;

323 
¨g1
;

324 
¨g2
;

325 
ªtvÆ
;

326 
	}
};

328 #ifde‡
__˝lu•lus


329 
	$m©hîr
 (
__ex˚±i⁄
 *
__exc
Ë
	`throw
 ();

331 
	`m©hîr
 (
ex˚±i⁄
 *
__exc
);

334 
	#X_TLOSS
 1.41484755040568800000e+16

	)

337 
	#DOMAIN
 1

	)

338 
	#SING
 2

	)

339 
	#OVERFLOW
 3

	)

340 
	#UNDERFLOW
 4

	)

341 
	#TLOSS
 5

	)

342 
	#PLOSS
 6

	)

345 
	#HUGE
 3.40282347e+38F

	)

349 #ifde‡
__USE_XOPEN


351 
	#MAXFLOAT
 3.40282347e+38F

	)

358 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


359 
	#M_E
 2.7182818284590452354

	)

360 
	#M_LOG2E
 1.4426950408889634074

	)

361 
	#M_LOG10E
 0.43429448190325182765

	)

362 
	#M_LN2
 0.69314718055994530942

	)

363 
	#M_LN10
 2.30258509299404568402

	)

364 
	#M_PI
 3.14159265358979323846

	)

365 
	#M_PI_2
 1.57079632679489661923

	)

366 
	#M_PI_4
 0.78539816339744830962

	)

367 
	#M_1_PI
 0.31830988618379067154

	)

368 
	#M_2_PI
 0.63661977236758134308

	)

369 
	#M_2_SQRTPI
 1.12837916709551257390

	)

370 
	#M_SQRT2
 1.41421356237309504880

	)

371 
	#M_SQRT1_2
 0.70710678118654752440

	)

377 #ifde‡
__USE_GNU


378 
	#M_El
 2.7182818284590452353602874713526625L

	)

379 
	#M_LOG2El
 1.4426950408889634073599246810018921L

	)

380 
	#M_LOG10El
 0.4342944819032518276511289189166051L

	)

381 
	#M_LN2l
 0.6931471805599453094172321214581766L

	)

382 
	#M_LN10l
 2.3025850929940456840179914546843642L

	)

383 
	#M_PIl
 3.1415926535897932384626433832795029L

	)

384 
	#M_PI_2l
 1.5707963267948966192313216916397514L

	)

385 
	#M_PI_4l
 0.7853981633974483096156608458198757L

	)

386 
	#M_1_PIl
 0.3183098861837906715377675267450287L

	)

387 
	#M_2_PIl
 0.6366197723675813430755350534900574L

	)

388 
	#M_2_SQRTPIl
 1.1283791670955125738961589031215452L

	)

389 
	#M_SQRT2l
 1.4142135623730950488016887242096981L

	)

390 
	#M_SQRT1_2l
 0.7071067811865475244008443621048490L

	)

397 #i‡
deföed
 
__STRICT_ANSI__
 && !deföed 
__NO_MATH_INLINES


398 
	#__NO_MATH_INLINES
 1

	)

401 #i‡
deföed
 
__USE_ISOC99
 && 
	`__GNUC_PREREQ
(2,97)

408 
	#isgª©î
(
x
, 
y
Ë
	`__buûtö_isgª©î
(x, y)

	)

409 
	#isgª©îequÆ
(
x
, 
y
Ë
	`__buûtö_isgª©îequÆ
(x, y)

	)

410 
	#i¶ess
(
x
, 
y
Ë
	`__buûtö_i¶ess
(x, y)

	)

411 
	#i¶es£quÆ
(
x
, 
y
Ë
	`__buûtö_i¶es£quÆ
(x, y)

	)

412 
	#i¶essgª©î
(
x
, 
y
Ë
	`__buûtö_i¶essgª©î
(x, y)

	)

413 
	#isun‹dîed
(
u
, 
v
Ë
	`__buûtö_isun‹dîed
(u, v)

	)

417 #ifde‡
__USE_EXTERN_INLINES


418 
	~<bôs/m©hölöe.h
>

423 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0

424 
	~<bôs/m©h-föôe.h
>

427 #ifde‡
__USE_ISOC99


431 #i‚de‡
isgª©î


432 
	#isgª©î
(
x
, 
y
) \

433 (
__exãnsi⁄__
 \

434 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

435 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x > __y; 
	}
}))

	)

439 #i‚de‡
isgª©îequÆ


440 
	#isgª©îequÆ
(
x
, 
y
) \

441 (
__exãnsi⁄__
 \

442 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

443 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x >__y; }))

	)

447 #i‚de‡
i¶ess


448 
	#i¶ess
(
x
, 
y
) \

449 (
__exãnsi⁄__
 \

450 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

451 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x < __y; }))

	)

455 #i‚de‡
i¶es£quÆ


456 
	#i¶es£quÆ
(
x
, 
y
) \

457 (
__exãnsi⁄__
 \

458 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

459 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& __x <__y; }))

	)

463 #i‚de‡
i¶essgª©î


464 
	#i¶essgª©î
(
x
, 
y
) \

465 (
__exãnsi⁄__
 \

466 ({ 
	`__ty≥of__
(
x
Ë
__x
 = (x); __ty≥of__(
y
Ë
__y
 = (y); \

467 !
	`isun‹dîed
 (
__x
, 
__y
Ë&& (__x < __y || __y < __x); }))

	)

471 #i‚de‡
isun‹dîed


472 
	#isun‹dîed
(
u
, 
v
) \

473 (
__exãnsi⁄__
 \

474 ({ 
	`__ty≥of__
(
u
Ë
__u
 = (u); __ty≥of__(
v
Ë
__v
 = (v); \

475 
	`Â˛assify
 (
__u
Ë=
FP_NAN
 || fp˛assify (
__v
Ë=FP_NAN; }))

	)

480 
	g__END_DECLS


	@/usr/include/sched.h

21 #i‚def 
_SCHED_H


22 
	#_SCHED_H
 1

	)

24 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 
	#__√ed_size_t


	)

30 
	~<°ddef.h
>

32 
	#__√ed_time_t


	)

33 
	#__√ed_time•ec


	)

34 
	~<time.h
>

36 #i‚de‡
__pid_t_deföed


37 
__pid_t
 
	tpid_t
;

38 
	#__pid_t_deföed


	)

43 
	~<bôs/sched.h
>

45 
	#sched_¥i‹ôy
 
__sched_¥i‹ôy


	)

48 
__BEGIN_DECLS


51 
	$sched_£ç¨am
 (
__pid_t
 
__pid
, 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

52 
__THROW
;

55 
	$sched_gë∑øm
 (
__pid_t
 
__pid
, 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

58 
	$sched_£tscheduÀr
 (
__pid_t
 
__pid
, 
__pﬁicy
,

59 
__c⁄°
 
sched_∑øm
 *
__∑øm
Ë
__THROW
;

62 
	$sched_gëscheduÀr
 (
__pid_t
 
__pid
Ë
__THROW
;

65 
	$sched_yõld
 (Ë
__THROW
;

68 
	$sched_gë_¥i‹ôy_max
 (
__Æg‹ôhm
Ë
__THROW
;

71 
	$sched_gë_¥i‹ôy_mö
 (
__Æg‹ôhm
Ë
__THROW
;

74 
	$sched_º_gë_öãrvÆ
 (
__pid_t
 
__pid
, 
time•ec
 *
__t
Ë
__THROW
;

77 #ifde‡
__USE_GNU


79 
	#CPU_SETSIZE
 
__CPU_SETSIZE


	)

80 
	#CPU_SET
(
˝u
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

81 
	#CPU_CLR
(
˝u
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u,  (
˝u_£t_t
), cpu£ç)

	)

82 
	#CPU_ISSET
(
˝u
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (˝u,  (
˝u_£t_t
), \

83 
˝u£ç
)

	)

84 
	#CPU_ZERO
(
˝u£ç
Ë
	`__CPU_ZERO_S
 ( (
˝u_£t_t
), cpu£ç)

	)

85 
	#CPU_COUNT
(
˝u£ç
Ë
	`__CPU_COUNT_S
 ( (
˝u_£t_t
), cpu£ç)

	)

87 
	#CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_SET_S
 (˝u, sësize, cpu£ç)

	)

88 
	#CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_CLR_S
 (˝u, sësize, cpu£ç)

	)

89 
	#CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
Ë
	`__CPU_ISSET_S
 (cpu, setsize, \

90 
˝u£ç
)

	)

91 
	#CPU_ZERO_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_ZERO_S
 (£tsize, cpu£ç)

	)

92 
	#CPU_COUNT_S
(
£tsize
, 
˝u£ç
Ë
	`__CPU_COUNT_S
 (£tsize, cpu£ç)

	)

94 
	#CPU_EQUAL
(
˝u£ç1
, 
˝u£ç2
) \

95 
	`__CPU_EQUAL_S
 ( (
˝u_£t_t
), 
˝u£ç1
, 
˝u£ç2
)

	)

96 
	#CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

97 
	`__CPU_EQUAL_S
 (
£tsize
, 
˝u£ç1
, 
˝u£ç2
)

	)

99 
	#CPU_AND
(
de°£t
, 
§c£t1
, 
§c£t2
) \

100 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

101 
	#CPU_OR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

102 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

103 
	#CPU_XOR
(
de°£t
, 
§c£t1
, 
§c£t2
) \

104 
	`__CPU_OP_S
 ( (
˝u_£t_t
), 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

105 
	#CPU_AND_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

106 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, &)

	)

107 
	#CPU_OR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

108 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, |)

	)

109 
	#CPU_XOR_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
) \

110 
	`__CPU_OP_S
 (
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, ^)

	)

112 
	#CPU_ALLOC_SIZE
(
cou¡
Ë
	`__CPU_ALLOC_SIZE
 (cou¡)

	)

113 
	#CPU_ALLOC
(
cou¡
Ë
	`__CPU_ALLOC
 (cou¡)

	)

114 
	#CPU_FREE
(
˝u£t
Ë
	`__CPU_FREE
 (˝u£t)

	)

118 
	$sched_£èfföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

119 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

122 
	$sched_gëafföôy
 (
__pid_t
 
__pid
, 
size_t
 
__˝u£tsize
,

123 
˝u_£t_t
 *
__˝u£t
Ë
__THROW
;

126 
__END_DECLS


	@/usr/include/stdio.h

24 #i‚de‡
_STDIO_H


26 #i‡!
deföed
 
__√ed_FILE
 && !deföed 
__√ed___FILE


27 
	#_STDIO_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

36 
	~<bôs/ty≥s.h
>

37 
	#__√ed_FILE


	)

38 
	#__√ed___FILE


	)

42 #i‡!
deföed
 
__FILE_deföed
 && deföed 
__√ed_FILE


45 
	g_IO_FILE
;

47 
__BEGIN_NAMESPACE_STD


49 
_IO_FILE
 
	tFILE
;

50 
	g__END_NAMESPACE_STD


51 #i‡
deföed
 
__USE_LARGEFILE64
 || deföed 
__USE_SVID
 || deföed 
__USE_POSIX
 \

52 || 
deföed
 
	g__USE_BSD
 || deföed 
	g__USE_ISOC99
 || deföed 
	g__USE_XOPEN
 \

53 || 
deföed
 
__USE_POSIX2


54 
	$__USING_NAMESPACE_STD
(
FILE
)

57 
	#__FILE_deföed
 1

	)

59 #unde‡
__√ed_FILE


62 #i‡!
deföed
 
____FILE_deföed
 && deföed 
__√ed___FILE


65 
_IO_FILE
 
	t__FILE
;

67 
	#____FILE_deföed
 1

	)

69 #unde‡
__√ed___FILE


72 #ifdef 
_STDIO_H


73 
	#_STDIO_USES_IOSTREAM


	)

75 
	~<libio.h
>

77 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


78 #ifde‡
__GNUC__


79 #i‚de‡
_VA_LIST_DEFINED


80 
_G_va_li°
 
	tva_li°
;

81 
	#_VA_LIST_DEFINED


	)

84 
	~<°d¨g.h
>

88 #ifde‡
__USE_XOPEN2K8


89 #i‚de‡
__off_t_deföed


90 #i‚de‡
__USE_FILE_OFFSET64


91 
__off_t
 
	toff_t
;

93 
__off64_t
 
	toff_t
;

95 
	#__off_t_deföed


	)

97 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


98 
__off64_t
 
	toff64_t
;

99 
	#__off64_t_deföed


	)

102 #i‚de‡
__ssize_t_deföed


103 
__ssize_t
 
	tssize_t
;

104 
	#__ssize_t_deföed


	)

109 
__BEGIN_NAMESPACE_STD


110 #i‚de‡
__USE_FILE_OFFSET64


111 
_G_Âos_t
 
	tÂos_t
;

113 
_G_Âos64_t
 
	tÂos_t
;

115 
__END_NAMESPACE_STD


116 #ifde‡
__USE_LARGEFILE64


117 
_G_Âos64_t
 
	tÂos64_t
;

121 
	#_IOFBF
 0

	)

122 
	#_IOLBF
 1

	)

123 
	#_IONBF
 2

	)

127 #i‚de‡
BUFSIZ


128 
	#BUFSIZ
 
_IO_BUFSIZ


	)

134 #i‚de‡
EOF


135 
	#EOF
 (-1)

	)

141 
	#SEEK_SET
 0

	)

142 
	#SEEK_CUR
 1

	)

143 
	#SEEK_END
 2

	)

144 #ifde‡
__USE_GNU


145 
	#SEEK_DATA
 3

	)

146 
	#SEEK_HOLE
 4

	)

150 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


152 
	#P_tmpdú
 "/tmp"

	)

165 
	~<bôs/°dio_lim.h
>

169 
_IO_FILE
 *
°dö
;

170 
_IO_FILE
 *
°dout
;

171 
_IO_FILE
 *
°dîr
;

172 #ifde‡
__STDC__


174 
	#°dö
 
°dö


	)

175 
	#°dout
 
°dout


	)

176 
	#°dîr
 
°dîr


	)

179 
__BEGIN_NAMESPACE_STD


181 
	$ªmove
 (
__c⁄°
 *
__fûíame
Ë
__THROW
;

183 
	$ª«me
 (
__c⁄°
 *
__ﬁd
, __c⁄° *
__√w
Ë
__THROW
;

184 
__END_NAMESPACE_STD


186 #ifde‡
__USE_ATFILE


188 
	$ª«mót
 (
__ﬁdfd
, 
__c⁄°
 *
__ﬁd
, 
__√wfd
,

189 
__c⁄°
 *
__√w
Ë
__THROW
;

192 
__BEGIN_NAMESPACE_STD


197 #i‚de‡
__USE_FILE_OFFSET64


198 
FILE
 *
	$tmpfûe
 (Ë
__wur
;

200 #ifde‡
__REDIRECT


201 
FILE
 *
	`__REDIRECT
 (
tmpfûe
, (), 
tmpfûe64
Ë
__wur
;

203 
	#tmpfûe
 
tmpfûe64


	)

207 #ifde‡
__USE_LARGEFILE64


208 
FILE
 *
	$tmpfûe64
 (Ë
__wur
;

212 *
	$tm≤am
 (*
__s
Ë
__THROW
 
__wur
;

213 
__END_NAMESPACE_STD


215 #ifde‡
__USE_MISC


218 *
	$tm≤am_r
 (*
__s
Ë
__THROW
 
__wur
;

222 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


230 *
	$ãm≤am
 (
__c⁄°
 *
__dú
, __c⁄° *
__pfx
)

231 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

235 
__BEGIN_NAMESPACE_STD


240 
	`f˛o£
 (
FILE
 *
__°ªam
);

245 
	`fÊush
 (
FILE
 *
__°ªam
);

246 
__END_NAMESPACE_STD


248 #ifde‡
__USE_MISC


255 
	`fÊush_u∆ocked
 (
FILE
 *
__°ªam
);

258 #ifde‡
__USE_GNU


265 
	`f˛o£Æl
 ();

269 
__BEGIN_NAMESPACE_STD


270 #i‚de‡
__USE_FILE_OFFSET64


275 
FILE
 *
	$f›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

276 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

281 
FILE
 *
	$‰e›í
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

282 
__c⁄°
 *
__ª°ri˘
 
__modes
,

283 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

285 #ifde‡
__REDIRECT


286 
FILE
 *
	`__REDIRECT
 (
f›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

287 
__c⁄°
 *
__ª°ri˘
 
__modes
), 
f›í64
)

288 
__wur
;

289 
FILE
 *
	`__REDIRECT
 (
‰e›í
, (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

290 
__c⁄°
 *
__ª°ri˘
 
__modes
,

291 
FILE
 *
__ª°ri˘
 
__°ªam
), 
‰e›í64
)

292 
__wur
;

294 
	#f›í
 
f›í64


	)

295 
	#‰e›í
 
‰e›í64


	)

298 
__END_NAMESPACE_STD


299 #ifde‡
__USE_LARGEFILE64


300 
FILE
 *
	$f›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

301 
__c⁄°
 *
__ª°ri˘
 
__modes
Ë
__wur
;

302 
FILE
 *
	$‰e›í64
 (
__c⁄°
 *
__ª°ri˘
 
__fûíame
,

303 
__c⁄°
 *
__ª°ri˘
 
__modes
,

304 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

307 #ifdef 
__USE_POSIX


309 
FILE
 *
	$fd›í
 (
__fd
, 
__c⁄°
 *
__modes
Ë
__THROW
 
__wur
;

312 #ifdef 
__USE_GNU


315 
FILE
 *
	$f›ícookõ
 (*
__ª°ri˘
 
__magic_cookõ
,

316 
__c⁄°
 *
__ª°ri˘
 
__modes
,

317 
_IO_cookõ_io_fun˘i⁄s_t
 
__io_funcs
Ë
__THROW
 
__wur
;

320 #ifde‡
__USE_XOPEN2K8


322 
FILE
 *
	$fmem›í
 (*
__s
, 
size_t
 
__Àn
, 
__c⁄°
 *
__modes
)

323 
__THROW
 
__wur
;

328 
FILE
 *
	$›í_mem°ªam
 (**
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
 
__wur
;

332 
__BEGIN_NAMESPACE_STD


335 
	$£tbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
Ë
__THROW
;

339 
	$£tvbuf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

340 
__modes
, 
size_t
 
__n
Ë
__THROW
;

341 
__END_NAMESPACE_STD


343 #ifdef 
__USE_BSD


346 
	$£tbuf„r
 (
FILE
 *
__ª°ri˘
 
__°ªam
, *__ª°ri˘ 
__buf
,

347 
size_t
 
__size
Ë
__THROW
;

350 
	$£éöebuf
 (
FILE
 *
__°ªam
Ë
__THROW
;

354 
__BEGIN_NAMESPACE_STD


359 
	`Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

360 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

365 
	`¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

367 
	$•rötf
 (*
__ª°ri˘
 
__s
,

368 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROWNL
;

374 
	`vÂrötf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

375 
_G_va_li°
 
__¨g
);

380 
	`v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
);

382 
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

383 
_G_va_li°
 
__¨g
Ë
__THROWNL
;

384 
__END_NAMESPACE_STD


386 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


387 
__BEGIN_NAMESPACE_C99


389 
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

390 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

391 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

393 
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxÀn
,

394 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

395 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

396 
__END_NAMESPACE_C99


399 #ifde‡
__USE_GNU


402 
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__f
,

403 
_G_va_li°
 
__¨g
)

404 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 0))Ë
__wur
;

405 
	$__a•rötf
 (**
__ª°ri˘
 
__±r
,

406 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

407 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

408 
	$a•rötf
 (**
__ª°ri˘
 
__±r
,

409 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

410 
__THROWNL
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 2, 3))Ë
__wur
;

413 #ifde‡
__USE_XOPEN2K8


420 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

421 
_G_va_li°
 
__¨g
)

422 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

423 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

424 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

428 
__BEGIN_NAMESPACE_STD


433 
	$fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

434 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

439 
	$sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

441 
	$ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

442 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

444 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

445 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

446 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

447 #ifde‡
__REDIRECT


451 
	`__REDIRECT
 (
fsˇnf
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

452 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

453 
__isoc99_fsˇnf
Ë
__wur
;

454 
	`__REDIRECT
 (
sˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

455 
__isoc99_sˇnf
Ë
__wur
;

456 
	`__REDIRECT_NTH
 (
ssˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__s
,

457 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...),

458 
__isoc99_ssˇnf
);

460 
	$__isoc99_fsˇnf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

461 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

462 
	$__isoc99_sˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__wur
;

463 
	$__isoc99_ssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

464 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

465 
	#fsˇnf
 
__isoc99_fsˇnf


	)

466 
	#sˇnf
 
__isoc99_sˇnf


	)

467 
	#ssˇnf
 
__isoc99_ssˇnf


	)

471 
__END_NAMESPACE_STD


473 #ifdef 
__USE_ISOC99


474 
__BEGIN_NAMESPACE_C99


479 
	$vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__f‹m©
,

480 
_G_va_li°
 
__¨g
)

481 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

487 
	$vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

488 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

491 
	$vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

492 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
)

493 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

495 #i‡!
deföed
 
__USE_GNU
 \

496 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

497 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

498 #ifde‡
__REDIRECT


502 
	`__REDIRECT
 (
vfsˇnf
,

503 (
FILE
 *
__ª°ri˘
 
__s
,

504 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__¨g
),

505 
__isoc99_vfsˇnf
)

506 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 2, 0))Ë
__wur
;

507 
	`__REDIRECT
 (
vsˇnf
, (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

508 
_G_va_li°
 
__¨g
), 
__isoc99_vsˇnf
)

509 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__sˇnf__
, 1, 0))Ë
__wur
;

510 
	`__REDIRECT_NTH
 (
vssˇnf
,

511 (
__c⁄°
 *
__ª°ri˘
 
__s
,

512 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

513 
_G_va_li°
 
__¨g
), 
__isoc99_vssˇnf
)

514 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__sˇnf__
, 2, 0)));

516 
	$__isoc99_vfsˇnf
 (
FILE
 *
__ª°ri˘
 
__s
,

517 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

518 
_G_va_li°
 
__¨g
Ë
__wur
;

519 
	$__isoc99_vsˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

520 
_G_va_li°
 
__¨g
Ë
__wur
;

521 
	$__isoc99_vssˇnf
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

522 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

523 
_G_va_li°
 
__¨g
Ë
__THROW
;

524 
	#vfsˇnf
 
__isoc99_vfsˇnf


	)

525 
	#vsˇnf
 
__isoc99_vsˇnf


	)

526 
	#vssˇnf
 
__isoc99_vssˇnf


	)

530 
__END_NAMESPACE_C99


534 
__BEGIN_NAMESPACE_STD


539 
	`fgëc
 (
FILE
 *
__°ªam
);

540 
	`gëc
 (
FILE
 *
__°ªam
);

546 
	`gëch¨
 ();

547 
__END_NAMESPACE_STD


551 
	#gëc
(
_Â
Ë
	`_IO_gëc
 (_Â)

	)

553 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


558 
	`gëc_u∆ocked
 (
FILE
 *
__°ªam
);

559 
	`gëch¨_u∆ocked
 ();

562 #ifde‡
__USE_MISC


569 
	`fgëc_u∆ocked
 (
FILE
 *
__°ªam
);

573 
__BEGIN_NAMESPACE_STD


581 
	`Âutc
 (
__c
, 
FILE
 *
__°ªam
);

582 
	`putc
 (
__c
, 
FILE
 *
__°ªam
);

588 
	`putch¨
 (
__c
);

589 
__END_NAMESPACE_STD


593 
	#putc
(
_ch
, 
_Â
Ë
	`_IO_putc
 (_ch, _Â)

	)

595 #ifde‡
__USE_MISC


602 
	`Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

605 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


610 
	`putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
);

611 
	`putch¨_u∆ocked
 (
__c
);

615 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 \

616 || (
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

618 
	`gëw
 (
FILE
 *
__°ªam
);

621 
	`putw
 (
__w
, 
FILE
 *
__°ªam
);

625 
__BEGIN_NAMESPACE_STD


630 *
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

631 
__wur
;

638 *
	$gës
 (*
__s
Ë
__wur
;

639 
__END_NAMESPACE_STD


641 #ifde‡
__USE_GNU


648 *
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
,

649 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

653 #ifdef 
__USE_XOPEN2K8


664 
_IO_ssize_t
 
	$__gëdñim
 (**
__ª°ri˘
 
__löïå
,

665 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

666 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

667 
_IO_ssize_t
 
	$gëdñim
 (**
__ª°ri˘
 
__löïå
,

668 
size_t
 *
__ª°ri˘
 
__n
, 
__dñimôî
,

669 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

677 
_IO_ssize_t
 
	$gëlöe
 (**
__ª°ri˘
 
__löïå
,

678 
size_t
 *
__ª°ri˘
 
__n
,

679 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

683 
__BEGIN_NAMESPACE_STD


688 
	`Âuts
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
FILE
 *__ª°ri˘ 
__°ªam
);

694 
	`puts
 (
__c⁄°
 *
__s
);

701 
	`ungëc
 (
__c
, 
FILE
 *
__°ªam
);

708 
size_t
 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

709 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

714 
size_t
 
	$fwrôe
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

715 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__s
Ë
__wur
;

716 
__END_NAMESPACE_STD


718 #ifde‡
__USE_GNU


725 
	`Âuts_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

726 
FILE
 *
__ª°ri˘
 
__°ªam
);

729 #ifde‡
__USE_MISC


736 
size_t
 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

737 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

738 
size_t
 
	$fwrôe_u∆ocked
 (
__c⁄°
 *
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

739 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

743 
__BEGIN_NAMESPACE_STD


748 
	`f£ek
 (
FILE
 *
__°ªam
, 
__off
, 
__whí˚
);

753 
	$·ñl
 (
FILE
 *
__°ªam
Ë
__wur
;

758 
	`ªwöd
 (
FILE
 *
__°ªam
);

759 
__END_NAMESPACE_STD


766 #i‡
deföed
 
__USE_LARGEFILE
 || deföed 
__USE_XOPEN2K


767 #i‚de‡
__USE_FILE_OFFSET64


772 
	`f£eko
 (
FILE
 *
__°ªam
, 
__off_t
 
__off
, 
__whí˚
);

777 
__off_t
 
	$·ñlo
 (
FILE
 *
__°ªam
Ë
__wur
;

779 #ifde‡
__REDIRECT


780 
	`__REDIRECT
 (
f£eko
,

781 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
),

782 
f£eko64
);

783 
__off64_t
 
	`__REDIRECT
 (
·ñlo
, (
FILE
 *
__°ªam
), 
·ñlo64
);

785 
	#f£eko
 
f£eko64


	)

786 
	#·ñlo
 
·ñlo64


	)

791 
__BEGIN_NAMESPACE_STD


792 #i‚de‡
__USE_FILE_OFFSET64


797 
	`fgëpos
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos_t
 *__ª°ri˘ 
__pos
);

802 
	`f£ços
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
);

804 #ifde‡
__REDIRECT


805 
	`__REDIRECT
 (
fgëpos
, (
FILE
 *
__ª°ri˘
 
__°ªam
,

806 
Âos_t
 *
__ª°ri˘
 
__pos
), 
fgëpos64
);

807 
	`__REDIRECT
 (
f£ços
,

808 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos_t
 *
__pos
), 
f£ços64
);

810 
	#fgëpos
 
fgëpos64


	)

811 
	#f£ços
 
f£ços64


	)

814 
__END_NAMESPACE_STD


816 #ifde‡
__USE_LARGEFILE64


817 
	`f£eko64
 (
FILE
 *
__°ªam
, 
__off64_t
 
__off
, 
__whí˚
);

818 
__off64_t
 
	$·ñlo64
 (
FILE
 *
__°ªam
Ë
__wur
;

819 
	`fgëpos64
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
Âos64_t
 *__ª°ri˘ 
__pos
);

820 
	`f£ços64
 (
FILE
 *
__°ªam
, 
__c⁄°
 
Âos64_t
 *
__pos
);

823 
__BEGIN_NAMESPACE_STD


825 
	$˛óªº
 (
FILE
 *
__°ªam
Ë
__THROW
;

827 
	$„of
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

829 
	$„º‹
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

830 
__END_NAMESPACE_STD


832 #ifde‡
__USE_MISC


834 
	$˛óªº_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
;

835 
	$„of_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

836 
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

840 
__BEGIN_NAMESPACE_STD


845 
	`≥º‹
 (
__c⁄°
 *
__s
);

846 
__END_NAMESPACE_STD


852 
	~<bôs/sys_îæi°.h
>

855 #ifdef 
__USE_POSIX


857 
	$fûío
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

860 #ifde‡
__USE_MISC


862 
	$fûío_u∆ocked
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

866 #i‡(
deföed
 
__USE_POSIX2
 || deföed 
__USE_SVID
 || deföed 
__USE_BSD
 || \

867 
deföed
 
__USE_MISC
)

872 
FILE
 *
	$p›í
 (
__c⁄°
 *
__comm™d
, __c⁄° *
__modes
Ë
__wur
;

878 
	`p˛o£
 (
FILE
 *
__°ªam
);

882 #ifdef 
__USE_POSIX


884 *
	$˘îmid
 (*
__s
Ë
__THROW
;

888 #ifde‡
__USE_XOPEN


890 *
	`cu£rid
 (*
__s
);

894 #ifdef 
__USE_GNU


895 
ob°ack
;

898 
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

899 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...)

900 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 3)));

901 
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

902 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

903 
_G_va_li°
 
__¨gs
)

904 
__THROWNL
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 2, 0)));

908 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


912 
	$Êockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

916 
	$·rylockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
 
__wur
;

919 
	$fu∆ockfûe
 (
FILE
 *
__°ªam
Ë
__THROW
;

922 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


926 
	#__√ed_gë›t


	)

927 
	~<gë›t.h
>

932 #ifde‡
__USE_EXTERN_INLINES


933 
	~<bôs/°dio.h
>

935 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


936 
	~<bôs/°dio2.h
>

938 #ifde‡
__LDBL_COMPAT


939 
	~<bôs/°dio-ldbl.h
>

942 
__END_DECLS


	@/usr/include/stdlib.h

23 #i‚def 
_STDLIB_H


25 
	~<„©uªs.h
>

28 
	#__√ed_size_t


	)

29 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


30 
	#__√ed_wch¨_t


	)

31 
	#__√ed_NULL


	)

33 
	~<°ddef.h
>

35 
	g__BEGIN_DECLS


37 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


38 
	#_STDLIB_H
 1

	)

40 #i‡(
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
Ë&& !deföed 
_SYS_WAIT_H


42 
	~<bôs/waôÊags.h
>

43 
	~<bôs/waô°©us.h
>

45 #ifde‡
__USE_BSD


50 #i‡
deföed
 
__GNUC__
 && !deföed 
__˝lu•lus


51 
	#__WAIT_INT
(
°©us
) \

52 (
	`__exãnsi⁄__
 (((uni⁄ { 
	`__ty≥of
(
°©us
Ë
__ö
; 
__i
; }) \

53 { .
__ö
 = (
°©us
Ë}).
__i
))

	)

55 
	#__WAIT_INT
(
°©us
Ë(*(*Ë&(°©us))

	)

63 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2 || deföed 
__˝lu•lus


64 
	#__WAIT_STATUS
 *

	)

65 
	#__WAIT_STATUS_DEFN
 *

	)

70 
waô
 *
	m__u±r
;

71 *
	m__ùå
;

72 } 
	t__WAIT_STATUS
 
	t__©åibuã__
 ((
	t__å™•¨ít_uni⁄__
));

73 
	#__WAIT_STATUS_DEFN
 *

	)

78 
	#__WAIT_INT
(
°©us
Ë(°©us)

	)

79 
	#__WAIT_STATUS
 *

	)

80 
	#__WAIT_STATUS_DEFN
 *

	)

85 
	#WEXITSTATUS
(
°©us
Ë
	`__WEXITSTATUS
 (
	`__WAIT_INT
 (°©us))

	)

86 
	#WTERMSIG
(
°©us
Ë
	`__WTERMSIG
 (
	`__WAIT_INT
 (°©us))

	)

87 
	#WSTOPSIG
(
°©us
Ë
	`__WSTOPSIG
 (
	`__WAIT_INT
 (°©us))

	)

88 
	#WIFEXITED
(
°©us
Ë
	`__WIFEXITED
 (
	`__WAIT_INT
 (°©us))

	)

89 
	#WIFSIGNALED
(
°©us
Ë
	`__WIFSIGNALED
 (
	`__WAIT_INT
 (°©us))

	)

90 
	#WIFSTOPPED
(
°©us
Ë
	`__WIFSTOPPED
 (
	`__WAIT_INT
 (°©us))

	)

91 #ifde‡
__WIFCONTINUED


92 
	#WIFCONTINUED
(
°©us
Ë
	`__WIFCONTINUED
 (
	`__WAIT_INT
 (°©us))

	)

96 
__BEGIN_NAMESPACE_STD


100 
	mquŸ
;

101 
	mªm
;

102 } 
	tdiv_t
;

105 #i‚de‡
__ldiv_t_deföed


108 
	mquŸ
;

109 
	mªm
;

110 } 
	tldiv_t
;

111 
	#__ldiv_t_deföed
 1

	)

113 
	g__END_NAMESPACE_STD


115 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__Œdiv_t_deföed


116 
__BEGIN_NAMESPACE_C99


118 
__exãnsi⁄__
 struct

120 
	mquŸ
;

121 
	mªm
;

122 } 
	tŒdiv_t
;

123 
	#__Œdiv_t_deföed
 1

	)

124 
	g__END_NAMESPACE_C99


129 
	#RAND_MAX
 2147483647

	)

134 
	#EXIT_FAILURE
 1

	)

135 
	#EXIT_SUCCESS
 0

	)

139 
	#MB_CUR_MAX
 (
	`__˘y≥_gë_mb_cur_max
 ())

	)

140 
size_t
 
	$__˘y≥_gë_mb_cur_max
 (Ë
__THROW
 
__wur
;

143 
__BEGIN_NAMESPACE_STD


145 
	$©of
 (
__c⁄°
 *
__≈å
)

146 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

148 
	$©oi
 (
__c⁄°
 *
__≈å
)

149 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

151 
	$©ﬁ
 (
__c⁄°
 *
__≈å
)

152 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

153 
__END_NAMESPACE_STD


155 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

156 
__BEGIN_NAMESPACE_C99


158 
__exãnsi⁄__
 
	$©ﬁl
 (
__c⁄°
 *
__≈å
)

159 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

160 
__END_NAMESPACE_C99


163 
__BEGIN_NAMESPACE_STD


165 
	$°πod
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

166 **
__ª°ri˘
 
__íd±r
)

167 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

168 
__END_NAMESPACE_STD


170 #ifdef 
__USE_ISOC99


171 
__BEGIN_NAMESPACE_C99


173 
	$°πof
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

174 **
__ª°ri˘
 
__íd±r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

176 
	$°πﬁd
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

177 **
__ª°ri˘
 
__íd±r
)

178 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

179 
__END_NAMESPACE_C99


182 
__BEGIN_NAMESPACE_STD


184 
	$°πﬁ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

185 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

186 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

188 
	$°πoul
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

189 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

190 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

191 
__END_NAMESPACE_STD


193 #i‡
deföed
 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_BSD


195 
__exãnsi⁄__


196 
	$°πoq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

197 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

198 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

200 
__exãnsi⁄__


201 
	$°πouq
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

202 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

203 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

206 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GLIBC_HAVE_LONG_LONG
 && deföed 
__USE_MISC
)

207 
__BEGIN_NAMESPACE_C99


209 
__exãnsi⁄__


210 
	$°πﬁl
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

211 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

212 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

214 
__exãnsi⁄__


215 
	$°πouŒ
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

216 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

217 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

218 
__END_NAMESPACE_C99


222 #ifde‡
__USE_GNU


236 
	~<xloˇÀ.h
>

240 
	$°πﬁ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

241 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

242 
__loˇÀ_t
 
__loc
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

244 
	$°πoul_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

245 **
__ª°ri˘
 
__íd±r
,

246 
__ba£
, 
__loˇÀ_t
 
__loc
)

247 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

249 
__exãnsi⁄__


250 
	$°πﬁl_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

251 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

252 
__loˇÀ_t
 
__loc
)

253 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

255 
__exãnsi⁄__


256 
	$°πouŒ_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

257 **
__ª°ri˘
 
__íd±r
,

258 
__ba£
, 
__loˇÀ_t
 
__loc
)

259 
__THROW
 
	`__n⁄nuŒ
 ((1, 4)Ë
__wur
;

261 
	$°πod_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

262 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

263 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

265 
	$°πof_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

266 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

267 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

269 
	$°πﬁd_l
 (
__c⁄°
 *
__ª°ri˘
 
__≈å
,

270 **
__ª°ri˘
 
__íd±r
,

271 
__loˇÀ_t
 
__loc
)

272 
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

276 #ifde‡
__USE_EXTERN_INLINES


277 
__BEGIN_NAMESPACE_STD


278 
__exã∫_ölöe
 

279 
	`__NTH
 (
	$©of
 (
__c⁄°
 *
__≈å
))

281  
	`°πod
 (
__≈å
, (**Ë
NULL
);

282 
	}
}

283 
__exã∫_ölöe
 

284 
__NTH
 (
	$©oi
 (
__c⁄°
 *
__≈å
))

286  (Ë
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

287 
	}
}

288 
__exã∫_ölöe
 

289 
__NTH
 (
	$©ﬁ
 (
__c⁄°
 *
__≈å
))

291  
	`°πﬁ
 (
__≈å
, (**Ë
NULL
, 10);

292 
	}
}

293 
	g__END_NAMESPACE_STD


295 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


296 
__BEGIN_NAMESPACE_C99


297 
__exãnsi⁄__
 
__exã∫_ölöe
 

298 
__NTH
 (
	$©ﬁl
 (
__c⁄°
 *
__≈å
))

300  
	`°πﬁl
 (
__≈å
, (**Ë
NULL
, 10);

301 
	}
}

302 
	g__END_NAMESPACE_C99


307 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


311 *
	$l64a
 (
__n
Ë
__THROW
 
__wur
;

314 
	$a64l
 (
__c⁄°
 *
__s
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

319 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_BSD


320 
	~<sys/ty≥s.h
>

327 
	$øndom
 (Ë
__THROW
;

330 
	$§™dom
 (
__£ed
Ë
__THROW
;

336 *
	$öô°©e
 (
__£ed
, *
__°©ebuf
,

337 
size_t
 
__°©ñí
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

341 *
	$£t°©e
 (*
__°©ebuf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

344 #ifde‡
__USE_MISC


349 
	søndom_d©a


351 
öt32_t
 *
Âå
;

352 
öt32_t
 *
Ωå
;

353 
öt32_t
 *
°©e
;

354 
ønd_ty≥
;

355 
ønd_deg
;

356 
ønd_£p
;

357 
öt32_t
 *
íd_±r
;

360 
	$øndom_r
 (
øndom_d©a
 *
__ª°ri˘
 
__buf
,

361 
öt32_t
 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

363 
	$§™dom_r
 (
__£ed
, 
øndom_d©a
 *
__buf
)

364 
__THROW
 
	`__n⁄nuŒ
 ((2));

366 
	$öô°©e_r
 (
__£ed
, *
__ª°ri˘
 
__°©ebuf
,

367 
size_t
 
__°©ñí
,

368 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

371 
	$£t°©e_r
 (*
__ª°ri˘
 
__°©ebuf
,

372 
øndom_d©a
 *
__ª°ri˘
 
__buf
)

373 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

378 
__BEGIN_NAMESPACE_STD


380 
	$ønd
 (Ë
__THROW
;

382 
	$§™d
 (
__£ed
Ë
__THROW
;

383 
__END_NAMESPACE_STD


385 #ifde‡
__USE_POSIX


387 
	$ønd_r
 (*
__£ed
Ë
__THROW
;

391 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


395 
	$dønd48
 (Ë
__THROW
;

396 
	$î™d48
 (
__xsubi
[3]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

399 
	$Ã™d48
 (Ë
__THROW
;

400 
	$ƒ™d48
 (
__xsubi
[3])

401 
__THROW
 
	`__n⁄nuŒ
 ((1));

404 
	$mønd48
 (Ë
__THROW
;

405 
	$jønd48
 (
__xsubi
[3])

406 
__THROW
 
	`__n⁄nuŒ
 ((1));

409 
	$§™d48
 (
__£edvÆ
Ë
__THROW
;

410 *
	$£ed48
 (
__£ed16v
[3])

411 
__THROW
 
	`__n⁄nuŒ
 ((1));

412 
	$lc⁄g48
 (
__∑øm
[7]Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

414 #ifde‡
__USE_MISC


418 
	sdønd48_d©a


420 
__x
[3];

421 
__ﬁd_x
[3];

422 
__c
;

423 
__öô
;

424 
__a
;

428 
	$dønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

429 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

430 
	$î™d48_r
 (
__xsubi
[3],

431 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

432 *
__ª°ri˘
 
__ªsu…
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

435 
	$Ã™d48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

436 *
__ª°ri˘
 
__ªsu…
)

437 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

438 
	$ƒ™d48_r
 (
__xsubi
[3],

439 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

440 *
__ª°ri˘
 
__ªsu…
)

441 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

444 
	$mønd48_r
 (
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

445 *
__ª°ri˘
 
__ªsu…
)

446 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

447 
	$jønd48_r
 (
__xsubi
[3],

448 
dønd48_d©a
 *
__ª°ri˘
 
__buf„r
,

449 *
__ª°ri˘
 
__ªsu…
)

450 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

453 
	$§™d48_r
 (
__£edvÆ
, 
dønd48_d©a
 *
__buf„r
)

454 
__THROW
 
	`__n⁄nuŒ
 ((2));

456 
	$£ed48_r
 (
__£ed16v
[3],

457 
dønd48_d©a
 *
__buf„r
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$lc⁄g48_r
 (
__∑øm
[7],

460 
dønd48_d©a
 *
__buf„r
)

461 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

467 #i‚de‡
__mÆloc_™d_ˇŒoc_deföed


468 
	#__mÆloc_™d_ˇŒoc_deföed


	)

469 
__BEGIN_NAMESPACE_STD


471 *
	$mÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

473 *
	$ˇŒoc
 (
size_t
 
__nmemb
, size_à
__size
)

474 
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

475 
__END_NAMESPACE_STD


478 #i‚de‡
__√ed_mÆloc_™d_ˇŒoc


479 
__BEGIN_NAMESPACE_STD


485 *
	$ªÆloc
 (*
__±r
, 
size_t
 
__size
)

486 
__THROW
 
__©åibuã_w¨n_unu£d_ªsu…__
;

488 
	$‰ì
 (*
__±r
Ë
__THROW
;

489 
__END_NAMESPACE_STD


491 #ifdef 
__USE_MISC


493 
	$c‰ì
 (*
__±r
Ë
__THROW
;

496 #i‡
deföed
 
__USE_GNU
 || deföed 
__USE_BSD
 || deföed 
__USE_MISC


497 
	~<Æloˇ.h
>

500 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

501 || 
deföed
 
__USE_BSD


503 *
	$vÆloc
 (
size_t
 
__size
Ë
__THROW
 
__©åibuã_mÆloc__
 
__wur
;

506 #ifde‡
__USE_XOPEN2K


508 
	$posix_memÆign
 (**
__mem±r
, 
size_t
 
__Æignmít
, size_à
__size
)

509 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

512 
__BEGIN_NAMESPACE_STD


514 
	$ab‹t
 (Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

518 
	`©exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

520 #ifde‡
__USE_GNU


524 #ifde‡
__˝lu•lus


525 "C++" 
	`©_quick_exô
 ((*
__func
) ())

526 
__THROW
 
	`__asm
 ("©_quick_exô"Ë
	`__n⁄nuŒ
 ((1));

528 
	`©_quick_exô
 ((*
__func
Ë()Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

531 
__END_NAMESPACE_STD


533 #ifdef 
__USE_MISC


536 
	`⁄_exô
 ((*
__func
Ë(
__°©us
, *
__¨g
), *__arg)

537 
__THROW
 
	`__n⁄nuŒ
 ((1));

540 
__BEGIN_NAMESPACE_STD


544 
	$exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

546 #ifde‡
__USE_GNU


552 
	$quick_exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

554 
__END_NAMESPACE_STD


556 #ifde‡
__USE_ISOC99


557 
__BEGIN_NAMESPACE_C99


560 
	$_Exô
 (
__°©us
Ë
__THROW
 
	`__©åibuã__
 ((
__n‹ëu∫__
));

561 
__END_NAMESPACE_C99


565 
__BEGIN_NAMESPACE_STD


567 *
	$gëív
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

568 
__END_NAMESPACE_STD


572 *
	$__£cuª_gëív
 (
__c⁄°
 *
__«me
)

573 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

575 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


579 
	$puãnv
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

582 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


585 
	$£ãnv
 (
__c⁄°
 *
__«me
, __c⁄° *
__vÆue
, 
__ª∂a˚
)

586 
__THROW
 
	`__n⁄nuŒ
 ((2));

589 
	$un£ãnv
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

592 #ifdef 
__USE_MISC


596 
	$˛óªnv
 (Ë
__THROW
;

600 #i‡
deföed
 
__USE_MISC
 \

601 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
)

606 *
	$mkãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

609 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 \

610 || 
deföed
 
__USE_XOPEN2K8


619 #i‚de‡
__USE_FILE_OFFSET64


620 
	$mk°emp
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

622 #ifde‡
__REDIRECT


623 
	`__REDIRECT
 (
mk°emp
, (*
__ãm∂©e
), 
mk°emp64
)

624 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

626 
	#mk°emp
 
mk°emp64


	)

629 #ifde‡
__USE_LARGEFILE64


630 
	$mk°emp64
 (*
__ãm∂©e
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

634 #ifde‡
__USE_MISC


641 #i‚de‡
__USE_FILE_OFFSET64


642 
	$mk°emps
 (*
__ãm∂©e
, 
__suffixÀn
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

644 #ifde‡
__REDIRECT


645 
	`__REDIRECT
 (
mk°emps
, (*
__ãm∂©e
, 
__suffixÀn
),

646 
mk°emps64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

648 
	#mk°emps
 
mk°emps64


	)

651 #ifde‡
__USE_LARGEFILE64


652 
	$mk°emps64
 (*
__ãm∂©e
, 
__suffixÀn
)

653 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

657 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K8


663 *
	$mkdãmp
 (*
__ãm∂©e
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

666 #ifde‡
__USE_GNU


673 #i‚de‡
__USE_FILE_OFFSET64


674 
	$mko°emp
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

676 #ifde‡
__REDIRECT


677 
	`__REDIRECT
 (
mko°emp
, (*
__ãm∂©e
, 
__Êags
), 
mko°emp64
)

678 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

680 
	#mko°emp
 
mko°emp64


	)

683 #ifde‡
__USE_LARGEFILE64


684 
	$mko°emp64
 (*
__ãm∂©e
, 
__Êags
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

693 #i‚de‡
__USE_FILE_OFFSET64


694 
	$mko°emps
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

695 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

697 #ifde‡
__REDIRECT


698 
	`__REDIRECT
 (
mko°emps
, (*
__ãm∂©e
, 
__suffixÀn
,

699 
__Êags
), 
mko°emps64
)

700 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

702 
	#mko°emps
 
mko°emps64


	)

705 #ifde‡
__USE_LARGEFILE64


706 
	$mko°emps64
 (*
__ãm∂©e
, 
__suffixÀn
, 
__Êags
)

707 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

712 
__BEGIN_NAMESPACE_STD


717 
	$sy°em
 (
__c⁄°
 *
__comm™d
Ë
__wur
;

718 
__END_NAMESPACE_STD


721 #ifdef 
__USE_GNU


724 *
	$ˇn⁄iˇlize_fûe_«me
 (
__c⁄°
 *
__«me
)

725 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

728 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


734 *
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

735 *
__ª°ri˘
 
__ªsﬁved
Ë
__THROW
 
__wur
;

740 #i‚de‡
__COMPAR_FN_T


741 
	#__COMPAR_FN_T


	)

742 (*
	t__com∑r_‚_t
Ë(
	t__c⁄°
 *, __const *);

744 #ifdef 
__USE_GNU


745 
__com∑r_‚_t
 
	tcom∑ris⁄_‚_t
;

748 #ifde‡
__USE_GNU


749 (*
	t__com∑r_d_‚_t
Ë(
	t__c⁄°
 *, __const *, *);

752 
__BEGIN_NAMESPACE_STD


755 *
	$b£¨ch
 (
__c⁄°
 *
__key
, __c⁄° *
__ba£
,

756 
size_t
 
__nmemb
, size_à
__size
, 
__com∑r_‚_t
 
__com∑r
)

757 
	`__n⁄nuŒ
 ((1, 2, 5)Ë
__wur
;

761 
	$qs‹t
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

762 
__com∑r_‚_t
 
__com∑r
Ë
	`__n⁄nuŒ
 ((1, 4));

763 #ifde‡
__USE_GNU


764 
	$qs‹t_r
 (*
__ba£
, 
size_t
 
__nmemb
, size_à
__size
,

765 
__com∑r_d_‚_t
 
__com∑r
, *
__¨g
)

766 
	`__n⁄nuŒ
 ((1, 4));

771 
	$abs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

772 
	$œbs
 (
__x
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

773 
__END_NAMESPACE_STD


775 #ifde‡
__USE_ISOC99


776 
__exãnsi⁄__
 
	$Œabs
 (
__x
)

777 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

781 
__BEGIN_NAMESPACE_STD


785 
div_t
 
	$div
 (
__numî
, 
__díom
)

786 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

787 
ldiv_t
 
	$ldiv
 (
__numî
, 
__díom
)

788 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

789 
__END_NAMESPACE_STD


791 #ifde‡
__USE_ISOC99


792 
__BEGIN_NAMESPACE_C99


793 
__exãnsi⁄__
 
Œdiv_t
 
	$Œdiv
 (
__numî
,

794 
__díom
)

795 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
)Ë
__wur
;

796 
__END_NAMESPACE_C99


800 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

801 || 
deföed
 
__USE_SVID


808 *
	$ecvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

809 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

814 *
	$fcvt
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

815 *
__ª°ri˘
 
__sign
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

820 *
	$gcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

821 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

824 #ifde‡
__USE_MISC


826 *
	$qecvt
 (
__vÆue
, 
__ndigô
,

827 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

828 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

829 *
	$qfcvt
 (
__vÆue
, 
__ndigô
,

830 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
)

831 
__THROW
 
	`__n⁄nuŒ
 ((3, 4)Ë
__wur
;

832 *
	$qgcvt
 (
__vÆue
, 
__ndigô
, *
__buf
)

833 
__THROW
 
	`__n⁄nuŒ
 ((3)Ë
__wur
;

838 
	$ecvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

839 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

840 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

841 
	$fcvt_r
 (
__vÆue
, 
__ndigô
, *
__ª°ri˘
 
__de˝t
,

842 *
__ª°ri˘
 
__sign
, *__ª°ri˘ 
__buf
,

843 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

845 
	$qecvt_r
 (
__vÆue
, 
__ndigô
,

846 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

847 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

848 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

849 
	$qfcvt_r
 (
__vÆue
, 
__ndigô
,

850 *
__ª°ri˘
 
__de˝t
, *__ª°ri˘ 
__sign
,

851 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

852 
__THROW
 
	`__n⁄nuŒ
 ((3, 4, 5));

857 
__BEGIN_NAMESPACE_STD


860 
	$mbÀn
 (
__c⁄°
 *
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

863 
	$mbtowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

864 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
 
__wur
;

867 
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
Ë
__THROW
 
__wur
;

871 
size_t
 
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__pwcs
,

872 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
Ë
__THROW
;

874 
size_t
 
	$wc°ombs
 (*
__ª°ri˘
 
__s
,

875 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__pwcs
, 
size_t
 
__n
)

876 
__THROW
;

877 
__END_NAMESPACE_STD


880 #ifde‡
__USE_SVID


885 
	$Ωm©ch
 (
__c⁄°
 *
__ª•⁄£
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

889 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


896 
	$gësub›t
 (**
__ª°ri˘
 
__›ti⁄p
,

897 *
__c⁄°
 *
__ª°ri˘
 
__tokís
,

898 **
__ª°ri˘
 
__vÆuï
)

899 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3)Ë
__wur
;

903 #ifde‡
__USE_XOPEN


905 
	$£tkey
 (
__c⁄°
 *
__key
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

911 #ifde‡
__USE_XOPEN2KXSI


913 
	$posix_›í±
 (
__oÊag
Ë
__wur
;

916 #ifde‡
__USE_XOPEN


921 
	$gø¡±
 (
__fd
Ë
__THROW
;

925 
	$u∆ock±
 (
__fd
Ë
__THROW
;

930 *
	$±¢ame
 (
__fd
Ë
__THROW
 
__wur
;

933 #ifde‡
__USE_GNU


937 
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

938 
__THROW
 
	`__n⁄nuŒ
 ((2));

941 
	`gë±
 ();

944 #ifde‡
__USE_BSD


948 
	$gëlﬂdavg
 (
__lﬂdavg
[], 
__√Àm
)

949 
__THROW
 
	`__n⁄nuŒ
 ((1));

954 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


955 
	~<bôs/°dlib.h
>

957 #ifde‡
__LDBL_COMPAT


958 
	~<bôs/°dlib-ldbl.h
>

962 #unde‡
__√ed_mÆloc_™d_ˇŒoc


964 
__END_DECLS


	@/usr/include/string.h

24 #i‚def 
_STRING_H


25 
	#_STRING_H
 1

	)

27 
	~<„©uªs.h
>

29 
	g__BEGIN_DECLS


32 
	#__√ed_size_t


	)

33 
	#__√ed_NULL


	)

34 
	~<°ddef.h
>

37 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

38 
	#__CORRECT_ISO_CPP_STRING_H_PROTO


	)

42 
__BEGIN_NAMESPACE_STD


44 *
	$mem˝y
 (*
__ª°ri˘
 
__de°
,

45 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

46 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

49 *
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
)

50 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

51 
__END_NAMESPACE_STD


56 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN


57 *
	$memc˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

58 
__c
, 
size_t
 
__n
)

59 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

63 
__BEGIN_NAMESPACE_STD


65 *
	$mem£t
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

68 
	$memcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

69 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

72 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


75 *
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

76 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

77 
__c⁄°
 *
	`memchr
 (__c⁄° *
__s
, 
__c
, 
size_t
 
__n
)

78 
__THROW
 
	`__asm
 ("memchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

80 #ifde‡
__OPTIMIZE__


81 
__exã∫_Æways_ölöe
 *

82 
	`memchr
 (*
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


84  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

87 
__exã∫_Æways_ölöe
 
__c⁄°
 *

88 
	`memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
Ë
__THROW


90  
	`__buûtö_memchr
 (
__s
, 
__c
, 
__n
);

93 
	}
}

95 *
	$memchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

96 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

98 
__END_NAMESPACE_STD


100 #ifde‡
__USE_GNU


103 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


104 "C++" *
	$øwmemchr
 (*
__s
, 
__c
)

105 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

106 "C++" 
__c⁄°
 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

107 
__THROW
 
	`__asm
 ("øwmemchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

109 *
	$øwmemchr
 (
__c⁄°
 *
__s
, 
__c
)

110 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

114 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


115 "C++" *
	$memrchr
 (*
__s
, 
__c
, 
size_t
 
__n
)

116 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

117 "C++" 
__c⁄°
 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

118 
__THROW
 
	`__asm
 ("memrchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

120 *
	$memrchr
 (
__c⁄°
 *
__s
, 
__c
, 
size_t
 
__n
)

121 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

126 
__BEGIN_NAMESPACE_STD


128 *
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

129 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

131 *
	$°∫˝y
 (*
__ª°ri˘
 
__de°
,

132 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

133 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

136 *
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

137 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

139 *
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

140 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

143 
	$°rcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

144 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

146 
	$°∫cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

147 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

150 
	$°rcﬁl
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

151 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

153 
size_t
 
	$°rx‰m
 (*
__ª°ri˘
 
__de°
,

154 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

155 
__THROW
 
	`__n⁄nuŒ
 ((2));

156 
__END_NAMESPACE_STD


158 #ifde‡
__USE_XOPEN2K8


162 
	~<xloˇÀ.h
>

165 
	$°rcﬁl_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
__loˇÀ_t
 
__l
)

166 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

168 
size_t
 
	$°rx‰m_l
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

169 
__loˇÀ_t
 
__l
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

172 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 \

173 || 
deföed
 
__USE_XOPEN2K8


175 *
	$°rdup
 (
__c⁄°
 *
__s
)

176 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

182 #i‡
deföed
 
__USE_XOPEN2K8


183 *
	$°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

184 
__THROW
 
__©åibuã_mÆloc__
 
	`__n⁄nuŒ
 ((1));

187 #i‡
deföed
 
__USE_GNU
 && deföed 
__GNUC__


189 
	#°rdu∑
(
s
) \

190 (
__exãnsi⁄__
 \

192 
__c⁄°
 *
__ﬁd
 = (
s
); \

193 
size_t
 
__Àn
 = 
	`°æí
 (
__ﬁd
) + 1; \

194 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
); \

195 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

196 
	}
}))

	)

199 
	#°∫du∑
(
s
, 
n
) \

200 (
__exãnsi⁄__
 \

202 
__c⁄°
 *
__ﬁd
 = (
s
); \

203 
size_t
 
__Àn
 = 
	`°∫Àn
 (
__ﬁd
, (
n
)); \

204 *
__√w
 = (*Ë
	`__buûtö_Æloˇ
 (
__Àn
 + 1); \

205 
__√w
[
__Àn
] = '\0'; \

206 (*Ë
	`mem˝y
 (
__√w
, 
__ﬁd
, 
__Àn
); \

207 }))

	)

210 
	g__BEGIN_NAMESPACE_STD


212 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


215 *
°rchr
 (*
__s
, 
__c
)

216 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

217 
__c⁄°
 *
°rchr
 (__c⁄° *
__s
, 
__c
)

218 
__THROW
 
__asm
 ("°rchr"Ë
__©åibuã_puª__
 
__n⁄nuŒ
 ((1));

220 #ifde‡
__OPTIMIZE__


221 
__exã∫_Æways_ölöe
 *

222 
°rchr
 (*
__s
, 
__c
Ë
	g__THROW


224  
__buûtö_°rchr
 (
__s
, 
__c
);

227 
__exã∫_Æways_ölöe
 
__c⁄°
 *

228 
°rchr
 (
__c⁄°
 *
__s
, 
__c
Ë
	g__THROW


230  
__buûtö_°rchr
 (
__s
, 
__c
);

235 *
	$°rchr
 (
__c⁄°
 *
__s
, 
__c
)

236 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

239 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


242 *
	`°ºchr
 (*
__s
, 
__c
)

243 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

244 
__c⁄°
 *
	`°ºchr
 (__c⁄° *
__s
, 
__c
)

245 
__THROW
 
	`__asm
 ("°ºchr"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

247 #ifde‡
__OPTIMIZE__


248 
__exã∫_Æways_ölöe
 *

249 
	`°ºchr
 (*
__s
, 
__c
Ë
__THROW


251  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

254 
__exã∫_Æways_ölöe
 
__c⁄°
 *

255 
	`°ºchr
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


257  
	`__buûtö_°ºchr
 (
__s
, 
__c
);

260 
	}
}

262 *
	$°ºchr
 (
__c⁄°
 *
__s
, 
__c
)

263 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

265 
__END_NAMESPACE_STD


267 #ifde‡
__USE_GNU


270 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


271 "C++" *
	$°rch∫ul
 (*
__s
, 
__c
)

272 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

273 "C++" 
__c⁄°
 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

274 
__THROW
 
	`__asm
 ("°rch∫ul"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

276 *
	$°rch∫ul
 (
__c⁄°
 *
__s
, 
__c
)

277 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

281 
__BEGIN_NAMESPACE_STD


284 
size_t
 
	$°rc•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ªje˘
)

285 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

288 
size_t
 
	$°r•n
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

289 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

291 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


294 *
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
)

295 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

296 
__c⁄°
 *
	`°Ωbrk
 (__c⁄° *
__s
, __c⁄° *
__ac˚±
)

297 
__THROW
 
	`__asm
 ("°Ωbrk"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

299 #ifde‡
__OPTIMIZE__


300 
__exã∫_Æways_ölöe
 *

301 
	`°Ωbrk
 (*
__s
, 
__c⁄°
 *
__ac˚±
Ë
__THROW


303  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

306 
__exã∫_Æways_ölöe
 
__c⁄°
 *

307 
	`°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
Ë
__THROW


309  
	`__buûtö_°Ωbrk
 (
__s
, 
__ac˚±
);

312 
	}
}

314 *
	$°Ωbrk
 (
__c⁄°
 *
__s
, __c⁄° *
__ac˚±
)

315 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

318 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


321 *
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

322 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

323 
__c⁄°
 *
	`°r°r
 (__c⁄° *
__hay°ack
,

324 
__c⁄°
 *
__√edÀ
)

325 
__THROW
 
	`__asm
 ("°r°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

327 #ifde‡
__OPTIMIZE__


328 
__exã∫_Æways_ölöe
 *

329 
	`°r°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
Ë
__THROW


331  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

334 
__exã∫_Æways_ölöe
 
__c⁄°
 *

335 
	`°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
Ë
__THROW


337  
	`__buûtö_°r°r
 (
__hay°ack
, 
__√edÀ
);

340 
	}
}

342 *
	$°r°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

343 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

348 *
	$°πok
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
)

349 
__THROW
 
	`__n⁄nuŒ
 ((2));

350 
__END_NAMESPACE_STD


354 *
	$__°πok_r
 (*
__ª°ri˘
 
__s
,

355 
__c⁄°
 *
__ª°ri˘
 
__dñim
,

356 **
__ª°ri˘
 
__ßve_±r
)

357 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

358 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


359 *
	$°πok_r
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__dñim
,

360 **
__ª°ri˘
 
__ßve_±r
)

361 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

364 #ifde‡
__USE_GNU


366 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


367 "C++" *
	$°rˇ£°r
 (*
__hay°ack
, 
__c⁄°
 *
__√edÀ
)

368 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

369 "C++" 
__c⁄°
 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
,

370 
__c⁄°
 *
__√edÀ
)

371 
__THROW
 
	`__asm
 ("°rˇ£°r"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

373 *
	$°rˇ£°r
 (
__c⁄°
 *
__hay°ack
, __c⁄° *
__√edÀ
)

374 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

378 #ifde‡
__USE_GNU


382 *
	$memmem
 (
__c⁄°
 *
__hay°ack
, 
size_t
 
__hay°ackÀn
,

383 
__c⁄°
 *
__√edÀ
, 
size_t
 
__√edÀÀn
)

384 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 3));

388 *
	$__memp˝y
 (*
__ª°ri˘
 
__de°
,

389 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

390 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

391 *
	$memp˝y
 (*
__ª°ri˘
 
__de°
,

392 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

393 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

397 
__BEGIN_NAMESPACE_STD


399 
size_t
 
	$°æí
 (
__c⁄°
 *
__s
)

400 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

401 
__END_NAMESPACE_STD


403 #ifdef 
__USE_XOPEN2K8


406 
size_t
 
	$°∫Àn
 (
__c⁄°
 *
__°rög
, 
size_t
 
__maxÀn
)

407 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

411 
__BEGIN_NAMESPACE_STD


413 *
	$°ªº‹
 (
__î∫um
Ë
__THROW
;

414 
__END_NAMESPACE_STD


415 #i‡
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_MISC


423 #i‡
deföed
 
__USE_XOPEN2K
 && !deföed 
__USE_GNU


426 #ifde‡
__REDIRECT_NTH


427 
	`__REDIRECT_NTH
 (
°ªº‹_r
,

428 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
),

429 
__xpg_°ªº‹_r
Ë
	`__n⁄nuŒ
 ((2));

431 
	$__xpg_°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

433 
	#°ªº‹_r
 
__xpg_°ªº‹_r


	)

438 *
	$°ªº‹_r
 (
__î∫um
, *
__buf
, 
size_t
 
__buÊí
)

439 
__THROW
 
	`__n⁄nuŒ
 ((2));

443 #ifde‡
__USE_XOPEN2K8


445 *
	$°ªº‹_l
 (
__î∫um
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

451 
	$__bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

453 #ifde‡
__USE_BSD


455 
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__n
)

456 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

459 
	$bzîo
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

462 
	$bcmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

463 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

466 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


469 *
	`ödex
 (*
__s
, 
__c
)

470 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

471 
__c⁄°
 *
	`ödex
 (__c⁄° *
__s
, 
__c
)

472 
__THROW
 
	`__asm
 ("ödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

474 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


475 
__exã∫_Æways_ölöe
 *

476 
	`ödex
 (*
__s
, 
__c
Ë
__THROW


478  
	`__buûtö_ödex
 (
__s
, 
__c
);

481 
__exã∫_Æways_ölöe
 
__c⁄°
 *

482 
	`ödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


484  
	`__buûtö_ödex
 (
__s
, 
__c
);

487 
	}
}

489 *
	$ödex
 (
__c⁄°
 *
__s
, 
__c
)

490 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

494 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


497 *
	`rödex
 (*
__s
, 
__c
)

498 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

499 
__c⁄°
 *
	`rödex
 (__c⁄° *
__s
, 
__c
)

500 
__THROW
 
	`__asm
 ("rödex"Ë
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

502 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__CORRECT_ISO_CPP_STRINGS_H_PROTO


503 
__exã∫_Æways_ölöe
 *

504 
	`rödex
 (*
__s
, 
__c
Ë
__THROW


506  
	`__buûtö_rödex
 (
__s
, 
__c
);

509 
__exã∫_Æways_ölöe
 
__c⁄°
 *

510 
	`rödex
 (
__c⁄°
 *
__s
, 
__c
Ë
__THROW


512  
	`__buûtö_rödex
 (
__s
, 
__c
);

515 
	}
}

517 *
	$rödex
 (
__c⁄°
 *
__s
, 
__c
)

518 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1));

523 
	$ffs
 (
__i
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

527 #ifdef 
__USE_GNU


528 
	$ff¶
 (
__l
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

529 #ifde‡
__GNUC__


530 
__exãnsi⁄__
 
	$ff¶l
 (
__Œ
)

531 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

536 
	$°rˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

537 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

540 
	$°∫ˇ£cmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
, 
size_t
 
__n
)

541 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

544 #ifdef 
__USE_GNU


547 
	$°rˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

548 
__loˇÀ_t
 
__loc
)

549 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 3));

551 
	$°∫ˇ£cmp_l
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
,

552 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
)

553 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2, 4));

556 #ifdef 
__USE_BSD


559 *
	$°r£p
 (**
__ª°ri˘
 
__°rögp
,

560 
__c⁄°
 *
__ª°ri˘
 
__dñim
)

561 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

564 #ifdef 
__USE_XOPEN2K8


566 *
	$°rsig«l
 (
__sig
Ë
__THROW
;

569 *
	$__°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

571 *
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
)

572 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

576 *
	$__°≤˝y
 (*
__ª°ri˘
 
__de°
,

577 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

578 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 *
	$°≤˝y
 (*
__ª°ri˘
 
__de°
,

580 
__c⁄°
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

581 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

584 #ifdef 
__USE_GNU


586 
	$°rvîscmp
 (
__c⁄°
 *
__s1
, __c⁄° *
__s2
)

587 
__THROW
 
__©åibuã_puª__
 
	`__n⁄nuŒ
 ((1, 2));

590 *
	$°r‰y
 (*
__°rög
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

593 *
	$mem‰ob
 (*
__s
, 
size_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

595 #i‚de‡
ba£«me


600 #ifde‡
__CORRECT_ISO_CPP_STRING_H_PROTO


601 "C++" *
	$ba£«me
 (*
__fûíame
)

602 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

603 "C++" 
__c⁄°
 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
)

604 
__THROW
 
	`__asm
 ("ba£«me"Ë
	`__n⁄nuŒ
 ((1));

606 *
	$ba£«me
 (
__c⁄°
 *
__fûíame
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

612 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

613 #i‡
deföed
 
__OPTIMIZE__
 && !deföed 
__OPTIMIZE_SIZE__
 \

614 && !
deföed
 
__NO_INLINE__
 && !deföed 
__˝lu•lus


634 
	~<bôs/°rög.h
>

637 
	~<bôs/°rög2.h
>

640 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


642 
	~<bôs/°rög3.h
>

646 
__END_DECLS


	@/usr/include/sys/mman.h

20 #i‚def 
_SYS_MMAN_H


21 
	#_SYS_MMAN_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<bôs/ty≥s.h
>

25 
	#__√ed_size_t


	)

26 
	~<°ddef.h
>

28 #i‚de‡
__off_t_deföed


29 #i‚de‡
__USE_FILE_OFFSET64


30 
__off_t
 
	toff_t
;

32 
__off64_t
 
	toff_t
;

34 
	#__off_t_deföed


	)

37 #i‚de‡
__mode_t_deföed


38 
__mode_t
 
	tmode_t
;

39 
	#__mode_t_deföed


	)

42 
	~<bôs/mm™.h
>

45 
	#MAP_FAILED
 ((*Ë-1)

	)

47 
	g__BEGIN_DECLS


57 #i‚de‡
__USE_FILE_OFFSET64


58 *
	$mm≠
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

59 
__Êags
, 
__fd
, 
__off_t
 
__off£t
Ë
__THROW
;

61 #ifde‡
__REDIRECT_NTH


62 * 
	`__REDIRECT_NTH
 (
mm≠
,

63 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

64 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
),

65 
mm≠64
);

67 
	#mm≠
 
mm≠64


	)

70 #ifde‡
__USE_LARGEFILE64


71 *
	$mm≠64
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
,

72 
__Êags
, 
__fd
, 
__off64_t
 
__off£t
Ë
__THROW
;

77 
	$munm≠
 (*
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

82 
	$m¥Ÿe˘
 (*
__addr
, 
size_t
 
__Àn
, 
__¥Ÿ
Ë
__THROW
;

90 
	`msync
 (*
__addr
, 
size_t
 
__Àn
, 
__Êags
);

92 #ifde‡
__USE_BSD


95 
	$madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

97 #ifde‡
__USE_XOPEN2K


99 
	$posix_madvi£
 (*
__addr
, 
size_t
 
__Àn
, 
__advi˚
Ë
__THROW
;

104 
	$mlock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

107 
	$mu∆ock
 (
__c⁄°
 *
__addr
, 
size_t
 
__Àn
Ë
__THROW
;

112 
	$mlockÆl
 (
__Êags
Ë
__THROW
;

116 
	$mu∆ockÆl
 (Ë
__THROW
;

118 #ifde‡
__USE_MISC


124 
	$möc‹e
 (*
__°¨t
, 
size_t
 
__Àn
, *
__vec
)

125 
__THROW
;

128 #ifde‡
__USE_GNU


134 *
	$mªm≠
 (*
__addr
, 
size_t
 
__ﬁd_Àn
, size_à
__√w_Àn
,

135 
__Êags
, ...Ë
__THROW
;

139 
	$ªm≠_fûe_∑ges
 (*
__°¨t
, 
size_t
 
__size
, 
__¥Ÿ
,

140 
size_t
 
__pgoff
, 
__Êags
Ë
__THROW
;

145 
	`shm_›í
 (
__c⁄°
 *
__«me
, 
__oÊag
, 
mode_t
 
__mode
);

148 
	`shm_u∆ök
 (
__c⁄°
 *
__«me
);

150 
__END_DECLS


	@/usr/include/sys/stat.h

24 #i‚def 
_SYS_STAT_H


25 
	#_SYS_STAT_H
 1

	)

27 
	~<„©uªs.h
>

29 
	~<bôs/ty≥s.h
>

31 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K
 || deföed 
__USE_MISC
 \

32 || 
deföed
 
	g__USE_ATFILE


33 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


34 
	#__√ed_time_t


	)

36 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ATFILE


37 
	#__√ed_time•ec


	)

39 
	~<time.h
>

42 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


45 #i‚de‡
__dev_t_deföed


46 
__dev_t
 
	tdev_t
;

47 
	#__dev_t_deföed


	)

50 #i‚de‡
__gid_t_deföed


51 
__gid_t
 
	tgid_t
;

52 
	#__gid_t_deföed


	)

55 #i‚de‡
__öo_t_deföed


56 #i‚de‡
__USE_FILE_OFFSET64


57 
__öo_t
 
	töo_t
;

59 
__öo64_t
 
	töo_t
;

61 
	#__öo_t_deföed


	)

64 #i‚de‡
__mode_t_deföed


65 
__mode_t
 
	tmode_t
;

66 
	#__mode_t_deföed


	)

69 #i‚de‡
__∆ök_t_deföed


70 
__∆ök_t
 
	t∆ök_t
;

71 
	#__∆ök_t_deföed


	)

74 #i‚de‡
__off_t_deföed


75 #i‚de‡
__USE_FILE_OFFSET64


76 
__off_t
 
	toff_t
;

78 
__off64_t
 
	toff_t
;

80 
	#__off_t_deföed


	)

83 #i‚de‡
__uid_t_deföed


84 
__uid_t
 
	tuid_t
;

85 
	#__uid_t_deföed


	)

89 #ifde‡
__USE_UNIX98


90 #i‚de‡
__blk˙t_t_deföed


91 #i‚de‡
__USE_FILE_OFFSET64


92 
__blk˙t_t
 
	tblk˙t_t
;

94 
__blk˙t64_t
 
	tblk˙t_t
;

96 
	#__blk˙t_t_deföed


	)

99 #i‚de‡
__blksize_t_deföed


100 
__blksize_t
 
	tblksize_t
;

101 
	#__blksize_t_deföed


	)

105 
	g__BEGIN_DECLS


107 
	~<bôs/°©.h
>

109 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


110 
	#S_IFMT
 
__S_IFMT


	)

111 
	#S_IFDIR
 
__S_IFDIR


	)

112 
	#S_IFCHR
 
__S_IFCHR


	)

113 
	#S_IFBLK
 
__S_IFBLK


	)

114 
	#S_IFREG
 
__S_IFREG


	)

115 #ifde‡
__S_IFIFO


116 
	#S_IFIFO
 
__S_IFIFO


	)

118 #ifde‡
__S_IFLNK


119 
	#S_IFLNK
 
__S_IFLNK


	)

121 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_UNIX98
) \

122 && 
deföed
 
	g__S_IFSOCK


123 
	#S_IFSOCK
 
__S_IFSOCK


	)

129 
	#__S_ISTYPE
(
mode
, 
mask
Ë(((modeË& 
__S_IFMT
Ë=(mask))

	)

131 
	#S_ISDIR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFDIR
)

	)

132 
	#S_ISCHR
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFCHR
)

	)

133 
	#S_ISBLK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFBLK
)

	)

134 
	#S_ISREG
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFREG
)

	)

135 #ifde‡
__S_IFIFO


136 
	#S_ISFIFO
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFIFO
)

	)

138 #ifde‡
__S_IFLNK


139 
	#S_ISLNK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFLNK
)

	)

142 #i‡
deföed
 
__USE_BSD
 && !deföed 
__S_IFLNK


143 
	#S_ISLNK
(
mode
Ë0

	)

146 #i‡(
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K
) \

147 && 
deföed
 
	g__S_IFSOCK


148 
	#S_ISSOCK
(
mode
Ë
	`__S_ISTYPE
((mode), 
__S_IFSOCK
)

	)

149 #ñi‡
deföed
 
__USE_XOPEN2K


150 
	#S_ISSOCK
(
mode
Ë0

	)

157 #ifdef 
__USE_POSIX199309


158 
	#S_TYPEISMQ
(
buf
Ë
	`__S_TYPEISMQ
(buf)

	)

159 
	#S_TYPEISSEM
(
buf
Ë
	`__S_TYPEISSEM
(buf)

	)

160 
	#S_TYPEISSHM
(
buf
Ë
	`__S_TYPEISSHM
(buf)

	)

166 
	#S_ISUID
 
__S_ISUID


	)

167 
	#S_ISGID
 
__S_ISGID


	)

169 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


171 
	#S_ISVTX
 
__S_ISVTX


	)

174 
	#S_IRUSR
 
__S_IREAD


	)

175 
	#S_IWUSR
 
__S_IWRITE


	)

176 
	#S_IXUSR
 
__S_IEXEC


	)

178 
	#S_IRWXU
 (
__S_IREAD
|
__S_IWRITE
|
__S_IEXEC
)

	)

180 #i‡
deföed
 
__USE_MISC
 && deföed 
__USE_BSD


181 
	#S_IREAD
 
S_IRUSR


	)

182 
	#S_IWRITE
 
S_IWUSR


	)

183 
	#S_IEXEC
 
S_IXUSR


	)

186 
	#S_IRGRP
 (
S_IRUSR
 >> 3Ë

	)

187 
	#S_IWGRP
 (
S_IWUSR
 >> 3Ë

	)

188 
	#S_IXGRP
 (
S_IXUSR
 >> 3Ë

	)

190 
	#S_IRWXG
 (
S_IRWXU
 >> 3)

	)

192 
	#S_IROTH
 (
S_IRGRP
 >> 3Ë

	)

193 
	#S_IWOTH
 (
S_IWGRP
 >> 3Ë

	)

194 
	#S_IXOTH
 (
S_IXGRP
 >> 3Ë

	)

196 
	#S_IRWXO
 (
S_IRWXG
 >> 3)

	)

199 #ifdef 
__USE_BSD


201 
	#ACCESSPERMS
 (
S_IRWXU
|
S_IRWXG
|
S_IRWXO
Ë

	)

202 
	#ALLPERMS
 (
S_ISUID
|
S_ISGID
|
S_ISVTX
|
S_IRWXU
|
S_IRWXG
|
S_IRWXO
)

	)

203 
	#DEFFILEMODE
 (
S_IRUSR
|
S_IWUSR
|
S_IRGRP
|
S_IWGRP
|
S_IROTH
|
S_IWOTH
)

	)

205 
	#S_BLKSIZE
 512

	)

209 #i‚de‡
__USE_FILE_OFFSET64


211 
	$°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

212 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

216 
	$f°©
 (
__fd
, 
°©
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

218 #ifde‡
__REDIRECT_NTH


219 
	`__REDIRECT_NTH
 (
°©
, (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

220 
°©
 *
__ª°ri˘
 
__buf
), 
°©64
)

221 
	`__n⁄nuŒ
 ((1, 2));

222 
	`__REDIRECT_NTH
 (
f°©
, (
__fd
, 
°©
 *
__buf
), 
f°©64
)

223 
	`__n⁄nuŒ
 ((2));

225 
	#°©
 
°©64


	)

226 
	#f°©
 
f°©64


	)

229 #ifde‡
__USE_LARGEFILE64


230 
	$°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

231 
°©64
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

232 
	$f°©64
 (
__fd
, 
°©64
 *
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

235 #ifde‡
__USE_ATFILE


239 #i‚de‡
__USE_FILE_OFFSET64


240 
	$f°©©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

241 
°©
 *
__ª°ri˘
 
__buf
, 
__Êag
)

242 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

244 #ifde‡
__REDIRECT_NTH


245 
	`__REDIRECT_NTH
 (
f°©©
, (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

246 
°©
 *
__ª°ri˘
 
__buf
,

247 
__Êag
),

248 
f°©©64
Ë
	`__n⁄nuŒ
 ((2, 3));

250 
	#f°©©
 
f°©©64


	)

254 #ifde‡
__USE_LARGEFILE64


255 
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fûe
,

256 
°©64
 *
__ª°ri˘
 
__buf
, 
__Êag
)

257 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

261 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


262 #i‚de‡
__USE_FILE_OFFSET64


265 
	$l°©
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

266 
°©
 *
__ª°ri˘
 
__buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

268 #ifde‡
__REDIRECT_NTH


269 
	`__REDIRECT_NTH
 (
l°©
,

270 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

271 
°©
 *
__ª°ri˘
 
__buf
), 
l°©64
)

272 
	`__n⁄nuŒ
 ((1, 2));

274 
	#l°©
 
l°©64


	)

277 #ifde‡
__USE_LARGEFILE64


278 
	$l°©64
 (
__c⁄°
 *
__ª°ri˘
 
__fûe
,

279 
°©64
 *
__ª°ri˘
 
__buf
)

280 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

286 
	$chmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1));

289 #ifde‡
__USE_BSD


293 
	$lchmod
 (
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

298 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


299 
	$fchmod
 (
__fd
, 
__mode_t
 
__mode
Ë
__THROW
;

302 #ifde‡
__USE_ATFILE


305 
	$fchmod©
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__mode_t
 
__mode
,

306 
__Êag
)

307 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

314 
__mode_t
 
	$umask
 (
__mode_t
 
__mask
Ë
__THROW
;

316 #ifdef 
__USE_GNU


319 
__mode_t
 
	$gëumask
 (Ë
__THROW
;

323 
	$mkdú
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

326 #ifde‡
__USE_ATFILE


330 
	$mkdú©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

331 
__THROW
 
	`__n⁄nuŒ
 ((2));

337 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


338 
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
)

339 
__THROW
 
	`__n⁄nuŒ
 ((1));

341 #ifde‡
__USE_ATFILE


345 
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

346 
__dev_t
 
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

352 
	$mkfifo
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

353 
__THROW
 
	`__n⁄nuŒ
 ((1));

355 #ifde‡
__USE_ATFILE


359 
	$mkfifﬂt
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
)

360 
__THROW
 
	`__n⁄nuŒ
 ((2));

363 #ifde‡
__USE_ATFILE


366 
	$utimíßt
 (
__fd
, 
__c⁄°
 *
__∑th
,

367 
__c⁄°
 
time•ec
 
__times
[2],

368 
__Êags
)

369 
__THROW
 
	`__n⁄nuŒ
 ((2));

372 #ifde‡
__USE_XOPEN2K8


374 
	$futimís
 (
__fd
, 
__c⁄°
 
time•ec
 
__times
[2]Ë
__THROW
;

392 #i‚de‡
_STAT_VER


393 
	#_STAT_VER
 0

	)

395 #i‚de‡
_MKNOD_VER


396 
	#_MKNOD_VER
 0

	)

400 #i‚de‡
__USE_FILE_OFFSET64


401 
	$__fx°©
 (
__vî
, 
__fûdes
, 
°©
 *
__°©_buf
)

402 
__THROW
 
	`__n⁄nuŒ
 ((3));

403 
	$__x°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

404 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

405 
	$__lx°©
 (
__vî
, 
__c⁄°
 *
__fûíame
,

406 
°©
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

407 
	$__fx°©©
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

408 
°©
 *
__°©_buf
, 
__Êag
)

409 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

411 #ifde‡
__REDIRECT_NTH


412 
	`__REDIRECT_NTH
 (
__fx°©
, (
__vî
, 
__fûdes
,

413 
°©
 *
__°©_buf
), 
__fx°©64
)

414 
	`__n⁄nuŒ
 ((3));

415 
	`__REDIRECT_NTH
 (
__x°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

416 
°©
 *
__°©_buf
), 
__x°©64
)

417 
	`__n⁄nuŒ
 ((2, 3));

418 
	`__REDIRECT_NTH
 (
__lx°©
, (
__vî
, 
__c⁄°
 *
__fûíame
,

419 
°©
 *
__°©_buf
), 
__lx°©64
)

420 
	`__n⁄nuŒ
 ((2, 3));

421 
	`__REDIRECT_NTH
 (
__fx°©©
, (
__vî
, 
__fûdes
,

422 
__c⁄°
 *
__fûíame
,

423 
°©
 *
__°©_buf
, 
__Êag
),

424 
__fx°©©64
Ë
	`__n⁄nuŒ
 ((3, 4));

427 
	#__fx°©
 
__fx°©64


	)

428 
	#__x°©
 
__x°©64


	)

429 
	#__lx°©
 
__lx°©64


	)

433 #ifde‡
__USE_LARGEFILE64


434 
	$__fx°©64
 (
__vî
, 
__fûdes
, 
°©64
 *
__°©_buf
)

435 
__THROW
 
	`__n⁄nuŒ
 ((3));

436 
	$__x°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

437 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

438 
	$__lx°©64
 (
__vî
, 
__c⁄°
 *
__fûíame
,

439 
°©64
 *
__°©_buf
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

440 
	$__fx°©©64
 (
__vî
, 
__fûdes
, 
__c⁄°
 *
__fûíame
,

441 
°©64
 *
__°©_buf
, 
__Êag
)

442 
__THROW
 
	`__n⁄nuŒ
 ((3, 4));

444 
	$__xmknod
 (
__vî
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

445 
__dev_t
 *
__dev
Ë
__THROW
 
	`__n⁄nuŒ
 ((2, 4));

447 
	$__xmknod©
 (
__vî
, 
__fd
, 
__c⁄°
 *
__∑th
,

448 
__mode_t
 
__mode
, 
__dev_t
 *
__dev
)

449 
__THROW
 
	`__n⁄nuŒ
 ((3, 5));

451 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


454 
__exã∫_ölöe
 

455 
	`__NTH
 (
	$°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

457  
	`__x°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

458 
	}
}

460 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


461 
__exã∫_ölöe
 

462 
__NTH
 (
	$l°©
 (
__c⁄°
 *
__∑th
, 
°©
 *
__°©buf
))

464  
	`__lx°©
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

465 
	}
}

468 
__exã∫_ölöe
 

469 
__NTH
 (
	$f°©
 (
__fd
, 
°©
 *
__°©buf
))

471  
	`__fx°©
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

472 
	}
}

474 #ifde‡
__USE_ATFILE


475 
__exã∫_ölöe
 

476 
__NTH
 (
	$f°©©
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©
 *
__°©buf
,

477 
__Êag
))

479  
	`__fx°©©
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

480 
	}
}

483 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_BSD


484 
__exã∫_ölöe
 

485 
__NTH
 (
	$mknod
 (
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
, 
__dev_t
 
__dev
))

487  
	`__xmknod
 (
_MKNOD_VER
, 
__∑th
, 
__mode
, &
__dev
);

488 
	}
}

491 #ifde‡
__USE_ATFILE


492 
__exã∫_ölöe
 

493 
__NTH
 (
	$mknod©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__mode_t
 
__mode
,

494 
__dev_t
 
__dev
))

496  
	`__xmknod©
 (
_MKNOD_VER
, 
__fd
, 
__∑th
, 
__mode
, &
__dev
);

497 
	}
}

500 #i‡
deföed
 
__USE_LARGEFILE64
 \

501 && (! 
deföed
 
	g__USE_FILE_OFFSET64
 \

502 || (
deföed
 
	g__REDIRECT_NTH
 && deföed 
	g__OPTIMIZE__
))

503 
__exã∫_ölöe
 

504 
__NTH
 (
	$°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

506  
	`__x°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

507 
	}
}

509 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


510 
__exã∫_ölöe
 

511 
__NTH
 (
	$l°©64
 (
__c⁄°
 *
__∑th
, 
°©64
 *
__°©buf
))

513  
	`__lx°©64
 (
_STAT_VER
, 
__∑th
, 
__°©buf
);

514 
	}
}

517 
__exã∫_ölöe
 

518 
__NTH
 (
	$f°©64
 (
__fd
, 
°©64
 *
__°©buf
))

520  
	`__fx°©64
 (
_STAT_VER
, 
__fd
, 
__°©buf
);

521 
	}
}

523 #ifde‡
__USE_ATFILE


524 
__exã∫_ölöe
 

525 
__NTH
 (
	$f°©©64
 (
__fd
, 
__c⁄°
 *
__fûíame
, 
°©64
 *
__°©buf
,

526 
__Êag
))

528  
	`__fx°©©64
 (
_STAT_VER
, 
__fd
, 
__fûíame
, 
__°©buf
, 
__Êag
);

529 
	}
}

536 
	g__END_DECLS


	@/usr/include/sys/sysctl.h

19 #i‚def 
_SYS_SYSCTL_H


20 
	#_SYS_SYSCTL_H
 1

	)

22 
	~<„©uªs.h
>

23 
	#__√ed_size_t


	)

24 
	~<°ddef.h
>

26 #i‚de‡
_LINUX_KERNEL_H


27 
	#_LINUX_KERNEL_H
 1

	)

28 
	#__undef_LINUX_KERNEL_H


	)

30 #i‚de‡
_LINUX_TYPES_H


31 
	#_LINUX_TYPES_H
 1

	)

32 
	#__undef_LINUX_TYPES_H


	)

34 #i‚de‡
_LINUX_LIST_H


35 
	#_LINUX_LIST_H
 1

	)

36 
	#__undef_LINUX_LIST_H


	)

38 #i‚de‡
__LINUX_COMPILER_H


39 
	#__LINUX_COMPILER_H
 1

	)

40 
	#__u£r


	)

41 
	#__undef__LINUX_COMPILER_H


	)

44 
	~<löux/sys˘l.h
>

46 #ifde‡
__undef_LINUX_KERNEL_H


47 #unde‡
_LINUX_KERNEL_H


48 #unde‡
__undef_LINUX_KERNEL_H


50 #ifde‡
__undef_LINUX_TYPES_H


51 #unde‡
_LINUX_TYPES_H


52 #unde‡
__undef_LINUX_TYPES_H


54 #ifde‡
__undef_LINUX_LIST_H


55 #unde‡
_LINUX_LIST_H


56 #unde‡
__undef_LINUX_LIST_H


58 #ifde‡
__undef__LINUX_COMPILER_H


59 #unde‡
__LINUX_COMPILER_H


60 #unde‡
__u£r


61 #unde‡
__undef__LINUX_COMPILER_H


64 
__BEGIN_DECLS


67 
	$sys˘l
 (*
__«me
, 
__∆í
, *
__ﬁdvÆ
,

68 
size_t
 *
__ﬁdÀ≈
, *
__√wvÆ
, size_à
__√wÀn
Ë
__THROW
;

70 
__END_DECLS


	@/usr/include/sys/time.h

20 #i‚de‡
_SYS_TIME_H


21 
	#_SYS_TIME_H
 1

	)

23 
	~<„©uªs.h
>

25 
	~<bôs/ty≥s.h
>

26 
	#__√ed_time_t


	)

27 
	~<time.h
>

28 
	#__√ed_timevÆ


	)

29 
	~<bôs/time.h
>

31 
	~<sys/£À˘.h
>

33 #i‚de‡
__su£c⁄ds_t_deföed


34 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

35 
	#__su£c⁄ds_t_deföed


	)

39 
	g__BEGIN_DECLS


41 #ifde‡
__USE_GNU


43 
	#TIMEVAL_TO_TIMESPEC
(
tv
, 
ts
) { \

44 (
ts
)->
tv_£c
 = (
tv
)->tv_sec; \

45 (
ts
)->
tv_n£c
 = (
tv
)->
tv_u£c
 * 1000; \

46 }

	)

47 
	#TIMESPEC_TO_TIMEVAL
(
tv
, 
ts
) { \

48 (
tv
)->
tv_£c
 = (
ts
)->tv_sec; \

49 (
tv
)->
tv_u£c
 = (
ts
)->
tv_n£c
 / 1000; \

50 }

	)

54 #ifde‡
__USE_BSD


57 
	stimez⁄e


59 
	mtz_möuãswe°
;

60 
	mtz_d°time
;

63 
timez⁄e
 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

65 *
	t__ª°ri˘
 
	t__timez⁄e_±r_t
;

73 
	$gëtimeofday
 (
timevÆ
 *
__ª°ri˘
 
__tv
,

74 
__timez⁄e_±r_t
 
__tz
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

76 #ifde‡
__USE_BSD


79 
	$£âimeofday
 (
__c⁄°
 
timevÆ
 *
__tv
,

80 
__c⁄°
 
timez⁄e
 *
__tz
)

81 
__THROW
;

87 
	$adjtime
 (
__c⁄°
 
timevÆ
 *
__dñè
,

88 
timevÆ
 *
__ﬁddñè
Ë
__THROW
;

93 
	e__ôimî_which


96 
ITIMER_REAL
 = 0,

97 
	#ITIMER_REAL
 
ITIMER_REAL


	)

99 
ITIMER_VIRTUAL
 = 1,

100 
	#ITIMER_VIRTUAL
 
ITIMER_VIRTUAL


	)

103 
ITIMER_PROF
 = 2

104 
	#ITIMER_PROF
 
ITIMER_PROF


	)

109 
	sôimîvÆ


112 
timevÆ
 
ô_öãrvÆ
;

114 
timevÆ
 
ô_vÆue
;

117 #i‡
deföed
 
__USE_GNU
 && !deföed 
__˝lu•lus


120 
__ôimî_which
 
	t__ôimî_which_t
;

122 
	t__ôimî_which_t
;

127 
	$gëôimî
 (
__ôimî_which_t
 
__which
,

128 
ôimîvÆ
 *
__vÆue
Ë
__THROW
;

133 
	$£tôimî
 (
__ôimî_which_t
 
__which
,

134 
__c⁄°
 
ôimîvÆ
 *
__ª°ri˘
 
__√w
,

135 
ôimîvÆ
 *
__ª°ri˘
 
__ﬁd
Ë
__THROW
;

140 
	$utimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

141 
__THROW
 
	`__n⁄nuŒ
 ((1));

143 #ifde‡
__USE_BSD


145 
	$lutimes
 (
__c⁄°
 *
__fûe
, __c⁄° 
timevÆ
 
__tvp
[2])

146 
__THROW
 
	`__n⁄nuŒ
 ((1));

149 
	$futimes
 (
__fd
, 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

152 #ifde‡
__USE_GNU


156 
	$futimeßt
 (
__fd
, 
__c⁄°
 *
__fûe
,

157 
__c⁄°
 
timevÆ
 
__tvp
[2]Ë
__THROW
;

161 #ifde‡
__USE_BSD


164 
	#timîis£t
(
tvp
Ë(—vp)->
tv_£c
 || (tvp)->
tv_u£c
)

	)

165 
	#timî˛ór
(
tvp
Ë(—vp)->
tv_£c
 = (tvp)->
tv_u£c
 = 0)

	)

166 
	#timîcmp
(
a
, 
b
, 
CMP
) \

167 (((
a
)->
tv_£c
 =(
b
)->tv_sec) ? \

168 ((
a
)->
tv_u£c
 
	`CMP
 (
b
)->tv_usec) : \

169 ((
a
)->
tv_£c
 
	`CMP
 (
b
)->tv_£c))

	)

170 
	#timîadd
(
a
, 
b
, 
ªsu…
) \

172 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯+ (
b
)->tv_sec; \

173 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯+ (
b
)->tv_usec; \

174 i‡((
ªsu…
)->
tv_u£c
 >= 1000000) \

176 ++(
ªsu…
)->
tv_£c
; \

177 (
ªsu…
)->
tv_u£c
 -= 1000000; \

179 
	}
} 0)

	)

180 
	#timîsub
(
a
, 
b
, 
ªsu…
) \

182 (
ªsu…
)->
tv_£c
 = (
a
)->tv_£¯- (
b
)->tv_sec; \

183 (
ªsu…
)->
tv_u£c
 = (
a
)->tv_u£¯- (
b
)->tv_usec; \

184 i‡((
ªsu…
)->
tv_u£c
 < 0) { \

185 --(
ªsu…
)->
tv_£c
; \

186 (
ªsu…
)->
tv_u£c
 += 1000000; \

188 } 0)

	)

191 
	g__END_DECLS


	@/usr/include/sys/types.h

23 #i‚def 
_SYS_TYPES_H


24 
	#_SYS_TYPES_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


30 
	~<bôs/ty≥s.h
>

32 #ifdef 
__USE_BSD


33 #i‚de‡
__u_ch¨_deföed


34 
__u_ch¨
 
	tu_ch¨
;

35 
__u_sh‹t
 
	tu_sh‹t
;

36 
__u_öt
 
	tu_öt
;

37 
__u_l⁄g
 
	tu_l⁄g
;

38 
__quad_t
 
	tquad_t
;

39 
__u_quad_t
 
	tu_quad_t
;

40 
__fsid_t
 
	tfsid_t
;

41 
	#__u_ch¨_deföed


	)

45 
__loff_t
 
	tloff_t
;

47 #i‚de‡
__öo_t_deföed


48 #i‚de‡
__USE_FILE_OFFSET64


49 
__öo_t
 
	töo_t
;

51 
__öo64_t
 
	töo_t
;

53 
	#__öo_t_deföed


	)

55 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__öo64_t_deföed


56 
__öo64_t
 
	töo64_t
;

57 
	#__öo64_t_deföed


	)

60 #i‚de‡
__dev_t_deföed


61 
__dev_t
 
	tdev_t
;

62 
	#__dev_t_deföed


	)

65 #i‚de‡
__gid_t_deföed


66 
__gid_t
 
	tgid_t
;

67 
	#__gid_t_deföed


	)

70 #i‚de‡
__mode_t_deföed


71 
__mode_t
 
	tmode_t
;

72 
	#__mode_t_deföed


	)

75 #i‚de‡
__∆ök_t_deföed


76 
__∆ök_t
 
	t∆ök_t
;

77 
	#__∆ök_t_deföed


	)

80 #i‚de‡
__uid_t_deföed


81 
__uid_t
 
	tuid_t
;

82 
	#__uid_t_deföed


	)

85 #i‚de‡
__off_t_deföed


86 #i‚de‡
__USE_FILE_OFFSET64


87 
__off_t
 
	toff_t
;

89 
__off64_t
 
	toff_t
;

91 
	#__off_t_deföed


	)

93 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


94 
__off64_t
 
	toff64_t
;

95 
	#__off64_t_deföed


	)

98 #i‚de‡
__pid_t_deföed


99 
__pid_t
 
	tpid_t
;

100 
	#__pid_t_deföed


	)

103 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8
) \

104 && !
deföed
 
__id_t_deföed


105 
__id_t
 
	tid_t
;

106 
	#__id_t_deföed


	)

109 #i‚de‡
__ssize_t_deföed


110 
__ssize_t
 
	tssize_t
;

111 
	#__ssize_t_deföed


	)

114 #ifdef 
__USE_BSD


115 #i‚de‡
__daddr_t_deföed


116 
__daddr_t
 
	tdaddr_t
;

117 
__ˇddr_t
 
	tˇddr_t
;

118 
	#__daddr_t_deföed


	)

122 #i‡(
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN
Ë&& !deföed 
__key_t_deföed


123 
__key_t
 
	tkey_t
;

124 
	#__key_t_deföed


	)

127 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


128 
	#__√ed_˛ock_t


	)

130 
	#__√ed_time_t


	)

131 
	#__√ed_timî_t


	)

132 
	#__√ed_˛ockid_t


	)

133 
	~<time.h
>

135 #ifde‡
__USE_XOPEN


136 #i‚de‡
__u£c⁄ds_t_deföed


137 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

138 
	#__u£c⁄ds_t_deföed


	)

140 #i‚de‡
__su£c⁄ds_t_deföed


141 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

142 
	#__su£c⁄ds_t_deföed


	)

146 
	#__√ed_size_t


	)

147 
	~<°ddef.h
>

149 #ifde‡
__USE_MISC


151 
	tul⁄g
;

152 
	tush‹t
;

153 
	tuöt
;

158 #i‡!
__GNUC_PREREQ
 (2, 7)

161 #i‚de‡
__öt8_t_deföed


162 
	#__öt8_t_deföed


	)

163 
	töt8_t
;

164 
	töt16_t
;

165 
	töt32_t
;

166 #i‡
__WORDSIZE
 == 64

167 
	töt64_t
;

168 #ñi‡
__GLIBC_HAVE_LONG_LONG


169 
__exãnsi⁄__
 
	töt64_t
;

174 
	tu_öt8_t
;

175 
	tu_öt16_t
;

176 
	tu_öt32_t
;

177 #i‡
__WORDSIZE
 == 64

178 
	tu_öt64_t
;

179 #ñi‡
__GLIBC_HAVE_LONG_LONG


180 
__exãnsi⁄__
 
	tu_öt64_t
;

183 
	tªgi°î_t
;

188 
	#__ötN_t
(
N
, 
MODE
) \

189 ##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

190 
	t__u_ötN_t
(
	tN
, 
	tMODE
) \

191 
	tu_öt
##
	tN
##
	t_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	tMODE
)))

	)

193 #i‚de‡
	t__öt8_t_deföed


194 
	t__öt8_t_deföed


	)

195 
	t__ötN_t
 (8, 
	t__QI__
);

196 
__ötN_t
 (16, 
__HI__
);

197 
__ötN_t
 (32, 
__SI__
);

198 
__ötN_t
 (64, 
__DI__
);

201 
__u_ötN_t
 (8, 
__QI__
);

202 
__u_ötN_t
 (16, 
__HI__
);

203 
__u_ötN_t
 (32, 
__SI__
);

204 
__u_ötN_t
 (64, 
__DI__
);

206 
	tªgi°î_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__w‹d__
)));

212 
	#__BIT_TYPES_DEFINED__
 1

	)

215 #ifdef 
__USE_BSD


217 
	~<ídün.h
>

220 
	~<sys/£À˘.h
>

223 
	~<sys/sysma¸os.h
>

227 #i‡(
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8
) \

228 && !
deföed
 
__blksize_t_deföed


229 
__blksize_t
 
	tblksize_t
;

230 
	#__blksize_t_deföed


	)

234 #i‚de‡
__USE_FILE_OFFSET64


235 #i‚de‡
__blk˙t_t_deföed


236 
__blk˙t_t
 
	tblk˙t_t
;

237 
	#__blk˙t_t_deföed


	)

239 #i‚de‡
__fsblk˙t_t_deföed


240 
__fsblk˙t_t
 
	tfsblk˙t_t
;

241 
	#__fsblk˙t_t_deföed


	)

243 #i‚de‡
__fsfû˙t_t_deföed


244 
__fsfû˙t_t
 
	tfsfû˙t_t
;

245 
	#__fsfû˙t_t_deföed


	)

248 #i‚de‡
__blk˙t_t_deföed


249 
__blk˙t64_t
 
	tblk˙t_t
;

250 
	#__blk˙t_t_deföed


	)

252 #i‚de‡
__fsblk˙t_t_deföed


253 
__fsblk˙t64_t
 
	tfsblk˙t_t
;

254 
	#__fsblk˙t_t_deföed


	)

256 #i‚de‡
__fsfû˙t_t_deföed


257 
__fsfû˙t64_t
 
	tfsfû˙t_t
;

258 
	#__fsfû˙t_t_deföed


	)

262 #ifde‡
__USE_LARGEFILE64


263 
__blk˙t64_t
 
	tblk˙t64_t
;

264 
__fsblk˙t64_t
 
	tfsblk˙t64_t
;

265 
__fsfû˙t64_t
 
	tfsfû˙t64_t
;

270 #i‡
deföed
 
__USE_POSIX199506
 || deföed 
__USE_UNIX98


271 
	~<bôs/±hªadty≥s.h
>

274 
	g__END_DECLS


	@/usr/include/unistd.h

23 #i‚def 
_UNISTD_H


24 
	#_UNISTD_H
 1

	)

26 
	~<„©uªs.h
>

28 
	g__BEGIN_DECLS


33 #ifde‡
__USE_XOPEN2K8


35 
	#_POSIX_VERSION
 200809L

	)

36 #ñi‡
deföed
 
__USE_XOPEN2K


38 
	#_POSIX_VERSION
 200112L

	)

39 #ñi‡
deföed
 
__USE_POSIX199506


41 
	#_POSIX_VERSION
 199506L

	)

42 #ñi‡
deföed
 
__USE_POSIX199309


44 
	#_POSIX_VERSION
 199309L

	)

47 
	#_POSIX_VERSION
 199009L

	)

53 #ifde‡
__USE_XOPEN2K8


54 
	#__POSIX2_THIS_VERSION
 200809L

	)

56 #ñi‡
deföed
 
__USE_XOPEN2K


58 
	#__POSIX2_THIS_VERSION
 200112L

	)

59 #ñi‡
deföed
 
__USE_POSIX199506


61 
	#__POSIX2_THIS_VERSION
 199506L

	)

64 
	#__POSIX2_THIS_VERSION
 199209L

	)

68 
	#_POSIX2_VERSION
 
__POSIX2_THIS_VERSION


	)

72 
	#_POSIX2_C_BIND
 
__POSIX2_THIS_VERSION


	)

76 
	#_POSIX2_C_DEV
 
__POSIX2_THIS_VERSION


	)

80 
	#_POSIX2_SW_DEV
 
__POSIX2_THIS_VERSION


	)

84 
	#_POSIX2_LOCALEDEF
 
__POSIX2_THIS_VERSION


	)

87 #ifde‡
__USE_XOPEN2K8


88 
	#_XOPEN_VERSION
 700

	)

89 #ñi‡
deföed
 
__USE_XOPEN2K


90 
	#_XOPEN_VERSION
 600

	)

91 #ñi‡
deföed
 
__USE_UNIX98


92 
	#_XOPEN_VERSION
 500

	)

94 
	#_XOPEN_VERSION
 4

	)

98 
	#_XOPEN_XCU_VERSION
 4

	)

101 
	#_XOPEN_XPG2
 1

	)

102 
	#_XOPEN_XPG3
 1

	)

103 
	#_XOPEN_XPG4
 1

	)

106 
	#_XOPEN_UNIX
 1

	)

109 
	#_XOPEN_CRYPT
 1

	)

113 
	#_XOPEN_ENH_I18N
 1

	)

116 
	#_XOPEN_LEGACY
 1

	)

203 
	~<bôs/posix_›t.h
>

206 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


207 
	~<bôs/ívú⁄míts.h
>

211 
	#STDIN_FILENO
 0

	)

212 
	#STDOUT_FILENO
 1

	)

213 
	#STDERR_FILENO
 2

	)

218 
	~<bôs/ty≥s.h
>

220 #i‚def 
__ssize_t_deföed


221 
__ssize_t
 
	tssize_t
;

222 
	#__ssize_t_deföed


	)

225 
	#__√ed_size_t


	)

226 
	#__√ed_NULL


	)

227 
	~<°ddef.h
>

229 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


232 #i‚de‡
__gid_t_deföed


233 
__gid_t
 
	tgid_t
;

234 
	#__gid_t_deföed


	)

237 #i‚de‡
__uid_t_deföed


238 
__uid_t
 
	tuid_t
;

239 
	#__uid_t_deföed


	)

242 #i‚de‡
__off_t_deföed


243 #i‚de‡
__USE_FILE_OFFSET64


244 
__off_t
 
	toff_t
;

246 
__off64_t
 
	toff_t
;

248 
	#__off_t_deföed


	)

250 #i‡
deföed
 
__USE_LARGEFILE64
 && !deföed 
__off64_t_deföed


251 
__off64_t
 
	toff64_t
;

252 
	#__off64_t_deföed


	)

255 #i‚de‡
__u£c⁄ds_t_deföed


256 
__u£c⁄ds_t
 
	tu£c⁄ds_t
;

257 
	#__u£c⁄ds_t_deföed


	)

260 #i‚de‡
__pid_t_deföed


261 
__pid_t
 
	tpid_t
;

262 
	#__pid_t_deföed


	)

266 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


267 #i‚de‡
__öçå_t_deföed


268 
__öçå_t
 
	töçå_t
;

269 
	#__öçå_t_deföed


	)

273 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN


274 #i‚de‡
__sockÀn_t_deföed


275 
__sockÀn_t
 
	tsockÀn_t
;

276 
	#__sockÀn_t_deföed


	)

282 
	#R_OK
 4

	)

283 
	#W_OK
 2

	)

284 
	#X_OK
 1

	)

285 
	#F_OK
 0

	)

288 
	$ac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

290 #ifde‡
__USE_GNU


293 
	$euidac˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

294 
__THROW
 
	`__n⁄nuŒ
 ((1));

297 
	$óc˚ss
 (
__c⁄°
 *
__«me
, 
__ty≥
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1));

301 #ifde‡
__USE_ATFILE


305 
	$Ác˚sßt
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__ty≥
, 
__Êag
)

306 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

311 #i‚def 
_STDIO_H


312 
	#SEEK_SET
 0

	)

313 
	#SEEK_CUR
 1

	)

314 
	#SEEK_END
 2

	)

315 #ifde‡
__USE_GNU


316 
	#SEEK_DATA
 3

	)

317 
	#SEEK_HOLE
 4

	)

321 #i‡
deföed
 
__USE_BSD
 && !deföed 
L_SET


323 
	#L_SET
 
SEEK_SET


	)

324 
	#L_INCR
 
SEEK_CUR


	)

325 
	#L_XTND
 
SEEK_END


	)

334 #i‚de‡
__USE_FILE_OFFSET64


335 
__off_t
 
	$l£ek
 (
__fd
, 
__off_t
 
__off£t
, 
__whí˚
Ë
__THROW
;

337 #ifde‡
__REDIRECT_NTH


338 
__off64_t
 
	`__REDIRECT_NTH
 (
l£ek
,

339 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
),

340 
l£ek64
);

342 
	#l£ek
 
l£ek64


	)

345 #ifde‡
__USE_LARGEFILE64


346 
__off64_t
 
	$l£ek64
 (
__fd
, 
__off64_t
 
__off£t
, 
__whí˚
)

347 
__THROW
;

354 
	`˛o£
 (
__fd
);

361 
ssize_t
 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
Ë
__wur
;

367 
ssize_t
 
	$wrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
Ë
__wur
;

369 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


370 #i‚de‡
__USE_FILE_OFFSET64


377 
ssize_t
 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

378 
__off_t
 
__off£t
Ë
__wur
;

385 
ssize_t
 
	$pwrôe
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

386 
__off_t
 
__off£t
Ë
__wur
;

388 #ifde‡
__REDIRECT


389 
ssize_t
 
	`__REDIRECT
 (
¥ód
, (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

390 
__off64_t
 
__off£t
),

391 
¥ód64
Ë
__wur
;

392 
ssize_t
 
	`__REDIRECT
 (
pwrôe
, (
__fd
, 
__c⁄°
 *
__buf
,

393 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
),

394 
pwrôe64
Ë
__wur
;

396 
	#¥ód
 
¥ód64


	)

397 
	#pwrôe
 
pwrôe64


	)

401 #ifde‡
__USE_LARGEFILE64


405 
ssize_t
 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

406 
__off64_t
 
__off£t
Ë
__wur
;

409 
ssize_t
 
	$pwrôe64
 (
__fd
, 
__c⁄°
 *
__buf
, 
size_t
 
__n
,

410 
__off64_t
 
__off£t
Ë
__wur
;

418 
	$pùe
 (
__pùedes
[2]Ë
__THROW
 
__wur
;

420 #ifde‡
__USE_GNU


423 
	$pùe2
 (
__pùedes
[2], 
__Êags
Ë
__THROW
 
__wur
;

433 
	$Æ¨m
 (
__£c⁄ds
Ë
__THROW
;

445 
	`¶ìp
 (
__£c⁄ds
);

447 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

448 || 
deföed
 
__USE_BSD


453 
__u£c⁄ds_t
 
	$uÆ¨m
 (
__u£c⁄ds_t
 
__vÆue
, __u£c⁄ds_à
__öãrvÆ
)

454 
__THROW
;

461 
	`u¶ìp
 (
__u£c⁄ds_t
 
__u£c⁄ds
);

470 
	`∑u£
 ();

474 
	$chown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

475 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

477 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


479 
	$fchown
 (
__fd
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
Ë
__THROW
 
__wur
;

484 
	$lchown
 (
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
, 
__gid_t
 
__group
)

485 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

489 #ifde‡
__USE_ATFILE


492 
	$fchow«t
 (
__fd
, 
__c⁄°
 *
__fûe
, 
__uid_t
 
__ow√r
,

493 
__gid_t
 
__group
, 
__Êag
)

494 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

498 
	$chdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

500 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


502 
	$fchdú
 (
__fd
Ë
__THROW
 
__wur
;

512 *
	$gëcwd
 (*
__buf
, 
size_t
 
__size
Ë
__THROW
 
__wur
;

514 #ifdef 
__USE_GNU


518 *
	$gë_cuºít_dú_«me
 (Ë
__THROW
;

521 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

522 || 
deföed
 
__USE_BSD


526 *
	$gëwd
 (*
__buf
)

527 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
;

532 
	$dup
 (
__fd
Ë
__THROW
 
__wur
;

535 
	$dup2
 (
__fd
, 
__fd2
Ë
__THROW
;

537 #ifde‡
__USE_GNU


540 
	$dup3
 (
__fd
, 
__fd2
, 
__Êags
Ë
__THROW
;

544 **
__ívú⁄
;

545 #ifde‡
__USE_GNU


546 **
ívú⁄
;

552 
	$execve
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[],

553 *
__c⁄°
 
__ívp
[]Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

555 #ifde‡
__USE_XOPEN2K8


558 
	$„xecve
 (
__fd
, *
__c⁄°
 
__¨gv
[], *__c⁄° 
__ívp
[])

559 
__THROW
 
	`__n⁄nuŒ
 ((2));

564 
	$execv
 (
__c⁄°
 *
__∑th
, *__c⁄° 
__¨gv
[])

565 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

569 
	$exe˛e
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

570 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

574 
	$exe˛
 (
__c⁄°
 *
__∑th
, __c⁄° *
__¨g
, ...)

575 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

579 
	$execvp
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[])

580 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

585 
	$exe˛p
 (
__c⁄°
 *
__fûe
, __c⁄° *
__¨g
, ...)

586 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

588 #ifde‡
__USE_GNU


591 
	$execv≥
 (
__c⁄°
 *
__fûe
, *__c⁄° 
__¨gv
[],

592 *
__c⁄°
 
__ívp
[])

593 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

597 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


599 
	$ni˚
 (
__öc
Ë
__THROW
 
__wur
;

604 
	$_exô
 (
__°©us
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

610 
	~<bôs/c⁄‚ame.h
>

613 
	$∑thc⁄f
 (
__c⁄°
 *
__∑th
, 
__«me
)

614 
__THROW
 
	`__n⁄nuŒ
 ((1));

617 
	$Â©hc⁄f
 (
__fd
, 
__«me
Ë
__THROW
;

620 
	$sysc⁄f
 (
__«me
Ë
__THROW
;

622 #ifdef 
__USE_POSIX2


624 
size_t
 
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
Ë
__THROW
;

629 
__pid_t
 
	$gëpid
 (Ë
__THROW
;

632 
__pid_t
 
	$gëµid
 (Ë
__THROW
;

636 #i‚de‡
__FAVOR_BSD


637 
__pid_t
 
	$gëpgΩ
 (Ë
__THROW
;

639 #ifde‡
__REDIRECT_NTH


640 
__pid_t
 
	`__REDIRECT_NTH
 (
gëpgΩ
, (__pid_à
__pid
), 
__gëpgid
);

642 
	#gëpgΩ
 
__gëpgid


	)

647 
__pid_t
 
	$__gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

648 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


649 
__pid_t
 
	$gëpgid
 (
__pid_t
 
__pid
Ë
__THROW
;

656 
	$£çgid
 (
__pid_t
 
__pid
, __pid_à
__pgid
Ë
__THROW
;

658 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


669 #i‚de‡
__FAVOR_BSD


673 
	$£çgΩ
 (Ë
__THROW
;

678 #ifde‡
__REDIRECT_NTH


679 
	`__REDIRECT_NTH
 (
£çgΩ
, (
__pid_t
 
__pid
, __pid_à
__pgΩ
), 
£çgid
);

681 
	#£çgΩ
 
£çgid


	)

690 
__pid_t
 
	$£tsid
 (Ë
__THROW
;

692 #i‡
deföed
 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


694 
__pid_t
 
	$gësid
 (
__pid_t
 
__pid
Ë
__THROW
;

698 
__uid_t
 
	$gëuid
 (Ë
__THROW
;

701 
__uid_t
 
	$gëeuid
 (Ë
__THROW
;

704 
__gid_t
 
	$gëgid
 (Ë
__THROW
;

707 
__gid_t
 
	$gëegid
 (Ë
__THROW
;

712 
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]Ë
__THROW
 
__wur
;

714 #ifdef 
__USE_GNU


716 
	$group_membî
 (
__gid_t
 
__gid
Ë
__THROW
;

723 
	$£tuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

725 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


728 
	$£åeuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
Ë
__THROW
 
__wur
;

731 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


733 
	$£ãuid
 (
__uid_t
 
__uid
Ë
__THROW
 
__wur
;

740 
	$£tgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

742 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


745 
	$£åegid
 (
__gid_t
 
__rgid
, __gid_à
__egid
Ë
__THROW
 
__wur
;

748 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN2K


750 
	$£ãgid
 (
__gid_t
 
__gid
Ë
__THROW
 
__wur
;

753 #ifde‡
__USE_GNU


756 
	$gëªsuid
 (
__uid_t
 *
__ruid
, __uid_à*
__euid
, __uid_à*
__suid
)

757 
__THROW
;

761 
	$gëªsgid
 (
__gid_t
 *
__rgid
, __gid_à*
__egid
, __gid_à*
__sgid
)

762 
__THROW
;

766 
	$£åesuid
 (
__uid_t
 
__ruid
, __uid_à
__euid
, __uid_à
__suid
)

767 
__THROW
 
__wur
;

771 
	$£åesgid
 (
__gid_t
 
__rgid
, __gid_à
__egid
, __gid_à
__sgid
)

772 
__THROW
 
__wur
;

779 
__pid_t
 
	$f‹k
 (Ë
__THROWNL
;

781 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K8
) \

782 || 
deföed
 
__USE_BSD


787 
__pid_t
 
	$vf‹k
 (Ë
__THROW
;

793 *
	$ây«me
 (
__fd
Ë
__THROW
;

797 
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
)

798 
__THROW
 
	`__n⁄nuŒ
 ((2)Ë
__wur
;

802 
	$ißây
 (
__fd
Ë
__THROW
;

804 #i‡
deföed
 
__USE_BSD
 \

805 || (
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_UNIX98
)

808 
	$ây¶Ÿ
 (Ë
__THROW
;

813 
	$lök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

814 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

816 #ifde‡
__USE_ATFILE


819 
	$lök©
 (
__‰omfd
, 
__c⁄°
 *
__‰om
, 
__tofd
,

820 
__c⁄°
 *
__to
, 
__Êags
)

821 
__THROW
 
	`__n⁄nuŒ
 ((2, 4)Ë
__wur
;

824 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


826 
	$symlök
 (
__c⁄°
 *
__‰om
, __c⁄° *
__to
)

827 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

832 
ssize_t
 
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

833 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

834 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

837 #ifde‡
__USE_ATFILE


839 
	$symlök©
 (
__c⁄°
 *
__‰om
, 
__tofd
,

840 
__c⁄°
 *
__to
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 3)Ë
__wur
;

843 
ssize_t
 
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

844 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
)

845 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

849 
	$u∆ök
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

851 #ifde‡
__USE_ATFILE


853 
	$u∆ök©
 (
__fd
, 
__c⁄°
 *
__«me
, 
__Êag
)

854 
__THROW
 
	`__n⁄nuŒ
 ((2));

858 
	$rmdú
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

862 
__pid_t
 
	$tcgëpgΩ
 (
__fd
Ë
__THROW
;

865 
	$tc£çgΩ
 (
__fd
, 
__pid_t
 
__pgΩ_id
Ë
__THROW
;

872 *
	`gëlogö
 ();

873 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


880 
	$gëlogö_r
 (*
__«me
, 
size_t
 
__«me_Àn
Ë
	`__n⁄nuŒ
 ((1));

883 #ifdef 
__USE_BSD


885 
	$£éogö
 (
__c⁄°
 *
__«me
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

889 #ifdef 
__USE_POSIX2


893 
	#__√ed_gë›t


	)

894 
	~<gë›t.h
>

898 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


902 
	$gëho°«me
 (*
__«me
, 
size_t
 
__Àn
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

906 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

909 
	$£tho°«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

910 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

914 
	$£tho°id
 (
__id
Ë
__THROW
 
__wur
;

920 
	$gëdomaö«me
 (*
__«me
, 
size_t
 
__Àn
)

921 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

922 
	$£tdomaö«me
 (
__c⁄°
 *
__«me
, 
size_t
 
__Àn
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

929 
	$vh™gup
 (Ë
__THROW
;

932 
	$ªvoke
 (
__c⁄°
 *
__fûe
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

940 
	$¥ofû
 (*
__ßm∂e_buf„r
, 
size_t
 
__size
,

941 
size_t
 
__off£t
, 
__sˇÀ
)

942 
__THROW
 
	`__n⁄nuŒ
 ((1));

948 
	$ac˘
 (
__c⁄°
 *
__«me
Ë
__THROW
;

952 *
	$gëu£rshñl
 (Ë
__THROW
;

953 
	$ídu£rshñl
 (Ë
__THROW
;

954 
	$£tu£rshñl
 (Ë
__THROW
;

960 
	$d´m⁄
 (
__nochdú
, 
__no˛o£
Ë
__THROW
 
__wur
;

964 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_XOPEN2K
)

967 
	$chroŸ
 (
__c⁄°
 *
__∑th
Ë
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

971 *
	$gë∑ss
 (
__c⁄°
 *
__¥om±
Ë
	`__n⁄nuŒ
 ((1));

975 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K


980 
	`fsync
 (
__fd
);

984 #ifde‡
__USE_GNU


987 
	$syncfs
 (
__fd
Ë
__THROW
;

991 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


994 
	`gëho°id
 ();

997 
	$sync
 (Ë
__THROW
;

1000 #i‡
deföed
 
__USE_BSD
 || !deföed 
__USE_XOPEN2K


1003 
	$gë∑gesize
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

1008 
	$gëdèbÀsize
 (Ë
__THROW
;

1014 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K8


1017 #i‚de‡
__USE_FILE_OFFSET64


1018 
	$åunˇã
 (
__c⁄°
 *
__fûe
, 
__off_t
 
__Àngth
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1021 #ifde‡
__REDIRECT_NTH


1022 
	`__REDIRECT_NTH
 (
åunˇã
,

1023 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
),

1024 
åunˇã64
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1026 
	#åunˇã
 
åunˇã64


	)

1029 #ifde‡
__USE_LARGEFILE64


1030 
	$åunˇã64
 (
__c⁄°
 *
__fûe
, 
__off64_t
 
__Àngth
)

1031 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

1036 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


1039 #i‚de‡
__USE_FILE_OFFSET64


1040 
	$·runˇã
 (
__fd
, 
__off_t
 
__Àngth
Ë
__THROW
 
__wur
;

1042 #ifde‡
__REDIRECT_NTH


1043 
	`__REDIRECT_NTH
 (
·runˇã
, (
__fd
, 
__off64_t
 
__Àngth
),

1044 
·runˇã64
Ë
__wur
;

1046 
	#·runˇã
 
·runˇã64


	)

1049 #ifde‡
__USE_LARGEFILE64


1050 
	$·runˇã64
 (
__fd
, 
__off64_t
 
__Àngth
Ë
__THROW
 
__wur
;

1056 #i‡(
deföed
 
__USE_XOPEN_EXTENDED
 && !deföed 
__USE_XOPEN2K
) \

1057 || 
deföed
 
__USE_MISC


1061 
	$brk
 (*
__addr
Ë
__THROW
 
__wur
;

1067 *
	$sbrk
 (
öçå_t
 
__dñè
Ë
__THROW
;

1071 #ifde‡
__USE_MISC


1082 
	$sysˇŒ
 (
__sy¢o
, ...Ë
__THROW
;

1087 #i‡(
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
Ë&& !deföed 
F_LOCK


1099 
	#F_ULOCK
 0

	)

1100 
	#F_LOCK
 1

	)

1101 
	#F_TLOCK
 2

	)

1102 
	#F_TEST
 3

	)

1104 #i‚de‡
__USE_FILE_OFFSET64


1105 
	$lockf
 (
__fd
, 
__cmd
, 
__off_t
 
__Àn
Ë
__wur
;

1107 #ifde‡
__REDIRECT


1108 
	`__REDIRECT
 (
lockf
, (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
),

1109 
lockf64
Ë
__wur
;

1111 
	#lockf
 
lockf64


	)

1114 #ifde‡
__USE_LARGEFILE64


1115 
	$lockf64
 (
__fd
, 
__cmd
, 
__off64_t
 
__Àn
Ë
__wur
;

1120 #ifde‡
__USE_GNU


1125 
	#TEMP_FAILURE_RETRY
(
ex¥essi⁄
) \

1126 (
__exãnsi⁄__
 \

1127 ({ 
__ªsu…
; \

1128 dÿ
__ªsu…
 = (Ë(
ex¥essi⁄
); \

1129 
__ªsu…
 =-1L && 
î∫o
 =
EINTR
); \

1130 
__ªsu…
; 
	}
}))

	)

1133 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


1136 
fd©async
 (
__fûdes
);

1142 #ifdef 
__USE_XOPEN


1144 *
	$¸y±
 (
__c⁄°
 *
__key
, __c⁄° *
__ß…
)

1145 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1149 
	$í¸y±
 (*
__block
, 
__edÊag
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1156 
	$swab
 (
__c⁄°
 *
__ª°ri˘
 
__‰om
, *__ª°ri˘ 
__to
,

1157 
ssize_t
 
__n
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1163 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_XOPEN2K8


1165 *
	$˘îmid
 (*
__s
Ë
__THROW
;

1170 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


1171 
	~<bôs/uni°d.h
>

1174 
__END_DECLS


	@/usr/include/alloca.h

19 #i‚def 
_ALLOCA_H


20 
	#_ALLOCA_H
 1

	)

22 
	~<„©uªs.h
>

24 
	#__√ed_size_t


	)

25 
	~<°ddef.h
>

27 
	g__BEGIN_DECLS


30 #unde‡
Æloˇ


33 *
	$Æloˇ
 (
size_t
 
__size
Ë
__THROW
;

35 #ifdef 
__GNUC__


36 
	#Æloˇ
(
size
Ë
	`__buûtö_Æloˇ
 (size)

	)

39 
__END_DECLS


	@/usr/include/bits/confname.h

21 #i‚de‡
_UNISTD_H


28 
	m_PC_LINK_MAX
,

29 
	#_PC_LINK_MAX
 
_PC_LINK_MAX


	)

30 
	m_PC_MAX_CANON
,

31 
	#_PC_MAX_CANON
 
_PC_MAX_CANON


	)

32 
	m_PC_MAX_INPUT
,

33 
	#_PC_MAX_INPUT
 
_PC_MAX_INPUT


	)

34 
	m_PC_NAME_MAX
,

35 
	#_PC_NAME_MAX
 
_PC_NAME_MAX


	)

36 
	m_PC_PATH_MAX
,

37 
	#_PC_PATH_MAX
 
_PC_PATH_MAX


	)

38 
	m_PC_PIPE_BUF
,

39 
	#_PC_PIPE_BUF
 
_PC_PIPE_BUF


	)

40 
	m_PC_CHOWN_RESTRICTED
,

41 
	#_PC_CHOWN_RESTRICTED
 
_PC_CHOWN_RESTRICTED


	)

42 
	m_PC_NO_TRUNC
,

43 
	#_PC_NO_TRUNC
 
_PC_NO_TRUNC


	)

44 
	m_PC_VDISABLE
,

45 
	#_PC_VDISABLE
 
_PC_VDISABLE


	)

46 
	m_PC_SYNC_IO
,

47 
	#_PC_SYNC_IO
 
_PC_SYNC_IO


	)

48 
	m_PC_ASYNC_IO
,

49 
	#_PC_ASYNC_IO
 
_PC_ASYNC_IO


	)

50 
	m_PC_PRIO_IO
,

51 
	#_PC_PRIO_IO
 
_PC_PRIO_IO


	)

52 
	m_PC_SOCK_MAXBUF
,

53 
	#_PC_SOCK_MAXBUF
 
_PC_SOCK_MAXBUF


	)

54 
	m_PC_FILESIZEBITS
,

55 
	#_PC_FILESIZEBITS
 
_PC_FILESIZEBITS


	)

56 
	m_PC_REC_INCR_XFER_SIZE
,

57 
	#_PC_REC_INCR_XFER_SIZE
 
_PC_REC_INCR_XFER_SIZE


	)

58 
	m_PC_REC_MAX_XFER_SIZE
,

59 
	#_PC_REC_MAX_XFER_SIZE
 
_PC_REC_MAX_XFER_SIZE


	)

60 
	m_PC_REC_MIN_XFER_SIZE
,

61 
	#_PC_REC_MIN_XFER_SIZE
 
_PC_REC_MIN_XFER_SIZE


	)

62 
	m_PC_REC_XFER_ALIGN
,

63 
	#_PC_REC_XFER_ALIGN
 
_PC_REC_XFER_ALIGN


	)

64 
	m_PC_ALLOC_SIZE_MIN
,

65 
	#_PC_ALLOC_SIZE_MIN
 
_PC_ALLOC_SIZE_MIN


	)

66 
	m_PC_SYMLINK_MAX
,

67 
	#_PC_SYMLINK_MAX
 
_PC_SYMLINK_MAX


	)

68 
	m_PC_2_SYMLINKS


69 
	#_PC_2_SYMLINKS
 
_PC_2_SYMLINKS


	)

75 
	m_SC_ARG_MAX
,

76 
	#_SC_ARG_MAX
 
_SC_ARG_MAX


	)

77 
	m_SC_CHILD_MAX
,

78 
	#_SC_CHILD_MAX
 
_SC_CHILD_MAX


	)

79 
	m_SC_CLK_TCK
,

80 
	#_SC_CLK_TCK
 
_SC_CLK_TCK


	)

81 
	m_SC_NGROUPS_MAX
,

82 
	#_SC_NGROUPS_MAX
 
_SC_NGROUPS_MAX


	)

83 
	m_SC_OPEN_MAX
,

84 
	#_SC_OPEN_MAX
 
_SC_OPEN_MAX


	)

85 
	m_SC_STREAM_MAX
,

86 
	#_SC_STREAM_MAX
 
_SC_STREAM_MAX


	)

87 
	m_SC_TZNAME_MAX
,

88 
	#_SC_TZNAME_MAX
 
_SC_TZNAME_MAX


	)

89 
	m_SC_JOB_CONTROL
,

90 
	#_SC_JOB_CONTROL
 
_SC_JOB_CONTROL


	)

91 
	m_SC_SAVED_IDS
,

92 
	#_SC_SAVED_IDS
 
_SC_SAVED_IDS


	)

93 
	m_SC_REALTIME_SIGNALS
,

94 
	#_SC_REALTIME_SIGNALS
 
_SC_REALTIME_SIGNALS


	)

95 
	m_SC_PRIORITY_SCHEDULING
,

96 
	#_SC_PRIORITY_SCHEDULING
 
_SC_PRIORITY_SCHEDULING


	)

97 
	m_SC_TIMERS
,

98 
	#_SC_TIMERS
 
_SC_TIMERS


	)

99 
	m_SC_ASYNCHRONOUS_IO
,

100 
	#_SC_ASYNCHRONOUS_IO
 
_SC_ASYNCHRONOUS_IO


	)

101 
	m_SC_PRIORITIZED_IO
,

102 
	#_SC_PRIORITIZED_IO
 
_SC_PRIORITIZED_IO


	)

103 
	m_SC_SYNCHRONIZED_IO
,

104 
	#_SC_SYNCHRONIZED_IO
 
_SC_SYNCHRONIZED_IO


	)

105 
	m_SC_FSYNC
,

106 
	#_SC_FSYNC
 
_SC_FSYNC


	)

107 
	m_SC_MAPPED_FILES
,

108 
	#_SC_MAPPED_FILES
 
_SC_MAPPED_FILES


	)

109 
	m_SC_MEMLOCK
,

110 
	#_SC_MEMLOCK
 
_SC_MEMLOCK


	)

111 
	m_SC_MEMLOCK_RANGE
,

112 
	#_SC_MEMLOCK_RANGE
 
_SC_MEMLOCK_RANGE


	)

113 
	m_SC_MEMORY_PROTECTION
,

114 
	#_SC_MEMORY_PROTECTION
 
_SC_MEMORY_PROTECTION


	)

115 
	m_SC_MESSAGE_PASSING
,

116 
	#_SC_MESSAGE_PASSING
 
_SC_MESSAGE_PASSING


	)

117 
	m_SC_SEMAPHORES
,

118 
	#_SC_SEMAPHORES
 
_SC_SEMAPHORES


	)

119 
	m_SC_SHARED_MEMORY_OBJECTS
,

120 
	#_SC_SHARED_MEMORY_OBJECTS
 
_SC_SHARED_MEMORY_OBJECTS


	)

121 
	m_SC_AIO_LISTIO_MAX
,

122 
	#_SC_AIO_LISTIO_MAX
 
_SC_AIO_LISTIO_MAX


	)

123 
	m_SC_AIO_MAX
,

124 
	#_SC_AIO_MAX
 
_SC_AIO_MAX


	)

125 
	m_SC_AIO_PRIO_DELTA_MAX
,

126 
	#_SC_AIO_PRIO_DELTA_MAX
 
_SC_AIO_PRIO_DELTA_MAX


	)

127 
	m_SC_DELAYTIMER_MAX
,

128 
	#_SC_DELAYTIMER_MAX
 
_SC_DELAYTIMER_MAX


	)

129 
	m_SC_MQ_OPEN_MAX
,

130 
	#_SC_MQ_OPEN_MAX
 
_SC_MQ_OPEN_MAX


	)

131 
	m_SC_MQ_PRIO_MAX
,

132 
	#_SC_MQ_PRIO_MAX
 
_SC_MQ_PRIO_MAX


	)

133 
	m_SC_VERSION
,

134 
	#_SC_VERSION
 
_SC_VERSION


	)

135 
	m_SC_PAGESIZE
,

136 
	#_SC_PAGESIZE
 
_SC_PAGESIZE


	)

137 
	#_SC_PAGE_SIZE
 
_SC_PAGESIZE


	)

138 
	m_SC_RTSIG_MAX
,

139 
	#_SC_RTSIG_MAX
 
_SC_RTSIG_MAX


	)

140 
	m_SC_SEM_NSEMS_MAX
,

141 
	#_SC_SEM_NSEMS_MAX
 
_SC_SEM_NSEMS_MAX


	)

142 
	m_SC_SEM_VALUE_MAX
,

143 
	#_SC_SEM_VALUE_MAX
 
_SC_SEM_VALUE_MAX


	)

144 
	m_SC_SIGQUEUE_MAX
,

145 
	#_SC_SIGQUEUE_MAX
 
_SC_SIGQUEUE_MAX


	)

146 
	m_SC_TIMER_MAX
,

147 
	#_SC_TIMER_MAX
 
_SC_TIMER_MAX


	)

151 
	m_SC_BC_BASE_MAX
,

152 
	#_SC_BC_BASE_MAX
 
_SC_BC_BASE_MAX


	)

153 
	m_SC_BC_DIM_MAX
,

154 
	#_SC_BC_DIM_MAX
 
_SC_BC_DIM_MAX


	)

155 
	m_SC_BC_SCALE_MAX
,

156 
	#_SC_BC_SCALE_MAX
 
_SC_BC_SCALE_MAX


	)

157 
	m_SC_BC_STRING_MAX
,

158 
	#_SC_BC_STRING_MAX
 
_SC_BC_STRING_MAX


	)

159 
	m_SC_COLL_WEIGHTS_MAX
,

160 
	#_SC_COLL_WEIGHTS_MAX
 
_SC_COLL_WEIGHTS_MAX


	)

161 
	m_SC_EQUIV_CLASS_MAX
,

162 
	#_SC_EQUIV_CLASS_MAX
 
_SC_EQUIV_CLASS_MAX


	)

163 
	m_SC_EXPR_NEST_MAX
,

164 
	#_SC_EXPR_NEST_MAX
 
_SC_EXPR_NEST_MAX


	)

165 
	m_SC_LINE_MAX
,

166 
	#_SC_LINE_MAX
 
_SC_LINE_MAX


	)

167 
	m_SC_RE_DUP_MAX
,

168 
	#_SC_RE_DUP_MAX
 
_SC_RE_DUP_MAX


	)

169 
	m_SC_CHARCLASS_NAME_MAX
,

170 
	#_SC_CHARCLASS_NAME_MAX
 
_SC_CHARCLASS_NAME_MAX


	)

172 
	m_SC_2_VERSION
,

173 
	#_SC_2_VERSION
 
_SC_2_VERSION


	)

174 
	m_SC_2_C_BIND
,

175 
	#_SC_2_C_BIND
 
_SC_2_C_BIND


	)

176 
	m_SC_2_C_DEV
,

177 
	#_SC_2_C_DEV
 
_SC_2_C_DEV


	)

178 
	m_SC_2_FORT_DEV
,

179 
	#_SC_2_FORT_DEV
 
_SC_2_FORT_DEV


	)

180 
	m_SC_2_FORT_RUN
,

181 
	#_SC_2_FORT_RUN
 
_SC_2_FORT_RUN


	)

182 
	m_SC_2_SW_DEV
,

183 
	#_SC_2_SW_DEV
 
_SC_2_SW_DEV


	)

184 
	m_SC_2_LOCALEDEF
,

185 
	#_SC_2_LOCALEDEF
 
_SC_2_LOCALEDEF


	)

187 
	m_SC_PII
,

188 
	#_SC_PII
 
_SC_PII


	)

189 
	m_SC_PII_XTI
,

190 
	#_SC_PII_XTI
 
_SC_PII_XTI


	)

191 
	m_SC_PII_SOCKET
,

192 
	#_SC_PII_SOCKET
 
_SC_PII_SOCKET


	)

193 
	m_SC_PII_INTERNET
,

194 
	#_SC_PII_INTERNET
 
_SC_PII_INTERNET


	)

195 
	m_SC_PII_OSI
,

196 
	#_SC_PII_OSI
 
_SC_PII_OSI


	)

197 
	m_SC_POLL
,

198 
	#_SC_POLL
 
_SC_POLL


	)

199 
	m_SC_SELECT
,

200 
	#_SC_SELECT
 
_SC_SELECT


	)

201 
	m_SC_UIO_MAXIOV
,

202 
	#_SC_UIO_MAXIOV
 
_SC_UIO_MAXIOV


	)

203 
	m_SC_IOV_MAX
 = 
_SC_UIO_MAXIOV
,

204 
	#_SC_IOV_MAX
 
_SC_IOV_MAX


	)

205 
	m_SC_PII_INTERNET_STREAM
,

206 
	#_SC_PII_INTERNET_STREAM
 
_SC_PII_INTERNET_STREAM


	)

207 
	m_SC_PII_INTERNET_DGRAM
,

208 
	#_SC_PII_INTERNET_DGRAM
 
_SC_PII_INTERNET_DGRAM


	)

209 
	m_SC_PII_OSI_COTS
,

210 
	#_SC_PII_OSI_COTS
 
_SC_PII_OSI_COTS


	)

211 
	m_SC_PII_OSI_CLTS
,

212 
	#_SC_PII_OSI_CLTS
 
_SC_PII_OSI_CLTS


	)

213 
	m_SC_PII_OSI_M
,

214 
	#_SC_PII_OSI_M
 
_SC_PII_OSI_M


	)

215 
	m_SC_T_IOV_MAX
,

216 
	#_SC_T_IOV_MAX
 
_SC_T_IOV_MAX


	)

219 
	m_SC_THREADS
,

220 
	#_SC_THREADS
 
_SC_THREADS


	)

221 
	m_SC_THREAD_SAFE_FUNCTIONS
,

222 
	#_SC_THREAD_SAFE_FUNCTIONS
 
_SC_THREAD_SAFE_FUNCTIONS


	)

223 
	m_SC_GETGR_R_SIZE_MAX
,

224 
	#_SC_GETGR_R_SIZE_MAX
 
_SC_GETGR_R_SIZE_MAX


	)

225 
	m_SC_GETPW_R_SIZE_MAX
,

226 
	#_SC_GETPW_R_SIZE_MAX
 
_SC_GETPW_R_SIZE_MAX


	)

227 
	m_SC_LOGIN_NAME_MAX
,

228 
	#_SC_LOGIN_NAME_MAX
 
_SC_LOGIN_NAME_MAX


	)

229 
	m_SC_TTY_NAME_MAX
,

230 
	#_SC_TTY_NAME_MAX
 
_SC_TTY_NAME_MAX


	)

231 
	m_SC_THREAD_DESTRUCTOR_ITERATIONS
,

232 
	#_SC_THREAD_DESTRUCTOR_ITERATIONS
 
_SC_THREAD_DESTRUCTOR_ITERATIONS


	)

233 
	m_SC_THREAD_KEYS_MAX
,

234 
	#_SC_THREAD_KEYS_MAX
 
_SC_THREAD_KEYS_MAX


	)

235 
	m_SC_THREAD_STACK_MIN
,

236 
	#_SC_THREAD_STACK_MIN
 
_SC_THREAD_STACK_MIN


	)

237 
	m_SC_THREAD_THREADS_MAX
,

238 
	#_SC_THREAD_THREADS_MAX
 
_SC_THREAD_THREADS_MAX


	)

239 
	m_SC_THREAD_ATTR_STACKADDR
,

240 
	#_SC_THREAD_ATTR_STACKADDR
 
_SC_THREAD_ATTR_STACKADDR


	)

241 
	m_SC_THREAD_ATTR_STACKSIZE
,

242 
	#_SC_THREAD_ATTR_STACKSIZE
 
_SC_THREAD_ATTR_STACKSIZE


	)

243 
	m_SC_THREAD_PRIORITY_SCHEDULING
,

244 
	#_SC_THREAD_PRIORITY_SCHEDULING
 
_SC_THREAD_PRIORITY_SCHEDULING


	)

245 
	m_SC_THREAD_PRIO_INHERIT
,

246 
	#_SC_THREAD_PRIO_INHERIT
 
_SC_THREAD_PRIO_INHERIT


	)

247 
	m_SC_THREAD_PRIO_PROTECT
,

248 
	#_SC_THREAD_PRIO_PROTECT
 
_SC_THREAD_PRIO_PROTECT


	)

249 
	m_SC_THREAD_PROCESS_SHARED
,

250 
	#_SC_THREAD_PROCESS_SHARED
 
_SC_THREAD_PROCESS_SHARED


	)

252 
	m_SC_NPROCESSORS_CONF
,

253 
	#_SC_NPROCESSORS_CONF
 
_SC_NPROCESSORS_CONF


	)

254 
	m_SC_NPROCESSORS_ONLN
,

255 
	#_SC_NPROCESSORS_ONLN
 
_SC_NPROCESSORS_ONLN


	)

256 
	m_SC_PHYS_PAGES
,

257 
	#_SC_PHYS_PAGES
 
_SC_PHYS_PAGES


	)

258 
	m_SC_AVPHYS_PAGES
,

259 
	#_SC_AVPHYS_PAGES
 
_SC_AVPHYS_PAGES


	)

260 
	m_SC_ATEXIT_MAX
,

261 
	#_SC_ATEXIT_MAX
 
_SC_ATEXIT_MAX


	)

262 
	m_SC_PASS_MAX
,

263 
	#_SC_PASS_MAX
 
_SC_PASS_MAX


	)

265 
	m_SC_XOPEN_VERSION
,

266 
	#_SC_XOPEN_VERSION
 
_SC_XOPEN_VERSION


	)

267 
	m_SC_XOPEN_XCU_VERSION
,

268 
	#_SC_XOPEN_XCU_VERSION
 
_SC_XOPEN_XCU_VERSION


	)

269 
	m_SC_XOPEN_UNIX
,

270 
	#_SC_XOPEN_UNIX
 
_SC_XOPEN_UNIX


	)

271 
	m_SC_XOPEN_CRYPT
,

272 
	#_SC_XOPEN_CRYPT
 
_SC_XOPEN_CRYPT


	)

273 
	m_SC_XOPEN_ENH_I18N
,

274 
	#_SC_XOPEN_ENH_I18N
 
_SC_XOPEN_ENH_I18N


	)

275 
	m_SC_XOPEN_SHM
,

276 
	#_SC_XOPEN_SHM
 
_SC_XOPEN_SHM


	)

278 
	m_SC_2_CHAR_TERM
,

279 
	#_SC_2_CHAR_TERM
 
_SC_2_CHAR_TERM


	)

280 
	m_SC_2_C_VERSION
,

281 
	#_SC_2_C_VERSION
 
_SC_2_C_VERSION


	)

282 
	m_SC_2_UPE
,

283 
	#_SC_2_UPE
 
_SC_2_UPE


	)

285 
	m_SC_XOPEN_XPG2
,

286 
	#_SC_XOPEN_XPG2
 
_SC_XOPEN_XPG2


	)

287 
	m_SC_XOPEN_XPG3
,

288 
	#_SC_XOPEN_XPG3
 
_SC_XOPEN_XPG3


	)

289 
	m_SC_XOPEN_XPG4
,

290 
	#_SC_XOPEN_XPG4
 
_SC_XOPEN_XPG4


	)

292 
	m_SC_CHAR_BIT
,

293 
	#_SC_CHAR_BIT
 
_SC_CHAR_BIT


	)

294 
	m_SC_CHAR_MAX
,

295 
	#_SC_CHAR_MAX
 
_SC_CHAR_MAX


	)

296 
	m_SC_CHAR_MIN
,

297 
	#_SC_CHAR_MIN
 
_SC_CHAR_MIN


	)

298 
	m_SC_INT_MAX
,

299 
	#_SC_INT_MAX
 
_SC_INT_MAX


	)

300 
	m_SC_INT_MIN
,

301 
	#_SC_INT_MIN
 
_SC_INT_MIN


	)

302 
	m_SC_LONG_BIT
,

303 
	#_SC_LONG_BIT
 
_SC_LONG_BIT


	)

304 
	m_SC_WORD_BIT
,

305 
	#_SC_WORD_BIT
 
_SC_WORD_BIT


	)

306 
	m_SC_MB_LEN_MAX
,

307 
	#_SC_MB_LEN_MAX
 
_SC_MB_LEN_MAX


	)

308 
	m_SC_NZERO
,

309 
	#_SC_NZERO
 
_SC_NZERO


	)

310 
	m_SC_SSIZE_MAX
,

311 
	#_SC_SSIZE_MAX
 
_SC_SSIZE_MAX


	)

312 
	m_SC_SCHAR_MAX
,

313 
	#_SC_SCHAR_MAX
 
_SC_SCHAR_MAX


	)

314 
	m_SC_SCHAR_MIN
,

315 
	#_SC_SCHAR_MIN
 
_SC_SCHAR_MIN


	)

316 
	m_SC_SHRT_MAX
,

317 
	#_SC_SHRT_MAX
 
_SC_SHRT_MAX


	)

318 
	m_SC_SHRT_MIN
,

319 
	#_SC_SHRT_MIN
 
_SC_SHRT_MIN


	)

320 
	m_SC_UCHAR_MAX
,

321 
	#_SC_UCHAR_MAX
 
_SC_UCHAR_MAX


	)

322 
	m_SC_UINT_MAX
,

323 
	#_SC_UINT_MAX
 
_SC_UINT_MAX


	)

324 
	m_SC_ULONG_MAX
,

325 
	#_SC_ULONG_MAX
 
_SC_ULONG_MAX


	)

326 
	m_SC_USHRT_MAX
,

327 
	#_SC_USHRT_MAX
 
_SC_USHRT_MAX


	)

329 
	m_SC_NL_ARGMAX
,

330 
	#_SC_NL_ARGMAX
 
_SC_NL_ARGMAX


	)

331 
	m_SC_NL_LANGMAX
,

332 
	#_SC_NL_LANGMAX
 
_SC_NL_LANGMAX


	)

333 
	m_SC_NL_MSGMAX
,

334 
	#_SC_NL_MSGMAX
 
_SC_NL_MSGMAX


	)

335 
	m_SC_NL_NMAX
,

336 
	#_SC_NL_NMAX
 
_SC_NL_NMAX


	)

337 
	m_SC_NL_SETMAX
,

338 
	#_SC_NL_SETMAX
 
_SC_NL_SETMAX


	)

339 
	m_SC_NL_TEXTMAX
,

340 
	#_SC_NL_TEXTMAX
 
_SC_NL_TEXTMAX


	)

342 
	m_SC_XBS5_ILP32_OFF32
,

343 
	#_SC_XBS5_ILP32_OFF32
 
_SC_XBS5_ILP32_OFF32


	)

344 
	m_SC_XBS5_ILP32_OFFBIG
,

345 
	#_SC_XBS5_ILP32_OFFBIG
 
_SC_XBS5_ILP32_OFFBIG


	)

346 
	m_SC_XBS5_LP64_OFF64
,

347 
	#_SC_XBS5_LP64_OFF64
 
_SC_XBS5_LP64_OFF64


	)

348 
	m_SC_XBS5_LPBIG_OFFBIG
,

349 
	#_SC_XBS5_LPBIG_OFFBIG
 
_SC_XBS5_LPBIG_OFFBIG


	)

351 
	m_SC_XOPEN_LEGACY
,

352 
	#_SC_XOPEN_LEGACY
 
_SC_XOPEN_LEGACY


	)

353 
	m_SC_XOPEN_REALTIME
,

354 
	#_SC_XOPEN_REALTIME
 
_SC_XOPEN_REALTIME


	)

355 
	m_SC_XOPEN_REALTIME_THREADS
,

356 
	#_SC_XOPEN_REALTIME_THREADS
 
_SC_XOPEN_REALTIME_THREADS


	)

358 
	m_SC_ADVISORY_INFO
,

359 
	#_SC_ADVISORY_INFO
 
_SC_ADVISORY_INFO


	)

360 
	m_SC_BARRIERS
,

361 
	#_SC_BARRIERS
 
_SC_BARRIERS


	)

362 
	m_SC_BASE
,

363 
	#_SC_BASE
 
_SC_BASE


	)

364 
	m_SC_C_LANG_SUPPORT
,

365 
	#_SC_C_LANG_SUPPORT
 
_SC_C_LANG_SUPPORT


	)

366 
	m_SC_C_LANG_SUPPORT_R
,

367 
	#_SC_C_LANG_SUPPORT_R
 
_SC_C_LANG_SUPPORT_R


	)

368 
	m_SC_CLOCK_SELECTION
,

369 
	#_SC_CLOCK_SELECTION
 
_SC_CLOCK_SELECTION


	)

370 
	m_SC_CPUTIME
,

371 
	#_SC_CPUTIME
 
_SC_CPUTIME


	)

372 
	m_SC_THREAD_CPUTIME
,

373 
	#_SC_THREAD_CPUTIME
 
_SC_THREAD_CPUTIME


	)

374 
	m_SC_DEVICE_IO
,

375 
	#_SC_DEVICE_IO
 
_SC_DEVICE_IO


	)

376 
	m_SC_DEVICE_SPECIFIC
,

377 
	#_SC_DEVICE_SPECIFIC
 
_SC_DEVICE_SPECIFIC


	)

378 
	m_SC_DEVICE_SPECIFIC_R
,

379 
	#_SC_DEVICE_SPECIFIC_R
 
_SC_DEVICE_SPECIFIC_R


	)

380 
	m_SC_FD_MGMT
,

381 
	#_SC_FD_MGMT
 
_SC_FD_MGMT


	)

382 
	m_SC_FIFO
,

383 
	#_SC_FIFO
 
_SC_FIFO


	)

384 
	m_SC_PIPE
,

385 
	#_SC_PIPE
 
_SC_PIPE


	)

386 
	m_SC_FILE_ATTRIBUTES
,

387 
	#_SC_FILE_ATTRIBUTES
 
_SC_FILE_ATTRIBUTES


	)

388 
	m_SC_FILE_LOCKING
,

389 
	#_SC_FILE_LOCKING
 
_SC_FILE_LOCKING


	)

390 
	m_SC_FILE_SYSTEM
,

391 
	#_SC_FILE_SYSTEM
 
_SC_FILE_SYSTEM


	)

392 
	m_SC_MONOTONIC_CLOCK
,

393 
	#_SC_MONOTONIC_CLOCK
 
_SC_MONOTONIC_CLOCK


	)

394 
	m_SC_MULTI_PROCESS
,

395 
	#_SC_MULTI_PROCESS
 
_SC_MULTI_PROCESS


	)

396 
	m_SC_SINGLE_PROCESS
,

397 
	#_SC_SINGLE_PROCESS
 
_SC_SINGLE_PROCESS


	)

398 
	m_SC_NETWORKING
,

399 
	#_SC_NETWORKING
 
_SC_NETWORKING


	)

400 
	m_SC_READER_WRITER_LOCKS
,

401 
	#_SC_READER_WRITER_LOCKS
 
_SC_READER_WRITER_LOCKS


	)

402 
	m_SC_SPIN_LOCKS
,

403 
	#_SC_SPIN_LOCKS
 
_SC_SPIN_LOCKS


	)

404 
	m_SC_REGEXP
,

405 
	#_SC_REGEXP
 
_SC_REGEXP


	)

406 
	m_SC_REGEX_VERSION
,

407 
	#_SC_REGEX_VERSION
 
_SC_REGEX_VERSION


	)

408 
	m_SC_SHELL
,

409 
	#_SC_SHELL
 
_SC_SHELL


	)

410 
	m_SC_SIGNALS
,

411 
	#_SC_SIGNALS
 
_SC_SIGNALS


	)

412 
	m_SC_SPAWN
,

413 
	#_SC_SPAWN
 
_SC_SPAWN


	)

414 
	m_SC_SPORADIC_SERVER
,

415 
	#_SC_SPORADIC_SERVER
 
_SC_SPORADIC_SERVER


	)

416 
	m_SC_THREAD_SPORADIC_SERVER
,

417 
	#_SC_THREAD_SPORADIC_SERVER
 
_SC_THREAD_SPORADIC_SERVER


	)

418 
	m_SC_SYSTEM_DATABASE
,

419 
	#_SC_SYSTEM_DATABASE
 
_SC_SYSTEM_DATABASE


	)

420 
	m_SC_SYSTEM_DATABASE_R
,

421 
	#_SC_SYSTEM_DATABASE_R
 
_SC_SYSTEM_DATABASE_R


	)

422 
	m_SC_TIMEOUTS
,

423 
	#_SC_TIMEOUTS
 
_SC_TIMEOUTS


	)

424 
	m_SC_TYPED_MEMORY_OBJECTS
,

425 
	#_SC_TYPED_MEMORY_OBJECTS
 
_SC_TYPED_MEMORY_OBJECTS


	)

426 
	m_SC_USER_GROUPS
,

427 
	#_SC_USER_GROUPS
 
_SC_USER_GROUPS


	)

428 
	m_SC_USER_GROUPS_R
,

429 
	#_SC_USER_GROUPS_R
 
_SC_USER_GROUPS_R


	)

430 
	m_SC_2_PBS
,

431 
	#_SC_2_PBS
 
_SC_2_PBS


	)

432 
	m_SC_2_PBS_ACCOUNTING
,

433 
	#_SC_2_PBS_ACCOUNTING
 
_SC_2_PBS_ACCOUNTING


	)

434 
	m_SC_2_PBS_LOCATE
,

435 
	#_SC_2_PBS_LOCATE
 
_SC_2_PBS_LOCATE


	)

436 
	m_SC_2_PBS_MESSAGE
,

437 
	#_SC_2_PBS_MESSAGE
 
_SC_2_PBS_MESSAGE


	)

438 
	m_SC_2_PBS_TRACK
,

439 
	#_SC_2_PBS_TRACK
 
_SC_2_PBS_TRACK


	)

440 
	m_SC_SYMLOOP_MAX
,

441 
	#_SC_SYMLOOP_MAX
 
_SC_SYMLOOP_MAX


	)

442 
	m_SC_STREAMS
,

443 
	#_SC_STREAMS
 
_SC_STREAMS


	)

444 
	m_SC_2_PBS_CHECKPOINT
,

445 
	#_SC_2_PBS_CHECKPOINT
 
_SC_2_PBS_CHECKPOINT


	)

447 
	m_SC_V6_ILP32_OFF32
,

448 
	#_SC_V6_ILP32_OFF32
 
_SC_V6_ILP32_OFF32


	)

449 
	m_SC_V6_ILP32_OFFBIG
,

450 
	#_SC_V6_ILP32_OFFBIG
 
_SC_V6_ILP32_OFFBIG


	)

451 
	m_SC_V6_LP64_OFF64
,

452 
	#_SC_V6_LP64_OFF64
 
_SC_V6_LP64_OFF64


	)

453 
	m_SC_V6_LPBIG_OFFBIG
,

454 
	#_SC_V6_LPBIG_OFFBIG
 
_SC_V6_LPBIG_OFFBIG


	)

456 
	m_SC_HOST_NAME_MAX
,

457 
	#_SC_HOST_NAME_MAX
 
_SC_HOST_NAME_MAX


	)

458 
	m_SC_TRACE
,

459 
	#_SC_TRACE
 
_SC_TRACE


	)

460 
	m_SC_TRACE_EVENT_FILTER
,

461 
	#_SC_TRACE_EVENT_FILTER
 
_SC_TRACE_EVENT_FILTER


	)

462 
	m_SC_TRACE_INHERIT
,

463 
	#_SC_TRACE_INHERIT
 
_SC_TRACE_INHERIT


	)

464 
	m_SC_TRACE_LOG
,

465 
	#_SC_TRACE_LOG
 
_SC_TRACE_LOG


	)

467 
	m_SC_LEVEL1_ICACHE_SIZE
,

468 
	#_SC_LEVEL1_ICACHE_SIZE
 
_SC_LEVEL1_ICACHE_SIZE


	)

469 
	m_SC_LEVEL1_ICACHE_ASSOC
,

470 
	#_SC_LEVEL1_ICACHE_ASSOC
 
_SC_LEVEL1_ICACHE_ASSOC


	)

471 
	m_SC_LEVEL1_ICACHE_LINESIZE
,

472 
	#_SC_LEVEL1_ICACHE_LINESIZE
 
_SC_LEVEL1_ICACHE_LINESIZE


	)

473 
	m_SC_LEVEL1_DCACHE_SIZE
,

474 
	#_SC_LEVEL1_DCACHE_SIZE
 
_SC_LEVEL1_DCACHE_SIZE


	)

475 
	m_SC_LEVEL1_DCACHE_ASSOC
,

476 
	#_SC_LEVEL1_DCACHE_ASSOC
 
_SC_LEVEL1_DCACHE_ASSOC


	)

477 
	m_SC_LEVEL1_DCACHE_LINESIZE
,

478 
	#_SC_LEVEL1_DCACHE_LINESIZE
 
_SC_LEVEL1_DCACHE_LINESIZE


	)

479 
	m_SC_LEVEL2_CACHE_SIZE
,

480 
	#_SC_LEVEL2_CACHE_SIZE
 
_SC_LEVEL2_CACHE_SIZE


	)

481 
	m_SC_LEVEL2_CACHE_ASSOC
,

482 
	#_SC_LEVEL2_CACHE_ASSOC
 
_SC_LEVEL2_CACHE_ASSOC


	)

483 
	m_SC_LEVEL2_CACHE_LINESIZE
,

484 
	#_SC_LEVEL2_CACHE_LINESIZE
 
_SC_LEVEL2_CACHE_LINESIZE


	)

485 
	m_SC_LEVEL3_CACHE_SIZE
,

486 
	#_SC_LEVEL3_CACHE_SIZE
 
_SC_LEVEL3_CACHE_SIZE


	)

487 
	m_SC_LEVEL3_CACHE_ASSOC
,

488 
	#_SC_LEVEL3_CACHE_ASSOC
 
_SC_LEVEL3_CACHE_ASSOC


	)

489 
	m_SC_LEVEL3_CACHE_LINESIZE
,

490 
	#_SC_LEVEL3_CACHE_LINESIZE
 
_SC_LEVEL3_CACHE_LINESIZE


	)

491 
	m_SC_LEVEL4_CACHE_SIZE
,

492 
	#_SC_LEVEL4_CACHE_SIZE
 
_SC_LEVEL4_CACHE_SIZE


	)

493 
	m_SC_LEVEL4_CACHE_ASSOC
,

494 
	#_SC_LEVEL4_CACHE_ASSOC
 
_SC_LEVEL4_CACHE_ASSOC


	)

495 
	m_SC_LEVEL4_CACHE_LINESIZE
,

496 
	#_SC_LEVEL4_CACHE_LINESIZE
 
_SC_LEVEL4_CACHE_LINESIZE


	)

499 
	m_SC_IPV6
 = 
_SC_LEVEL1_ICACHE_SIZE
 + 50,

500 
	#_SC_IPV6
 
_SC_IPV6


	)

501 
	m_SC_RAW_SOCKETS
,

502 
	#_SC_RAW_SOCKETS
 
_SC_RAW_SOCKETS


	)

504 
	m_SC_V7_ILP32_OFF32
,

505 
	#_SC_V7_ILP32_OFF32
 
_SC_V7_ILP32_OFF32


	)

506 
	m_SC_V7_ILP32_OFFBIG
,

507 
	#_SC_V7_ILP32_OFFBIG
 
_SC_V7_ILP32_OFFBIG


	)

508 
	m_SC_V7_LP64_OFF64
,

509 
	#_SC_V7_LP64_OFF64
 
_SC_V7_LP64_OFF64


	)

510 
	m_SC_V7_LPBIG_OFFBIG
,

511 
	#_SC_V7_LPBIG_OFFBIG
 
_SC_V7_LPBIG_OFFBIG


	)

513 
	m_SC_SS_REPL_MAX
,

514 
	#_SC_SS_REPL_MAX
 
_SC_SS_REPL_MAX


	)

516 
	m_SC_TRACE_EVENT_NAME_MAX
,

517 
	#_SC_TRACE_EVENT_NAME_MAX
 
_SC_TRACE_EVENT_NAME_MAX


	)

518 
	m_SC_TRACE_NAME_MAX
,

519 
	#_SC_TRACE_NAME_MAX
 
_SC_TRACE_NAME_MAX


	)

520 
	m_SC_TRACE_SYS_MAX
,

521 
	#_SC_TRACE_SYS_MAX
 
_SC_TRACE_SYS_MAX


	)

522 
	m_SC_TRACE_USER_EVENT_MAX
,

523 
	#_SC_TRACE_USER_EVENT_MAX
 
_SC_TRACE_USER_EVENT_MAX


	)

525 
	m_SC_XOPEN_STREAMS
,

526 
	#_SC_XOPEN_STREAMS
 
_SC_XOPEN_STREAMS


	)

528 
	m_SC_THREAD_ROBUST_PRIO_INHERIT
,

529 
	#_SC_THREAD_ROBUST_PRIO_INHERIT
 
_SC_THREAD_ROBUST_PRIO_INHERIT


	)

530 
	m_SC_THREAD_ROBUST_PRIO_PROTECT


531 
	#_SC_THREAD_ROBUST_PRIO_PROTECT
 
_SC_THREAD_ROBUST_PRIO_PROTECT


	)

537 
	m_CS_PATH
,

538 
	#_CS_PATH
 
_CS_PATH


	)

540 
	m_CS_V6_WIDTH_RESTRICTED_ENVS
,

541 
	#_CS_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

542 
	#_CS_POSIX_V6_WIDTH_RESTRICTED_ENVS
 
_CS_V6_WIDTH_RESTRICTED_ENVS


	)

544 
	m_CS_GNU_LIBC_VERSION
,

545 
	#_CS_GNU_LIBC_VERSION
 
_CS_GNU_LIBC_VERSION


	)

546 
	m_CS_GNU_LIBPTHREAD_VERSION
,

547 
	#_CS_GNU_LIBPTHREAD_VERSION
 
_CS_GNU_LIBPTHREAD_VERSION


	)

549 
	m_CS_V5_WIDTH_RESTRICTED_ENVS
,

550 
	#_CS_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

551 
	#_CS_POSIX_V5_WIDTH_RESTRICTED_ENVS
 
_CS_V5_WIDTH_RESTRICTED_ENVS


	)

553 
	m_CS_V7_WIDTH_RESTRICTED_ENVS
,

554 
	#_CS_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

555 
	#_CS_POSIX_V7_WIDTH_RESTRICTED_ENVS
 
_CS_V7_WIDTH_RESTRICTED_ENVS


	)

557 
	m_CS_LFS_CFLAGS
 = 1000,

558 
	#_CS_LFS_CFLAGS
 
_CS_LFS_CFLAGS


	)

559 
	m_CS_LFS_LDFLAGS
,

560 
	#_CS_LFS_LDFLAGS
 
_CS_LFS_LDFLAGS


	)

561 
	m_CS_LFS_LIBS
,

562 
	#_CS_LFS_LIBS
 
_CS_LFS_LIBS


	)

563 
	m_CS_LFS_LINTFLAGS
,

564 
	#_CS_LFS_LINTFLAGS
 
_CS_LFS_LINTFLAGS


	)

565 
	m_CS_LFS64_CFLAGS
,

566 
	#_CS_LFS64_CFLAGS
 
_CS_LFS64_CFLAGS


	)

567 
	m_CS_LFS64_LDFLAGS
,

568 
	#_CS_LFS64_LDFLAGS
 
_CS_LFS64_LDFLAGS


	)

569 
	m_CS_LFS64_LIBS
,

570 
	#_CS_LFS64_LIBS
 
_CS_LFS64_LIBS


	)

571 
	m_CS_LFS64_LINTFLAGS
,

572 
	#_CS_LFS64_LINTFLAGS
 
_CS_LFS64_LINTFLAGS


	)

574 
	m_CS_XBS5_ILP32_OFF32_CFLAGS
 = 1100,

575 
	#_CS_XBS5_ILP32_OFF32_CFLAGS
 
_CS_XBS5_ILP32_OFF32_CFLAGS


	)

576 
	m_CS_XBS5_ILP32_OFF32_LDFLAGS
,

577 
	#_CS_XBS5_ILP32_OFF32_LDFLAGS
 
_CS_XBS5_ILP32_OFF32_LDFLAGS


	)

578 
	m_CS_XBS5_ILP32_OFF32_LIBS
,

579 
	#_CS_XBS5_ILP32_OFF32_LIBS
 
_CS_XBS5_ILP32_OFF32_LIBS


	)

580 
	m_CS_XBS5_ILP32_OFF32_LINTFLAGS
,

581 
	#_CS_XBS5_ILP32_OFF32_LINTFLAGS
 
_CS_XBS5_ILP32_OFF32_LINTFLAGS


	)

582 
	m_CS_XBS5_ILP32_OFFBIG_CFLAGS
,

583 
	#_CS_XBS5_ILP32_OFFBIG_CFLAGS
 
_CS_XBS5_ILP32_OFFBIG_CFLAGS


	)

584 
	m_CS_XBS5_ILP32_OFFBIG_LDFLAGS
,

585 
	#_CS_XBS5_ILP32_OFFBIG_LDFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LDFLAGS


	)

586 
	m_CS_XBS5_ILP32_OFFBIG_LIBS
,

587 
	#_CS_XBS5_ILP32_OFFBIG_LIBS
 
_CS_XBS5_ILP32_OFFBIG_LIBS


	)

588 
	m_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
,

589 
	#_CS_XBS5_ILP32_OFFBIG_LINTFLAGS
 
_CS_XBS5_ILP32_OFFBIG_LINTFLAGS


	)

590 
	m_CS_XBS5_LP64_OFF64_CFLAGS
,

591 
	#_CS_XBS5_LP64_OFF64_CFLAGS
 
_CS_XBS5_LP64_OFF64_CFLAGS


	)

592 
	m_CS_XBS5_LP64_OFF64_LDFLAGS
,

593 
	#_CS_XBS5_LP64_OFF64_LDFLAGS
 
_CS_XBS5_LP64_OFF64_LDFLAGS


	)

594 
	m_CS_XBS5_LP64_OFF64_LIBS
,

595 
	#_CS_XBS5_LP64_OFF64_LIBS
 
_CS_XBS5_LP64_OFF64_LIBS


	)

596 
	m_CS_XBS5_LP64_OFF64_LINTFLAGS
,

597 
	#_CS_XBS5_LP64_OFF64_LINTFLAGS
 
_CS_XBS5_LP64_OFF64_LINTFLAGS


	)

598 
	m_CS_XBS5_LPBIG_OFFBIG_CFLAGS
,

599 
	#_CS_XBS5_LPBIG_OFFBIG_CFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_CFLAGS


	)

600 
	m_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
,

601 
	#_CS_XBS5_LPBIG_OFFBIG_LDFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LDFLAGS


	)

602 
	m_CS_XBS5_LPBIG_OFFBIG_LIBS
,

603 
	#_CS_XBS5_LPBIG_OFFBIG_LIBS
 
_CS_XBS5_LPBIG_OFFBIG_LIBS


	)

604 
	m_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
,

605 
	#_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS
 
_CS_XBS5_LPBIG_OFFBIG_LINTFLAGS


	)

607 
	m_CS_POSIX_V6_ILP32_OFF32_CFLAGS
,

608 
	#_CS_POSIX_V6_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_CFLAGS


	)

609 
	m_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
,

610 
	#_CS_POSIX_V6_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LDFLAGS


	)

611 
	m_CS_POSIX_V6_ILP32_OFF32_LIBS
,

612 
	#_CS_POSIX_V6_ILP32_OFF32_LIBS
 
_CS_POSIX_V6_ILP32_OFF32_LIBS


	)

613 
	m_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
,

614 
	#_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFF32_LINTFLAGS


	)

615 
	m_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
,

616 
	#_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_CFLAGS


	)

617 
	m_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
,

618 
	#_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LDFLAGS


	)

619 
	m_CS_POSIX_V6_ILP32_OFFBIG_LIBS
,

620 
	#_CS_POSIX_V6_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V6_ILP32_OFFBIG_LIBS


	)

621 
	m_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
,

622 
	#_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_ILP32_OFFBIG_LINTFLAGS


	)

623 
	m_CS_POSIX_V6_LP64_OFF64_CFLAGS
,

624 
	#_CS_POSIX_V6_LP64_OFF64_CFLAGS
 
_CS_POSIX_V6_LP64_OFF64_CFLAGS


	)

625 
	m_CS_POSIX_V6_LP64_OFF64_LDFLAGS
,

626 
	#_CS_POSIX_V6_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LDFLAGS


	)

627 
	m_CS_POSIX_V6_LP64_OFF64_LIBS
,

628 
	#_CS_POSIX_V6_LP64_OFF64_LIBS
 
_CS_POSIX_V6_LP64_OFF64_LIBS


	)

629 
	m_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
,

630 
	#_CS_POSIX_V6_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V6_LP64_OFF64_LINTFLAGS


	)

631 
	m_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
,

632 
	#_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_CFLAGS


	)

633 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
,

634 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LDFLAGS


	)

635 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
,

636 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LIBS


	)

637 
	m_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
,

638 
	#_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V6_LPBIG_OFFBIG_LINTFLAGS


	)

640 
	m_CS_POSIX_V7_ILP32_OFF32_CFLAGS
,

641 
	#_CS_POSIX_V7_ILP32_OFF32_CFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_CFLAGS


	)

642 
	m_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
,

643 
	#_CS_POSIX_V7_ILP32_OFF32_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LDFLAGS


	)

644 
	m_CS_POSIX_V7_ILP32_OFF32_LIBS
,

645 
	#_CS_POSIX_V7_ILP32_OFF32_LIBS
 
_CS_POSIX_V7_ILP32_OFF32_LIBS


	)

646 
	m_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
,

647 
	#_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFF32_LINTFLAGS


	)

648 
	m_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
,

649 
	#_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_CFLAGS


	)

650 
	m_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
,

651 
	#_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LDFLAGS


	)

652 
	m_CS_POSIX_V7_ILP32_OFFBIG_LIBS
,

653 
	#_CS_POSIX_V7_ILP32_OFFBIG_LIBS
 
_CS_POSIX_V7_ILP32_OFFBIG_LIBS


	)

654 
	m_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
,

655 
	#_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_ILP32_OFFBIG_LINTFLAGS


	)

656 
	m_CS_POSIX_V7_LP64_OFF64_CFLAGS
,

657 
	#_CS_POSIX_V7_LP64_OFF64_CFLAGS
 
_CS_POSIX_V7_LP64_OFF64_CFLAGS


	)

658 
	m_CS_POSIX_V7_LP64_OFF64_LDFLAGS
,

659 
	#_CS_POSIX_V7_LP64_OFF64_LDFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LDFLAGS


	)

660 
	m_CS_POSIX_V7_LP64_OFF64_LIBS
,

661 
	#_CS_POSIX_V7_LP64_OFF64_LIBS
 
_CS_POSIX_V7_LP64_OFF64_LIBS


	)

662 
	m_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
,

663 
	#_CS_POSIX_V7_LP64_OFF64_LINTFLAGS
 
_CS_POSIX_V7_LP64_OFF64_LINTFLAGS


	)

664 
	m_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
,

665 
	#_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_CFLAGS


	)

666 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
,

667 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LDFLAGS


	)

668 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
,

669 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LIBS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LIBS


	)

670 
	m_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
,

671 
	#_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS
 
_CS_POSIX_V7_LPBIG_OFFBIG_LINTFLAGS


	)

673 
	m_CS_V6_ENV
,

674 
	#_CS_V6_ENV
 
_CS_V6_ENV


	)

675 
	m_CS_V7_ENV


676 
	#_CS_V7_ENV
 
_CS_V7_ENV


	)

	@/usr/include/bits/environments.h

19 #i‚de‡
_UNISTD_H


23 
	~<bôs/w‹dsize.h
>

43 #i‡
__WORDSIZE
 == 64

57 
	#_POSIX_V7_LPBIG_OFFBIG
 -1

	)

58 
	#_POSIX_V6_LPBIG_OFFBIG
 -1

	)

59 
	#_XBS5_LPBIG_OFFBIG
 -1

	)

62 
	#_POSIX_V7_LP64_OFF64
 1

	)

63 
	#_POSIX_V6_LP64_OFF64
 1

	)

64 
	#_XBS5_LP64_OFF64
 1

	)

70 
	#_POSIX_V7_ILP32_OFF32
 1

	)

71 
	#_POSIX_V7_ILP32_OFFBIG
 1

	)

72 
	#_POSIX_V6_ILP32_OFF32
 1

	)

73 
	#_POSIX_V6_ILP32_OFFBIG
 1

	)

74 
	#_XBS5_ILP32_OFF32
 1

	)

75 
	#_XBS5_ILP32_OFFBIG
 1

	)

92 
	#__ILP32_OFF32_CFLAGS
 "-m32"

	)

93 
	#__ILP32_OFFBIG_CFLAGS
 "-m32 -D_LARGEFILE_SOURCE -D_FILE_OFFSET_BITS=64"

	)

94 
	#__ILP32_OFF32_LDFLAGS
 "-m32"

	)

95 
	#__ILP32_OFFBIG_LDFLAGS
 "-m32"

	)

96 
	#__LP64_OFF64_CFLAGS
 "-m64"

	)

97 
	#__LP64_OFF64_LDFLAGS
 "-m64"

	)

	@/usr/include/bits/errno.h

20 #ifde‡
_ERRNO_H


22 #unde‡
EDOM


23 #unde‡
EILSEQ


24 #unde‡
ERANGE


25 
	~<löux/î∫o.h
>

28 
	#ENOTSUP
 
EOPNOTSUPP


	)

31 #i‚de‡
ECANCELED


32 
	#ECANCELED
 125

	)

36 #i‚de‡
EOWNERDEAD


37 
	#EOWNERDEAD
 130

	)

38 
	#ENOTRECOVERABLE
 131

	)

41 #i‚de‡
ERFKILL


42 
	#ERFKILL
 132

	)

45 #i‚de‡
__ASSEMBLER__


47 *
	$__î∫o_loˇti⁄
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

49 #i‡!
deföed
 
_LIBC
 || deföed 
_LIBC_REENTRANT


51 
	#î∫o
 (*
	`__î∫o_loˇti⁄
 ())

	)

56 #i‡!
deföed
 
_ERRNO_H
 && deföed 
__√ed_Em©h


60 
	#EDOM
 33

	)

61 
	#EILSEQ
 84

	)

62 
	#ERANGE
 34

	)

	@/usr/include/bits/fcntl.h

21 #i‚def 
_FCNTL_H


25 
	~<sys/ty≥s.h
>

26 
	~<bôs/w‹dsize.h
>

27 #ifde‡
__USE_GNU


28 
	~<bôs/uio.h
>

34 
	#O_ACCMODE
 0003

	)

35 
	#O_RDONLY
 00

	)

36 
	#O_WRONLY
 01

	)

37 
	#O_RDWR
 02

	)

38 
	#O_CREAT
 0100

	)

39 
	#O_EXCL
 0200

	)

40 
	#O_NOCTTY
 0400

	)

41 
	#O_TRUNC
 01000

	)

42 
	#O_APPEND
 02000

	)

43 
	#O_NONBLOCK
 04000

	)

44 
	#O_NDELAY
 
O_NONBLOCK


	)

45 
	#O_SYNC
 04010000

	)

46 
	#O_FSYNC
 
O_SYNC


	)

47 
	#O_ASYNC
 020000

	)

49 #ifde‡
__USE_XOPEN2K8


50 
	#O_DIRECTORY
 0200000

	)

51 
	#O_NOFOLLOW
 0400000

	)

52 
	#O_CLOEXEC
 02000000

	)

54 #ifde‡
__USE_GNU


55 
	#O_DIRECT
 040000

	)

56 
	#O_NOATIME
 01000000

	)

57 
	#O_PATH
 010000000

	)

63 #i‡
deföed
 
__USE_POSIX199309
 || deföed 
__USE_UNIX98


64 
	#O_DSYNC
 010000

	)

65 
	#O_RSYNC
 
O_SYNC


	)

68 #ifde‡
__USE_LARGEFILE64


69 #i‡
__WORDSIZE
 == 64

70 
	#O_LARGEFILE
 0

	)

72 
	#O_LARGEFILE
 0100000

	)

77 
	#F_DUPFD
 0

	)

78 
	#F_GETFD
 1

	)

79 
	#F_SETFD
 2

	)

80 
	#F_GETFL
 3

	)

81 
	#F_SETFL
 4

	)

82 #i‡
__WORDSIZE
 == 64

83 
	#F_GETLK
 5

	)

84 
	#F_SETLK
 6

	)

85 
	#F_SETLKW
 7

	)

87 
	#F_GETLK64
 5

	)

88 
	#F_SETLK64
 6

	)

89 
	#F_SETLKW64
 7

	)

91 #i‚de‡
__USE_FILE_OFFSET64


92 
	#F_GETLK
 5

	)

93 
	#F_SETLK
 6

	)

94 
	#F_SETLKW
 7

	)

96 
	#F_GETLK
 
F_GETLK64


	)

97 
	#F_SETLK
 
F_SETLK64


	)

98 
	#F_SETLKW
 
F_SETLKW64


	)

100 
	#F_GETLK64
 12

	)

101 
	#F_SETLK64
 13

	)

102 
	#F_SETLKW64
 14

	)

105 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


106 
	#F_SETOWN
 8

	)

107 
	#F_GETOWN
 9

	)

110 #ifde‡
__USE_GNU


111 
	#F_SETSIG
 10

	)

112 
	#F_GETSIG
 11

	)

113 
	#F_SETOWN_EX
 15

	)

114 
	#F_GETOWN_EX
 16

	)

117 #ifde‡
__USE_GNU


118 
	#F_SETLEASE
 1024

	)

119 
	#F_GETLEASE
 1025

	)

120 
	#F_NOTIFY
 1026

	)

121 
	#F_SETPIPE_SZ
 1031

	)

122 
	#F_GETPIPE_SZ
 1032

	)

124 #ifde‡
__USE_XOPEN2K8


125 
	#F_DUPFD_CLOEXEC
 1030

	)

130 
	#FD_CLOEXEC
 1

	)

133 
	#F_RDLCK
 0

	)

134 
	#F_WRLCK
 1

	)

135 
	#F_UNLCK
 2

	)

138 
	#F_EXLCK
 4

	)

139 
	#F_SHLCK
 8

	)

141 #ifde‡
__USE_BSD


143 
	#LOCK_SH
 1

	)

144 
	#LOCK_EX
 2

	)

145 
	#LOCK_NB
 4

	)

147 
	#LOCK_UN
 8

	)

150 #ifde‡
__USE_GNU


151 
	#LOCK_MAND
 32

	)

152 
	#LOCK_READ
 64

	)

153 
	#LOCK_WRITE
 128

	)

154 
	#LOCK_RW
 192

	)

157 #ifde‡
__USE_GNU


159 
	#DN_ACCESS
 0x00000001

	)

160 
	#DN_MODIFY
 0x00000002

	)

161 
	#DN_CREATE
 0x00000004

	)

162 
	#DN_DELETE
 0x00000008

	)

163 
	#DN_RENAME
 0x00000010

	)

164 
	#DN_ATTRIB
 0x00000020

	)

165 
	#DN_MULTISHOT
 0x80000000

	)

168 
	sÊock


170 
	ml_ty≥
;

171 
	ml_whí˚
;

172 #i‚de‡
__USE_FILE_OFFSET64


173 
__off_t
 
	ml_°¨t
;

174 
__off_t
 
	ml_Àn
;

176 
__off64_t
 
	ml_°¨t
;

177 
__off64_t
 
	ml_Àn
;

179 
__pid_t
 
	ml_pid
;

182 #ifde‡
__USE_LARGEFILE64


183 
	sÊock64


185 
	ml_ty≥
;

186 
	ml_whí˚
;

187 
__off64_t
 
	ml_°¨t
;

188 
__off64_t
 
	ml_Àn
;

189 
__pid_t
 
	ml_pid
;

193 #ifde‡
__USE_GNU


195 
	e__pid_ty≥


197 
	mF_OWNER_TID
 = 0,

198 
	mF_OWNER_PID
,

199 
	mF_OWNER_PGRP
,

200 
	mF_OWNER_GID
 = 
F_OWNER_PGRP


204 
	sf_ow√r_ex


206 
__pid_ty≥
 
	mty≥
;

207 
__pid_t
 
	mpid
;

213 #ifdef 
__USE_BSD


214 
	#FAPPEND
 
O_APPEND


	)

215 
	#FFSYNC
 
O_FSYNC


	)

216 
	#FASYNC
 
O_ASYNC


	)

217 
	#FNONBLOCK
 
O_NONBLOCK


	)

218 
	#FNDELAY
 
O_NDELAY


	)

222 #ifde‡
__USE_XOPEN2K


223 
	#POSIX_FADV_NORMAL
 0

	)

224 
	#POSIX_FADV_RANDOM
 1

	)

225 
	#POSIX_FADV_SEQUENTIAL
 2

	)

226 
	#POSIX_FADV_WILLNEED
 3

	)

227 
	#POSIX_FADV_DONTNEED
 4

	)

228 
	#POSIX_FADV_NOREUSE
 5

	)

232 #ifde‡
__USE_GNU


234 
	#SYNC_FILE_RANGE_WAIT_BEFORE
 1

	)

237 
	#SYNC_FILE_RANGE_WRITE
 2

	)

240 
	#SYNC_FILE_RANGE_WAIT_AFTER
 4

	)

245 
	#SPLICE_F_MOVE
 1

	)

246 
	#SPLICE_F_NONBLOCK
 2

	)

249 
	#SPLICE_F_MORE
 4

	)

250 
	#SPLICE_F_GIFT
 8

	)

254 
	sfûe_h™dÀ


256 
	mh™dÀ_byãs
;

257 
	mh™dÀ_ty≥
;

259 
	mf_h™dÀ
[0];

263 
	#MAX_HANDLE_SZ
 128

	)

266 
	g__BEGIN_DECLS


268 #ifde‡
__USE_GNU


271 
ssize_t
 
	$ªadahód
 (
__fd
, 
__off64_t
 
__off£t
, 
size_t
 
__cou¡
)

272 
__THROW
;

279 
	`sync_fûe_ønge
 (
__fd
, 
__off64_t
 
__off£t
, __off64_à
__cou¡
,

280 
__Êags
);

287 
ssize_t
 
	`vm•li˚
 (
__fdout
, c⁄° 
iovec
 *
__iov
,

288 
size_t
 
__cou¡
, 
__Êags
);

294 
ssize_t
 
	`•li˚
 (
__fdö
, 
__off64_t
 *
__offö
, 
__fdout
,

295 
__off64_t
 *
__offout
, 
size_t
 
__Àn
,

296 
__Êags
);

302 
ssize_t
 
	`ãe
 (
__fdö
, 
__fdout
, 
size_t
 
__Àn
,

303 
__Êags
);

309 #i‚de‡
__USE_FILE_OFFSET64


310 
	`ÁŒoˇã
 (
__fd
, 
__mode
, 
__off_t
 
__off£t
, __off_à
__Àn
);

312 #ifde‡
__REDIRECT


313 
	`__REDIRECT
 (
ÁŒoˇã
, (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

314 
__off64_t
 
__Àn
),

315 
ÁŒoˇã64
);

317 
	#ÁŒoˇã
 
ÁŒoˇã64


	)

320 #ifde‡
__USE_LARGEFILE64


321 
	`ÁŒoˇã64
 (
__fd
, 
__mode
, 
__off64_t
 
__off£t
,

322 
__off64_t
 
__Àn
);

327 
	$«me_to_h™dÀ_©
 (
__dfd
, c⁄° *
__«me
,

328 
fûe_h™dÀ
 *
__h™dÀ
, *
__m¡_id
,

329 
__Êags
Ë
__THROW
;

335 
	`›í_by_h™dÀ_©
 (
__mou¡dúfd
, 
fûe_h™dÀ
 *
__h™dÀ
,

336 
__Êags
);

340 
__END_DECLS


	@/usr/include/bits/fcntl2.h

20 #i‚def 
_FCNTL_H


26 #i‚de‡
__USE_FILE_OFFSET64


27 
	$__›í_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

28 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

29 
›í
Ë
	`__n⁄nuŒ
 ((1));

31 
	`__REDIRECT
 (
__›í_2
, (
__c⁄°
 *
__∑th
, 
__oÊag
),

32 
__›í64_2
Ë
	`__n⁄nuŒ
 ((1));

33 
	`__REDIRECT
 (
__›í_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
, ...),

34 
›í64
Ë
	`__n⁄nuŒ
 ((1));

36 
	`__îr‹de˛
 (
__›í_too_m™y_¨gs
,

38 
	`__îr‹de˛
 (
__›í_missög_mode
,

41 
__exã∫_Æways_ölöe
 

42 
	$›í
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

44 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

45 
	`__›í_too_m™y_¨gs
 ();

47 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

49 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

51 
	`__›í_missög_mode
 ();

52  
	`__›í_2
 (
__∑th
, 
__oÊag
);

54  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

57 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

58  
	`__›í_2
 (
__∑th
, 
__oÊag
);

60  
	`__›í_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

61 
	}
}

64 #ifde‡
__USE_LARGEFILE64


65 
	$__›í64_2
 (
__c⁄°
 *
__∑th
, 
__oÊag
Ë
	`__n⁄nuŒ
 ((1));

66 
	`__REDIRECT
 (
__›í64_Æüs
, (
__c⁄°
 *
__∑th
, 
__oÊag
,

67 ...), 
›í64
Ë
	`__n⁄nuŒ
 ((1));

68 
	`__îr‹de˛
 (
__›í64_too_m™y_¨gs
,

70 
	`__îr‹de˛
 (
__›í64_missög_mode
,

73 
__exã∫_Æways_ölöe
 

74 
	$›í64
 (
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

76 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

77 
	`__›í64_too_m™y_¨gs
 ();

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

81 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

83 
	`__›í64_missög_mode
 ();

84  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

86  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

89 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

90  
	`__›í64_2
 (
__∑th
, 
__oÊag
);

92  
	`__›í64_Æüs
 (
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

93 
	}
}

97 #ifde‡
__USE_ATFILE


98 #i‚de‡
__USE_FILE_OFFSET64


99 
	$__›í©_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

100 
	`__n⁄nuŒ
 ((2));

101 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

102 
__oÊag
, ...), 
›í©
)

103 
	`__n⁄nuŒ
 ((2));

105 
	`__REDIRECT
 (
__›í©_2
, (
__fd
, 
__c⁄°
 *
__∑th
,

106 
__oÊag
), 
__›í©64_2
)

107 
	`__n⁄nuŒ
 ((2));

108 
	`__REDIRECT
 (
__›í©_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

109 
__oÊag
, ...), 
›í©64
)

110 
	`__n⁄nuŒ
 ((2));

112 
	`__îr‹de˛
 (
__›í©_too_m™y_¨gs
,

114 
	`__îr‹de˛
 (
__›í©_missög_mode
,

117 
__exã∫_Æways_ölöe
 

118 
	$›í©
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

120 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

121 
	`__›í©_too_m™y_¨gs
 ();

123 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

125 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

127 
	`__›í©_missög_mode
 ();

128  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

130  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

133 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

134  
	`__›í©_2
 (
__fd
, 
__∑th
, 
__oÊag
);

136  
	`__›í©_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

137 
	}
}

140 #ifde‡
__USE_LARGEFILE64


141 
	$__›í©64_2
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
)

142 
	`__n⁄nuŒ
 ((2));

143 
	`__REDIRECT
 (
__›í©64_Æüs
, (
__fd
, 
__c⁄°
 *
__∑th
,

144 
__oÊag
, ...), 
›í©64
)

145 
	`__n⁄nuŒ
 ((2));

146 
	`__îr‹de˛
 (
__›í©64_too_m™y_¨gs
,

148 
	`__îr‹de˛
 (
__›í©64_missög_mode
,

151 
__exã∫_Æways_ölöe
 

152 
	$›í©64
 (
__fd
, 
__c⁄°
 *
__∑th
, 
__oÊag
, ...)

154 i‡(
	`__va_¨g_∑ck_Àn
 () > 1)

155 
	`__›í©64_too_m™y_¨gs
 ();

157 i‡(
	`__buûtö_c⁄°™t_p
 (
__oÊag
))

159 i‡((
__oÊag
 & 
O_CREAT
Ë!0 && 
	`__va_¨g_∑ck_Àn
 () < 1)

161 
	`__›í©64_missög_mode
 ();

162  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

164  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

167 i‡(
	`__va_¨g_∑ck_Àn
 () < 1)

168  
	`__›í©64_2
 (
__fd
, 
__∑th
, 
__oÊag
);

170  
	`__›í©64_Æüs
 (
__fd
, 
__∑th
, 
__oÊag
, 
	`__va_¨g_∑ck
 ());

171 
	}
}

	@/usr/include/bits/huge_val.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VAL
 (
	`__buûtö_huge_vÆ
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VAL
 (
__exãnsi⁄__
 0x1.0
p2047
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VAL
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__DI__
))); 
__d
; }) \

37 { 
__l
: 0x7ff0000000000000ULL }).
__d
)

	)

41 
	~<ídün.h
>

43 uni⁄ { 
	m__c
[8]; 
	m__d
; } 
	t__huge_vÆ_t
;

45 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


46 
	#__HUGE_VAL_byãs
 { 0x7f, 0xf0, 0, 0, 0, 0, 0, 0 }

	)

48 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


49 
	#__HUGE_VAL_byãs
 { 0, 0, 0, 0, 0, 0, 0xf0, 0x7‡}

	)

52 
__huge_vÆ_t
 
	g__huge_vÆ
 = { 
__HUGE_VAL_byãs
 };

53 
	#HUGE_VAL
 (
__huge_vÆ
.
__d
)

	)

	@/usr/include/bits/huge_valf.h

22 #i‚de‡
_MATH_H


28 #i‡
__GNUC_PREREQ
(3,3)

29 
	#HUGE_VALF
 (
	`__buûtö_huge_vÆf
())

	)

30 #ñi‡
__GNUC_PREREQ
(2,96)

31 
	#HUGE_VALF
 (
__exãnsi⁄__
 0x1.0
p255f
)

	)

32 #ñi‡
deföed
 
__GNUC__


34 
	#HUGE_VALF
 \

35 (
__exãnsi⁄__
 \

36 ((uni⁄ { 
__l
 
	`__©åibuã__
((
	`__mode__
(
__SI__
))); 
__d
; }) \

37 { 
__l
: 0x7f800000UL }).
__d
)

	)

41 uni⁄ { 
	m__c
[4]; 
	m__f
; } 
	t__huge_vÆf_t
;

43 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


44 
	#__HUGE_VALF_byãs
 { 0x7f, 0x80, 0, 0 }

	)

46 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


47 
	#__HUGE_VALF_byãs
 { 0, 0, 0x80, 0x7‡}

	)

50 
__huge_vÆf_t
 
	g__huge_vÆf
 = { 
__HUGE_VALF_byãs
 };

51 
	#HUGE_VALF
 (
__huge_vÆf
.
__f
)

	)

	@/usr/include/bits/huge_vall.h

21 #i‚de‡
_MATH_H


25 #i‡
__GNUC_PREREQ
(3,3)

26 
	#HUGE_VALL
 (
	`__buûtö_huge_vÆl
())

	)

28 
	#HUGE_VALL
 ((Ë
HUGE_VAL
)

	)

	@/usr/include/bits/inf.h

20 #i‚de‡
_MATH_H


26 #i‡
__GNUC_PREREQ
(3,3)

27 
	#INFINITY
 (
	`__buûtö_öff
())

	)

29 
	#INFINITY
 
HUGE_VALF


	)

	@/usr/include/bits/math-finite.h

20 #i‚de‡
_MATH_H


25 
__REDIRECT_NTH
 (
acos
, (), 
__acos_föôe
);

26 
__REDIRECT_NTH
 (
acosf
, (), 
__acosf_föôe
);

27 #ifde‡
__MATH_DECLARE_LDOUBLE


28 
__REDIRECT_NTH
 (
aco¶
, (), 
__aco¶_föôe
);

31 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


33 
__REDIRECT_NTH
 (
acosh
, (), 
__acosh_föôe
);

34 
__REDIRECT_NTH
 (
acoshf
, (), 
__acoshf_föôe
);

35 #ifde‡
__MATH_DECLARE_LDOUBLE


36 
__REDIRECT_NTH
 (
acoshl
, (), 
__acoshl_föôe
);

41 
__REDIRECT_NTH
 (
asö
, (), 
__asö_föôe
);

42 
__REDIRECT_NTH
 (
asöf
, (), 
__asöf_föôe
);

43 #ifde‡
__MATH_DECLARE_LDOUBLE


44 
__REDIRECT_NTH
 (
asöl
, (), 
__asöl_föôe
);

48 
__REDIRECT_NTH
 (
©™2
, (, ), 
__©™2_föôe
);

49 
__REDIRECT_NTH
 (
©™2f
, (, ), 
__©™2f_föôe
);

50 #ifde‡
__MATH_DECLARE_LDOUBLE


51 
__REDIRECT_NTH
 (
©™2l
, (, ),

52 
__©™2l_föôe
);

55 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


57 
__REDIRECT_NTH
 (
©™h
, (), 
__©™h_föôe
);

58 
__REDIRECT_NTH
 (
©™hf
, (), 
__©™hf_föôe
);

59 #ifde‡
__MATH_DECLARE_LDOUBLE


60 
__REDIRECT_NTH
 (
©™hl
, (), 
__©™hl_föôe
);

65 
__REDIRECT_NTH
 (
cosh
, (), 
__cosh_föôe
);

66 
__REDIRECT_NTH
 (
coshf
, (), 
__coshf_föôe
);

67 #ifde‡
__MATH_DECLARE_LDOUBLE


68 
__REDIRECT_NTH
 (
coshl
, (), 
__coshl_föôe
);

72 
__REDIRECT_NTH
 (
exp
, (), 
__exp_föôe
);

73 
__REDIRECT_NTH
 (
expf
, (), 
__expf_föôe
);

74 #ifde‡
__MATH_DECLARE_LDOUBLE


75 
__REDIRECT_NTH
 (
ex∂
, (), 
__ex∂_föôe
);

78 #ifde‡
__USE_GNU


80 
__REDIRECT_NTH
 (
exp10
, (), 
__exp10_föôe
);

81 
__REDIRECT_NTH
 (
exp10f
, (), 
__exp10f_föôe
);

82 #ifde‡
__MATH_DECLARE_LDOUBLE


83 
__REDIRECT_NTH
 (
exp10l
, (), 
__exp10l_föôe
);

87 
__REDIRECT_NTH
 (
pow10
, (), 
__exp10_föôe
);

88 
__REDIRECT_NTH
 (
pow10f
, (), 
__exp10f_föôe
);

89 #ifde‡
__MATH_DECLARE_LDOUBLE


90 
__REDIRECT_NTH
 (
pow10l
, (), 
__exp10l_föôe
);

94 #ifde‡
__USE_ISOC99


96 
__REDIRECT_NTH
 (
exp2
, (), 
__exp2_föôe
);

97 
__REDIRECT_NTH
 (
exp2f
, (), 
__exp2f_föôe
);

98 #ifde‡
__MATH_DECLARE_LDOUBLE


99 
__REDIRECT_NTH
 (
exp2l
, (), 
__exp2l_föôe
);

104 
__REDIRECT_NTH
 (
fmod
, (, ), 
__fmod_föôe
);

105 
__REDIRECT_NTH
 (
fmodf
, (, ), 
__fmodf_föôe
);

106 #ifde‡
__MATH_DECLARE_LDOUBLE


107 
__REDIRECT_NTH
 (
fmodl
, (, ),

108 
__fmodl_föôe
);

111 #ifde‡
__USE_ISOC99


113 
__REDIRECT_NTH
 (
hypŸ
, (, ), 
__hypŸ_föôe
);

114 
__REDIRECT_NTH
 (
hypŸf
, (, ), 
__hypŸf_föôe
);

115 #ifde‡
__MATH_DECLARE_LDOUBLE


116 
__REDIRECT_NTH
 (
hypŸl
, (, ),

117 
__hypŸl_föôe
);

121 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


123 
__REDIRECT_NTH
 (
j0
, (), 
__j0_föôe
);

124 
__REDIRECT_NTH
 (
j0f
, (), 
__j0f_föôe
);

125 #ifde‡
__MATH_DECLARE_LDOUBLE


126 
__REDIRECT_NTH
 (
j0l
, (), 
__j0l_föôe
);

130 
__REDIRECT_NTH
 (
y0
, (), 
__y0_föôe
);

131 
__REDIRECT_NTH
 (
y0f
, (), 
__y0f_föôe
);

132 #ifde‡
__MATH_DECLARE_LDOUBLE


133 
__REDIRECT_NTH
 (
y0l
, (), 
__y0l_föôe
);

137 
__REDIRECT_NTH
 (
j1
, (), 
__j1_föôe
);

138 
__REDIRECT_NTH
 (
j1f
, (), 
__j1f_föôe
);

139 #ifde‡
__MATH_DECLARE_LDOUBLE


140 
__REDIRECT_NTH
 (
j1l
, (), 
__j1l_föôe
);

144 
__REDIRECT_NTH
 (
y1
, (), 
__y1_föôe
);

145 
__REDIRECT_NTH
 (
y1f
, (), 
__y1f_föôe
);

146 #ifde‡
__MATH_DECLARE_LDOUBLE


147 
__REDIRECT_NTH
 (
y1l
, (), 
__y1l_föôe
);

151 
__REDIRECT_NTH
 (
jn
, (, ), 
__jn_föôe
);

152 
__REDIRECT_NTH
 (
jnf
, (, ), 
__jnf_föôe
);

153 #ifde‡
__MATH_DECLARE_LDOUBLE


154 
__REDIRECT_NTH
 (
j∆
, (, ), 
__j∆_föôe
);

158 
__REDIRECT_NTH
 (
yn
, (, ), 
__yn_föôe
);

159 
__REDIRECT_NTH
 (
ynf
, (, ), 
__ynf_föôe
);

160 #ifde‡
__MATH_DECLARE_LDOUBLE


161 
__REDIRECT_NTH
 (
y∆
, (, ), 
__y∆_föôe
);

165 #ifde‡
__USE_MISC


167 
__REDIRECT_NTH
 (
lgamma_r
, (, *), 
__lgamma_r_föôe
);

168 
__REDIRECT_NTH
 (
lgammaf_r
, (, *), 
__lgammaf_r_föôe
);

169 #ifde‡
__MATH_DECLARE_LDOUBLE


170 
__REDIRECT_NTH
 (
lgammÆ_r
, (, *),

171 
__lgammÆ_r_föôe
);

175 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


177 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgamma
 (
__d
))

179 #ifde‡
__USE_ISOC99


180 
__loˇl_signgam
 = 0;

181  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

183  
	`lgamma_r
 (
__d
, &
signgam
);

185 
	}
}

186 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammaf
 (
__d
))

188 #ifde‡
__USE_ISOC99


189 
__loˇl_signgam
 = 0;

190  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

192  
	`lgammaf_r
 (
__d
, &
signgam
);

194 
	}
}

195 #ifde‡
__MATH_DECLARE_LDOUBLE


196 
__exã∫_Æways_ölöe
 
__NTH
 (
	$lgammÆ
 (
__d
))

198 #ifde‡
__USE_ISOC99


199 
__loˇl_signgam
 = 0;

200  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

202  
	`lgammÆ_r
 (
__d
, &
signgam
);

204 
	}
}

208 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


210 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gamma
 (
__d
))

212 #ifde‡
__USE_ISOC99


213 
__loˇl_signgam
 = 0;

214  
	`lgamma_r
 (
__d
, &
__loˇl_signgam
);

216  
	`lgamma_r
 (
__d
, &
signgam
);

218 
	}
}

219 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammaf
 (
__d
))

221 #ifde‡
__USE_ISOC99


222 
__loˇl_signgam
 = 0;

223  
	`lgammaf_r
 (
__d
, &
__loˇl_signgam
);

225  
	`lgammaf_r
 (
__d
, &
signgam
);

227 
	}
}

228 #ifde‡
__MATH_DECLARE_LDOUBLE


229 
__exã∫_Æways_ölöe
 
__NTH
 (
	$gammÆ
 (
__d
))

231 #ifde‡
__USE_ISOC99


232 
__loˇl_signgam
 = 0;

233  
	`lgammÆ_r
 (
__d
, &
__loˇl_signgam
);

235  
	`lgammÆ_r
 (
__d
, &
signgam
);

237 
	}
}

242 
__REDIRECT_NTH
 (
log
, (), 
__log_föôe
);

243 
__REDIRECT_NTH
 (
logf
, (), 
__logf_föôe
);

244 #ifde‡
__MATH_DECLARE_LDOUBLE


245 
__REDIRECT_NTH
 (
logl
, (), 
__logl_föôe
);

249 
__REDIRECT_NTH
 (
log10
, (), 
__log10_föôe
);

250 
__REDIRECT_NTH
 (
log10f
, (), 
__log10f_föôe
);

251 #ifde‡
__MATH_DECLARE_LDOUBLE


252 
__REDIRECT_NTH
 (
log10l
, (), 
__log10l_föôe
);

255 #ifde‡
__USE_ISOC99


257 
__REDIRECT_NTH
 (
log2
, (), 
__log2_föôe
);

258 
__REDIRECT_NTH
 (
log2f
, (), 
__log2f_föôe
);

259 #ifde‡
__MATH_DECLARE_LDOUBLE


260 
__REDIRECT_NTH
 (
log2l
, (), 
__log2l_föôe
);

265 
__REDIRECT_NTH
 (
pow
, (, ), 
__pow_föôe
);

266 
__REDIRECT_NTH
 (
powf
, (, ), 
__powf_föôe
);

267 #ifde‡
__MATH_DECLARE_LDOUBLE


268 
__REDIRECT_NTH
 (
powl
, (, ),

269 
__powl_föôe
);

273 
__REDIRECT_NTH
 (
ªmaödî
, (, ), 
__ªmaödî_föôe
);

274 
__REDIRECT_NTH
 (
ªmaödîf
, (, ), 
__ªmaödîf_föôe
);

275 #ifde‡
__MATH_DECLARE_LDOUBLE


276 
__REDIRECT_NTH
 (
ªmaödîl
, (, ),

277 
__ªmaödîl_föôe
);

280 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


282 
__REDIRECT_NTH
 (
sˇlb
, (, ), 
__sˇlb_föôe
);

283 
__REDIRECT_NTH
 (
sˇlbf
, (, ), 
__sˇlbf_föôe
);

284 #ifde‡
__MATH_DECLARE_LDOUBLE


285 
__REDIRECT_NTH
 (
sˇlbl
, (, ),

286 
__sˇlbl_föôe
);

291 
__REDIRECT_NTH
 (
söh
, (), 
__söh_föôe
);

292 
__REDIRECT_NTH
 (
söhf
, (), 
__söhf_föôe
);

293 #ifde‡
__MATH_DECLARE_LDOUBLE


294 
__REDIRECT_NTH
 (
söhl
, (), 
__söhl_föôe
);

298 
__REDIRECT_NTH
 (
sqπ
, (), 
__sqπ_föôe
);

299 
__REDIRECT_NTH
 (
sqπf
, (), 
__sqπf_föôe
);

300 #ifde‡
__MATH_DECLARE_LDOUBLE


301 
__REDIRECT_NTH
 (
sqπl
, (), 
__sqπl_föôe
);

304 #ifde‡
__USE_ISOC99


306 
__gamma_r_föôe
 (, *);

307 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgamma
 (
__d
))

309 
__loˇl_signgam
 = 0;

310 
__ªs
 = 
	`__gamma_r_föôe
 (
__d
, &
__loˇl_signgam
);

311  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

312 
	}
}

313 
__gammaf_r_föôe
 (, *);

314 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammaf
 (
__d
))

316 
__loˇl_signgam
 = 0;

317 
__ªs
 = 
	`__gammaf_r_föôe
 (
__d
, &
__loˇl_signgam
);

318  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

319 
	}
}

320 #ifde‡
__MATH_DECLARE_LDOUBLE


321 
__gammÆ_r_föôe
 (, *);

322 
__exã∫_Æways_ölöe
 
__NTH
 (
	$tgammÆ
 (
__d
))

324 
__loˇl_signgam
 = 0;

325 
__ªs
 = 
	`__gammÆ_r_föôe
 (
__d
, &
__loˇl_signgam
);

326  
__loˇl_signgam
 < 0 ? -
__ªs
 : __res;

327 
	}
}

	@/usr/include/bits/mathcalls.h

46 #i‚de‡
_MATH_H


53 
_MdoubÀ_BEGIN_NAMESPACE


55 
__MATHCALL
 (
acos
,, (
_MdoubÀ_
 
__x
));

57 
__MATHCALL
 (
asö
,, (
_MdoubÀ_
 
__x
));

59 
__MATHCALL
 (
©™
,, (
_MdoubÀ_
 
__x
));

61 
__MATHCALL
 (
©™2
,, (
_MdoubÀ_
 
__y
, _MdoubÀ_ 
__x
));

64 
__MATHCALL
 (
cos
,, (
_MdoubÀ_
 
__x
));

66 
__MATHCALL
 (
sö
,, (
_MdoubÀ_
 
__x
));

68 
__MATHCALL
 (
èn
,, (
_MdoubÀ_
 
__x
));

73 
__MATHCALL
 (
cosh
,, (
_MdoubÀ_
 
__x
));

75 
__MATHCALL
 (
söh
,, (
_MdoubÀ_
 
__x
));

77 
__MATHCALL
 (
ènh
,, (
_MdoubÀ_
 
__x
));

78 
	g_MdoubÀ_END_NAMESPACE


80 #ifde‡
__USE_GNU


82 
__MATHDECL
 (,
söcos
,,

83 (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__söx
, _MdoubÀ_ *
__cosx
));

86 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


87 
__BEGIN_NAMESPACE_C99


89 
__MATHCALL
 (
acosh
,, (
_MdoubÀ_
 
__x
));

91 
__MATHCALL
 (
asöh
,, (
_MdoubÀ_
 
__x
));

93 
__MATHCALL
 (
©™h
,, (
_MdoubÀ_
 
__x
));

94 
	g__END_NAMESPACE_C99


99 
_MdoubÀ_BEGIN_NAMESPACE


101 
__MATHCALL
 (
exp
,, (
_MdoubÀ_
 
__x
));

104 
__MATHCALL
 (
‰exp
,, (
_MdoubÀ_
 
__x
, *
__exp⁄ít
));

107 
__MATHCALL
 (
ldexp
,, (
_MdoubÀ_
 
__x
, 
__exp⁄ít
));

110 
__MATHCALL
 (
log
,, (
_MdoubÀ_
 
__x
));

113 
__MATHCALL
 (
log10
,, (
_MdoubÀ_
 
__x
));

116 
__MATHCALL
 (
modf
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ *
__ùå
))

117 
__©åibuã__
 ((
__n⁄nuŒ__
 (2)));

118 
	g_MdoubÀ_END_NAMESPACE


120 #ifde‡
__USE_GNU


122 
__MATHCALL
 (
exp10
,, (
_MdoubÀ_
 
__x
));

124 
__MATHCALL
 (
pow10
,, (
_MdoubÀ_
 
__x
));

127 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


128 
__BEGIN_NAMESPACE_C99


130 
__MATHCALL
 (
expm1
,, (
_MdoubÀ_
 
__x
));

133 
__MATHCALL
 (
log1p
,, (
_MdoubÀ_
 
__x
));

136 
__MATHCALL
 (
logb
,, (
_MdoubÀ_
 
__x
));

137 
	g__END_NAMESPACE_C99


140 #ifde‡
__USE_ISOC99


141 
__BEGIN_NAMESPACE_C99


143 
__MATHCALL
 (
exp2
,, (
_MdoubÀ_
 
__x
));

146 
__MATHCALL
 (
log2
,, (
_MdoubÀ_
 
__x
));

147 
	g__END_NAMESPACE_C99


153 
_MdoubÀ_BEGIN_NAMESPACE


155 
__MATHCALL
 (
pow
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

158 
__MATHCALL
 (
sqπ
,, (
_MdoubÀ_
 
__x
));

159 
	g_MdoubÀ_END_NAMESPACE


161 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


162 
__BEGIN_NAMESPACE_C99


164 
__MATHCALL
 (
hypŸ
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

165 
	g__END_NAMESPACE_C99


168 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


169 
__BEGIN_NAMESPACE_C99


171 
__MATHCALL
 (
cbπ
,, (
_MdoubÀ_
 
__x
));

172 
	g__END_NAMESPACE_C99


178 
_MdoubÀ_BEGIN_NAMESPACE


180 
__MATHCALLX
 (
˚û
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

183 
__MATHCALLX
 (
Ábs
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

186 
__MATHCALLX
 (
Êo‹
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

189 
__MATHCALL
 (
fmod
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

194 
__MATHDECL_1
 (,
__isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

197 
__MATHDECL_1
 (,
__föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

198 
	g_MdoubÀ_END_NAMESPACE


200 #ifde‡
__USE_MISC


203 
__MATHDECL_1
 (,
isöf
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

206 
__MATHDECL_1
 (,
föôe
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

209 
__MATHCALL
 (
dªm
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

213 
__MATHCALL
 (
signifiˇnd
,, (
_MdoubÀ_
 
__x
));

216 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


217 
__BEGIN_NAMESPACE_C99


219 
__MATHCALLX
 (
c›ysign
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

220 
	g__END_NAMESPACE_C99


223 #ifde‡
__USE_ISOC99


224 
__BEGIN_NAMESPACE_C99


226 
__MATHCALLX
 (
«n
,, (
__c⁄°
 *
__ègb
), (
__c⁄°__
));

227 
	g__END_NAMESPACE_C99


232 
__MATHDECL_1
 (,
__i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

234 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


236 
__MATHDECL_1
 (,
i¢™
,, (
_MdoubÀ_
 
__vÆue
)Ë
__©åibuã__
 ((
__c⁄°__
));

239 
__MATHCALL
 (
j0
,, (
_MdoubÀ_
));

240 
__MATHCALL
 (
j1
,, (
_MdoubÀ_
));

241 
__MATHCALL
 (
jn
,, (, 
_MdoubÀ_
));

242 
__MATHCALL
 (
y0
,, (
_MdoubÀ_
));

243 
__MATHCALL
 (
y1
,, (
_MdoubÀ_
));

244 
__MATHCALL
 (
yn
,, (, 
_MdoubÀ_
));

248 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN
 || deföed 
__USE_ISOC99


249 
__BEGIN_NAMESPACE_C99


251 
__MATHCALL
 (
îf
,, (
_MdoubÀ_
));

252 
__MATHCALL
 (
îfc
,, (
_MdoubÀ_
));

253 
__MATHCALL
 (
lgamma
,, (
_MdoubÀ_
));

254 
	g__END_NAMESPACE_C99


257 #ifde‡
__USE_ISOC99


258 
__BEGIN_NAMESPACE_C99


260 
__MATHCALL
 (
tgamma
,, (
_MdoubÀ_
));

261 
	g__END_NAMESPACE_C99


264 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN


266 
__MATHCALL
 (
gamma
,, (
_MdoubÀ_
));

269 #ifde‡
__USE_MISC


273 
__MATHCALL
 (
lgamma
,
_r
, (
_MdoubÀ_
, *
__signgamp
));

277 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


278 
__BEGIN_NAMESPACE_C99


281 
__MATHCALL
 (
röt
,, (
_MdoubÀ_
 
__x
));

284 
__MATHCALLX
 (
√xè·î
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
), (
__c⁄°__
));

285 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__LDBL_COMPAT


286 
__MATHCALLX
 (
√xâow¨d
,, (
_MdoubÀ_
 
__x
, 
__y
), (
__c⁄°__
));

290 
__MATHCALL
 (
ªmaödî
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

292 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_ISOC99


294 
__MATHCALL
 (
sˇlbn
,, (
_MdoubÀ_
 
__x
, 
__n
));

298 
__MATHDECL
 (,
ûogb
,, (
_MdoubÀ_
 
__x
));

301 #ifde‡
__USE_ISOC99


303 
__MATHCALL
 (
sˇlb 
,, (
_MdoubÀ_
 
__x
, 
__n
));

307 
__MATHCALL
 (
√¨byöt
,, (
_MdoubÀ_
 
__x
));

311 
__MATHCALLX
 (
round
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

315 
__MATHCALLX
 (
åunc
,, (
_MdoubÀ_
 
__x
), (
__c⁄°__
));

320 
__MATHCALL
 (
ªmquo
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, *
__quo
));

327 
__MATHDECL
 (,
Ãöt
,, (
_MdoubÀ_
 
__x
));

328 
__MATHDECL
 (,
Œröt
,, (
_MdoubÀ_
 
__x
));

332 
__MATHDECL
 (,
Ãound
,, (
_MdoubÀ_
 
__x
));

333 
__MATHDECL
 (,
Œround
,, (
_MdoubÀ_
 
__x
));

337 
__MATHCALL
 (
fdim
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

340 
__MATHCALL
 (
fmax
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

343 
__MATHCALL
 (
fmö
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
));

347 
__MATHDECL_1
 (, 
__Â˛assify
,, (
_MdoubÀ_
 
__vÆue
))

348 
__©åibuã__
 ((
__c⁄°__
));

351 
__MATHDECL_1
 (, 
__signbô
,, (
_MdoubÀ_
 
__vÆue
))

352 
__©åibuã__
 ((
__c⁄°__
));

356 
__MATHCALL
 (
fma
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__y
, _MdoubÀ_ 
__z
));

359 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


360 
	g__END_NAMESPACE_C99


363 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED


365 
__MATHCALL
 (
sˇlb
,, (
_MdoubÀ_
 
__x
, _MdoubÀ_ 
__n
));

	@/usr/include/bits/mathdef.h

19 #i‡!
deföed
 
_MATH_H
 && !deföed 
_COMPLEX_H


23 #i‡
deföed
 
__USE_ISOC99
 && deföed 
_MATH_H
 && !deföed 
_MATH_H_MATHDEF


24 
	#_MATH_H_MATHDEF
 1

	)

26 
	~<bôs/w‹dsize.h
>

28 #i‡
__WORDSIZE
 =64 || (
deföed
 
__FLT_EVAL_METHOD__
 && __FLT_EVAL_METHOD__ == 0)

31 
	tÊﬂt_t
;

32 
	tdoubÀ_t
;

38 
	tÊﬂt_t
;

40 
	tdoubÀ_t
;

45 
	#FP_ILOGB0
 (-2147483647 - 1)

	)

46 
	#FP_ILOGBNAN
 (-2147483647 - 1)

	)

50 #i‡
__FP_FAST_FMA


51 
	#FP_FAST_FMA
 1

	)

54 #i‡
__FP_FAST_FMAF


55 
	#FP_FAST_FMAF
 1

	)

58 #i‡
__FP_FAST_FMAL


59 
	#FP_FAST_FMAL
 1

	)

	@/usr/include/bits/mathinline.h

20 #i‚de‡
_MATH_H


24 
	~<bôs/w‹dsize.h
>

26 #i‚de‡
__exã∫_Æways_ölöe


27 
	#__MATH_INLINE
 
__ölöe


	)

29 
	#__MATH_INLINE
 
__exã∫_Æways_ölöe


	)

35 #i‡
__GNUC_PREREQ
 (2, 8Ë&& 
deföed
 
__USE_ISOC99


36 
__BEGIN_NAMESPACE_C99


39 
__MATH_INLINE
 

40 
__NTH
 (
	$__signbôf
 (
__x
))

42 #i‡
__WORDSIZE
 == 32

43 
__exãnsi⁄__
 uni⁄ { 
__f
; 
__i
; } 
__u
 = { __f: 
__x
 };

44  
__u
.
__i
 < 0;

46 
__m
;

47 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

48  
__m
 & 0x8;

50 
	}
}

51 
__MATH_INLINE
 

52 
__NTH
 (
	$__signbô
 (
__x
))

54 #i‡
__WORDSIZE
 == 32

55 
__exãnsi⁄__
 uni⁄ { 
__d
; 
__i
[2]; } 
__u
 = { __d: 
__x
 };

56  
__u
.
__i
[1] < 0;

58 
__m
;

59 
	`__asm
 ("pmovmskb %1, %0" : "Ù" (
__m
Ë: "x" (
__x
));

60  
__m
 & 0x80;

62 
	}
}

63 
__MATH_INLINE
 

64 
__NTH
 (
	$__signbôl
 (
__x
))

66 
__exãnsi⁄__
 uni⁄ { 
__l
; 
__i
[3]; } 
__u
 = { __l: 
__x
 };

67  (
__u
.
__i
[2] & 0x8000) != 0;

68 
	}
}

70 
	g__END_NAMESPACE_C99


74 #i‡(
__GNUC_PREREQ
 (2, 8Ë&& !
deföed
 
__NO_MATH_INLINES
 \

75 && 
deföed
 
	g__OPTIMIZE__
)

77 #ifde‡
__USE_ISOC99


78 
	g__BEGIN_NAMESPACE_C99


81 #i‡
__WORDSIZE
 =64 || 
deföed
 
__SSE_MATH__


82 
__MATH_INLINE
 

83 
__NTH
 (
	$Ãötf
 (
__x
))

85 
__ªs
;

86 
	`__asm
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

87  
__ªs
;

88 
	}
}

90 #i‡
__WORDSIZE
 =64 || 
deföed
 
__SSE2_MATH__


91 
__MATH_INLINE
 

92 
__NTH
 (
	$Ãöt
 (
__x
))

94 
__ªs
;

95 
	`__asm
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

96  
__ªs
;

97 
	}
}

99 #i‡
__WORDSIZE
 == 64

100 
__MATH_INLINE
 

101 
__NTH
 (
	$Œrötf
 (
__x
))

103 
__ªs
;

104 
	`__asm
 ("cvtss2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

105  
__ªs
;

106 
	}
}

107 
__MATH_INLINE
 

108 
__NTH
 (
	$Œröt
 (
__x
))

110 
__ªs
;

111 
	`__asm
 ("cvtsd2sò%1, %0" : "Ù" (
__ªs
Ë: "xm" (
__x
));

112  
__ªs
;

113 
	}
}

116 #i‡
deföed
 
__FINITE_MATH_ONLY__
 && __FINITE_MATH_ONLY__ > 0 \

117 && (
	g__WORDSIZE
 =64 || 
deföed
 
__SSE2_MATH__
)

119 
__MATH_INLINE
 

120 
__NTH
 (
	$fmaxf
 (
__x
, 
__y
))

122 
	`__asm
 ("maxs†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

123  
__x
;

124 
	}
}

125 
__MATH_INLINE
 

126 
__NTH
 (
	$fmax
 (
__x
, 
__y
))

128 
	`__asm
 ("maxsd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

129  
__x
;

130 
	}
}

133 
__MATH_INLINE
 

134 
__NTH
 (
	$fmöf
 (
__x
, 
__y
))

136 
	`__asm
 ("mös†%1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

137  
__x
;

138 
	}
}

139 
__MATH_INLINE
 

140 
__NTH
 (
	$fmö
 (
__x
, 
__y
))

142 
	`__asm
 ("mösd %1, %0" : "+x" (
__x
Ë: "xm" (
__y
));

143  
__x
;

144 
	}
}

147 
	g__END_NAMESPACE_C99


150 #i‡
deföed
 
__SSE4_1__
 && (
__WORDSIZE
 =64 || deföed 
__SSE2_MATH__
)

151 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_ISOC99


152 
__BEGIN_NAMESPACE_C99


155 
__MATH_INLINE
 

156 
__NTH
 (
	$röt
 (
__x
))

158 
__ªs
;

159 
	`__asm
 ("roundsd $4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

160  
__ªs
;

161 
	}
}

162 
__MATH_INLINE
 

163 
__NTH
 (
	$rötf
 (
__x
))

165 
__ªs
;

166 
	`__asm
 ("rounds†$4, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

167  
__ªs
;

168 
	}
}

170 #ifde‡
__USE_ISOC99


172 
__MATH_INLINE
 

173 
__NTH
 (
	$√¨byöt
 (
__x
))

175 
__ªs
;

176 
	`__asm
 ("roundsd $0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

177  
__ªs
;

178 
	}
}

179 
__MATH_INLINE
 

180 
__NTH
 (
	$√¨byötf
 (
__x
))

182 
__ªs
;

183 
	`__asm
 ("rounds†$0xc, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

184  
__ªs
;

185 
	}
}

188 
	g__END_NAMESPACE_C99


191 
__BEGIN_NAMESPACE_STD


193 
__MATH_INLINE
 

194 
__NTH
 (
	$˚û
 (
__x
))

196 
__ªs
;

197 
	`__asm
 ("roundsd $2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

198  
__ªs
;

199 
	}
}

200 
__END_NAMESPACE_STD


202 
__BEGIN_NAMESPACE_C99


203 
__MATH_INLINE
 

204 
__NTH
 (
	$˚ûf
 (
__x
))

206 
__ªs
;

207 
	`__asm
 ("rounds†$2, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

208  
__ªs
;

209 
	}
}

210 
__END_NAMESPACE_C99


212 
__BEGIN_NAMESPACE_STD


214 
__MATH_INLINE
 

215 
__NTH
 (
	$Êo‹
 (
__x
))

217 
__ªs
;

218 
	`__asm
 ("roundsd $1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

219  
__ªs
;

220 
	}
}

221 
__END_NAMESPACE_STD


223 
__BEGIN_NAMESPACE_C99


224 
__MATH_INLINE
 

225 
__NTH
 (
	$Êo‹f
 (
__x
))

227 
__ªs
;

228 
	`__asm
 ("rounds†$1, %1, %0" : "=x" (
__ªs
Ë: "xm" (
__x
));

229  
__ªs
;

230 
	}
}

231 
	g__END_NAMESPACE_C99


	@/usr/include/bits/mman.h

21 #i‚de‡
_SYS_MMAN_H


34 
	#PROT_READ
 0x1

	)

35 
	#PROT_WRITE
 0x2

	)

36 
	#PROT_EXEC
 0x4

	)

37 
	#PROT_NONE
 0x0

	)

38 
	#PROT_GROWSDOWN
 0x01000000

	)

40 
	#PROT_GROWSUP
 0x02000000

	)

44 
	#MAP_SHARED
 0x01

	)

45 
	#MAP_PRIVATE
 0x02

	)

46 #ifde‡
__USE_MISC


47 
	#MAP_TYPE
 0x0‡

	)

51 
	#MAP_FIXED
 0x10

	)

52 #ifde‡
__USE_MISC


53 
	#MAP_FILE
 0

	)

54 
	#MAP_ANONYMOUS
 0x20

	)

55 
	#MAP_ANON
 
MAP_ANONYMOUS


	)

56 
	#MAP_32BIT
 0x40

	)

60 #ifde‡
__USE_MISC


61 
	#MAP_GROWSDOWN
 0x00100

	)

62 
	#MAP_DENYWRITE
 0x00800

	)

63 
	#MAP_EXECUTABLE
 0x01000

	)

64 
	#MAP_LOCKED
 0x02000

	)

65 
	#MAP_NORESERVE
 0x04000

	)

66 
	#MAP_POPULATE
 0x08000

	)

67 
	#MAP_NONBLOCK
 0x10000

	)

68 
	#MAP_STACK
 0x20000

	)

69 
	#MAP_HUGETLB
 0x40000

	)

73 
	#MS_ASYNC
 1

	)

74 
	#MS_SYNC
 4

	)

75 
	#MS_INVALIDATE
 2

	)

78 
	#MCL_CURRENT
 1

	)

79 
	#MCL_FUTURE
 2

	)

83 #ifde‡
__USE_GNU


84 
	#MREMAP_MAYMOVE
 1

	)

85 
	#MREMAP_FIXED
 2

	)

89 #ifde‡
__USE_BSD


90 
	#MADV_NORMAL
 0

	)

91 
	#MADV_RANDOM
 1

	)

92 
	#MADV_SEQUENTIAL
 2

	)

93 
	#MADV_WILLNEED
 3

	)

94 
	#MADV_DONTNEED
 4

	)

95 
	#MADV_REMOVE
 9

	)

96 
	#MADV_DONTFORK
 10

	)

97 
	#MADV_DOFORK
 11

	)

98 
	#MADV_MERGEABLE
 12

	)

99 
	#MADV_UNMERGEABLE
 13

	)

100 
	#MADV_HUGEPAGE
 14

	)

101 
	#MADV_NOHUGEPAGE
 15

	)

102 
	#MADV_HWPOISON
 100

	)

106 #ifde‡
__USE_XOPEN2K


107 
	#POSIX_MADV_NORMAL
 0

	)

108 
	#POSIX_MADV_RANDOM
 1

	)

109 
	#POSIX_MADV_SEQUENTIAL
 2

	)

110 
	#POSIX_MADV_WILLNEED
 3

	)

111 
	#POSIX_MADV_DONTNEED
 4

	)

	@/usr/include/bits/nan.h

20 #i‚de‡
_MATH_H


27 #i‡
__GNUC_PREREQ
(3,3)

29 
	#NAN
 (
	`__buûtö_«nf
 (""))

	)

31 #ñi‡
deföed
 
__GNUC__


33 
	#NAN
 \

34 (
__exãnsi⁄__
 \

35 ((uni⁄ { 
__l
 
	`__©åibuã__
 ((
	`__mode__
 (
__SI__
))); 
__d
; }) \

36 { 
__l
: 0x7fc00000UL }).
__d
)

	)

40 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#__«n_byãs
 { 0x7f, 0xc0, 0, 0 }

	)

45 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


46 
	#__«n_byãs
 { 0, 0, 0xc0, 0x7‡}

	)

49 uni⁄ { 
	m__c
[4]; 
	m__d
; } 
__«n_uni⁄


50 
	g__©åibuã_u£d__
 = { 
__«n_byãs
 };

51 
	#NAN
 (
__«n_uni⁄
.
__d
)

	)

	@/usr/include/bits/posix_opt.h

20 #i‚def 
_BITS_POSIX_OPT_H


21 
	#_BITS_POSIX_OPT_H
 1

	)

24 
	#_POSIX_JOB_CONTROL
 1

	)

27 
	#_POSIX_SAVED_IDS
 1

	)

30 
	#_POSIX_PRIORITY_SCHEDULING
 200809L

	)

33 
	#_POSIX_SYNCHRONIZED_IO
 200809L

	)

36 
	#_POSIX_FSYNC
 200809L

	)

39 
	#_POSIX_MAPPED_FILES
 200809L

	)

42 
	#_POSIX_MEMLOCK
 200809L

	)

45 
	#_POSIX_MEMLOCK_RANGE
 200809L

	)

48 
	#_POSIX_MEMORY_PROTECTION
 200809L

	)

51 
	#_POSIX_CHOWN_RESTRICTED
 0

	)

55 
	#_POSIX_VDISABLE
 '\0'

	)

58 
	#_POSIX_NO_TRUNC
 1

	)

61 
	#_XOPEN_REALTIME
 1

	)

64 
	#_XOPEN_REALTIME_THREADS
 1

	)

67 
	#_XOPEN_SHM
 1

	)

70 
	#_POSIX_THREADS
 200809L

	)

73 
	#_POSIX_REENTRANT_FUNCTIONS
 1

	)

74 
	#_POSIX_THREAD_SAFE_FUNCTIONS
 200809L

	)

77 
	#_POSIX_THREAD_PRIORITY_SCHEDULING
 200809L

	)

80 
	#_POSIX_THREAD_ATTR_STACKSIZE
 200809L

	)

83 
	#_POSIX_THREAD_ATTR_STACKADDR
 200809L

	)

86 
	#_POSIX_THREAD_PRIO_INHERIT
 200809L

	)

90 
	#_POSIX_THREAD_PRIO_PROTECT
 200809L

	)

92 #ifde‡
__USE_XOPEN2K8


94 
	#_POSIX_THREAD_ROBUST_PRIO_INHERIT
 200809L

	)

97 
	#_POSIX_THREAD_ROBUST_PRIO_PROTECT
 -1

	)

101 
	#_POSIX_SEMAPHORES
 200809L

	)

104 
	#_POSIX_REALTIME_SIGNALS
 200809L

	)

107 
	#_POSIX_ASYNCHRONOUS_IO
 200809L

	)

108 
	#_POSIX_ASYNC_IO
 1

	)

110 
	#_LFS_ASYNCHRONOUS_IO
 1

	)

112 
	#_POSIX_PRIORITIZED_IO
 200809L

	)

115 
	#_LFS64_ASYNCHRONOUS_IO
 1

	)

118 
	#_LFS_LARGEFILE
 1

	)

119 
	#_LFS64_LARGEFILE
 1

	)

120 
	#_LFS64_STDIO
 1

	)

123 
	#_POSIX_SHARED_MEMORY_OBJECTS
 200809L

	)

126 
	#_POSIX_CPUTIME
 0

	)

129 
	#_POSIX_THREAD_CPUTIME
 0

	)

132 
	#_POSIX_REGEXP
 1

	)

135 
	#_POSIX_READER_WRITER_LOCKS
 200809L

	)

138 
	#_POSIX_SHELL
 1

	)

141 
	#_POSIX_TIMEOUTS
 200809L

	)

144 
	#_POSIX_SPIN_LOCKS
 200809L

	)

147 
	#_POSIX_SPAWN
 200809L

	)

150 
	#_POSIX_TIMERS
 200809L

	)

153 
	#_POSIX_BARRIERS
 200809L

	)

156 
	#_POSIX_MESSAGE_PASSING
 200809L

	)

159 
	#_POSIX_THREAD_PROCESS_SHARED
 200809L

	)

162 
	#_POSIX_MONOTONIC_CLOCK
 0

	)

165 
	#_POSIX_CLOCK_SELECTION
 200809L

	)

168 
	#_POSIX_ADVISORY_INFO
 200809L

	)

171 
	#_POSIX_IPV6
 200809L

	)

174 
	#_POSIX_RAW_SOCKETS
 200809L

	)

177 
	#_POSIX2_CHAR_TERM
 200809L

	)

180 
	#_POSIX_SPORADIC_SERVER
 -1

	)

181 
	#_POSIX_THREAD_SPORADIC_SERVER
 -1

	)

184 
	#_POSIX_TRACE
 -1

	)

185 
	#_POSIX_TRACE_EVENT_FILTER
 -1

	)

186 
	#_POSIX_TRACE_INHERIT
 -1

	)

187 
	#_POSIX_TRACE_LOG
 -1

	)

190 
	#_POSIX_TYPED_MEMORY_OBJECTS
 -1

	)

193 
	#_XOPEN_STREAMS
 -1

	)

	@/usr/include/bits/pthreadtypes.h

20 #i‚de‡
_BITS_PTHREADTYPES_H


21 
	#_BITS_PTHREADTYPES_H
 1

	)

23 
	~<bôs/w‹dsize.h
>

25 #i‡
__WORDSIZE
 == 64

26 
	#__SIZEOF_PTHREAD_ATTR_T
 56

	)

27 
	#__SIZEOF_PTHREAD_MUTEX_T
 40

	)

28 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

29 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

30 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

31 
	#__SIZEOF_PTHREAD_RWLOCK_T
 56

	)

32 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

33 
	#__SIZEOF_PTHREAD_BARRIER_T
 32

	)

34 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

36 
	#__SIZEOF_PTHREAD_ATTR_T
 36

	)

37 
	#__SIZEOF_PTHREAD_MUTEX_T
 24

	)

38 
	#__SIZEOF_PTHREAD_MUTEXATTR_T
 4

	)

39 
	#__SIZEOF_PTHREAD_COND_T
 48

	)

40 
	#__SIZEOF_PTHREAD_CONDATTR_T
 4

	)

41 
	#__SIZEOF_PTHREAD_RWLOCK_T
 32

	)

42 
	#__SIZEOF_PTHREAD_RWLOCKATTR_T
 8

	)

43 
	#__SIZEOF_PTHREAD_BARRIER_T
 20

	)

44 
	#__SIZEOF_PTHREAD_BARRIERATTR_T
 4

	)

50 
	t±hªad_t
;

55 
	m__size
[
__SIZEOF_PTHREAD_ATTR_T
];

56 
	m__Æign
;

57 } 
	t±hªad_©å_t
;

60 #i‡
__WORDSIZE
 == 64

61 
	s__±hªad_öã∫Æ_li°


63 
__±hªad_öã∫Æ_li°
 *
	m__¥ev
;

64 
__±hªad_öã∫Æ_li°
 *
	m__√xt
;

65 } 
	t__±hªad_li°_t
;

67 
	s__±hªad_öã∫Æ_¶i°


69 
__±hªad_öã∫Æ_¶i°
 *
	m__√xt
;

70 } 
	t__±hªad_¶i°_t
;

78 
	s__±hªad_muãx_s


80 
	m__lock
;

81 
	m__cou¡
;

82 
	m__ow√r
;

83 #i‡
__WORDSIZE
 == 64

84 
	m__nu£rs
;

88 
	m__köd
;

89 #i‡
__WORDSIZE
 == 64

90 
	m__•ös
;

91 
__±hªad_li°_t
 
	m__li°
;

92 
	#__PTHREAD_MUTEX_HAVE_PREV
 1

	)

94 
	m__nu£rs
;

95 
__exãnsi⁄__
 union

97 
	m__•ös
;

98 
__±hªad_¶i°_t
 
	m__li°
;

101 } 
	m__d©a
;

102 
	m__size
[
__SIZEOF_PTHREAD_MUTEX_T
];

103 
	m__Æign
;

104 } 
	t±hªad_muãx_t
;

108 
	m__size
[
__SIZEOF_PTHREAD_MUTEXATTR_T
];

109 
	m__Æign
;

110 } 
	t±hªad_muãx©å_t
;

119 
	m__lock
;

120 
	m__fuãx
;

121 
__exãnsi⁄__
 
	m__tŸÆ_£q
;

122 
__exãnsi⁄__
 
	m__wakeup_£q
;

123 
__exãnsi⁄__
 
	m__wokí_£q
;

124 *
	m__muãx
;

125 
	m__nwaôîs
;

126 
	m__brﬂdˇ°_£q
;

127 } 
	m__d©a
;

128 
	m__size
[
__SIZEOF_PTHREAD_COND_T
];

129 
__exãnsi⁄__
 
	m__Æign
;

130 } 
	t±hªad_c⁄d_t
;

134 
	m__size
[
__SIZEOF_PTHREAD_CONDATTR_T
];

135 
	m__Æign
;

136 } 
	t±hªad_c⁄d©å_t
;

140 
	t±hªad_key_t
;

144 
	t±hªad_⁄˚_t
;

147 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


152 #i‡
__WORDSIZE
 == 64

155 
	m__lock
;

156 
	m__ƒ_ªadîs
;

157 
	m__ªadîs_wakeup
;

158 
	m__wrôî_wakeup
;

159 
	m__ƒ_ªadîs_queued
;

160 
	m__ƒ_wrôîs_queued
;

161 
	m__wrôî
;

162 
	m__sh¨ed
;

163 
	m__∑d1
;

164 
	m__∑d2
;

167 
	m__Êags
;

168 } 
	m__d©a
;

172 
	m__lock
;

173 
	m__ƒ_ªadîs
;

174 
	m__ªadîs_wakeup
;

175 
	m__wrôî_wakeup
;

176 
	m__ƒ_ªadîs_queued
;

177 
	m__ƒ_wrôîs_queued
;

180 
	m__Êags
;

181 
	m__sh¨ed
;

182 
	m__∑d1
;

183 
	m__∑d2
;

184 
	m__wrôî
;

185 } 
	m__d©a
;

187 
	m__size
[
__SIZEOF_PTHREAD_RWLOCK_T
];

188 
	m__Æign
;

189 } 
	t±hªad_rwlock_t
;

193 
	m__size
[
__SIZEOF_PTHREAD_RWLOCKATTR_T
];

194 
	m__Æign
;

195 } 
	t±hªad_rwlock©å_t
;

199 #ifde‡
__USE_XOPEN2K


201 vﬁ©ûê
	t±hªad_•ölock_t
;

208 
	m__size
[
__SIZEOF_PTHREAD_BARRIER_T
];

209 
	m__Æign
;

210 } 
	t±hªad_b¨rõr_t
;

214 
	m__size
[
__SIZEOF_PTHREAD_BARRIERATTR_T
];

215 
	m__Æign
;

216 } 
	t±hªad_b¨rõøâr_t
;

220 #i‡
__WORDSIZE
 == 32

222 
	#__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
	`__ªg∑rm__
 (1)))

	)

	@/usr/include/bits/sched.h

22 #i‚de‡
__√ed_sched∑øm


24 #i‚de‡
_SCHED_H


30 
	#SCHED_OTHER
 0

	)

31 
	#SCHED_FIFO
 1

	)

32 
	#SCHED_RR
 2

	)

33 #ifde‡
__USE_GNU


34 
	#SCHED_BATCH
 3

	)

35 
	#SCHED_IDLE
 5

	)

37 
	#SCHED_RESET_ON_FORK
 0x40000000

	)

40 #ifde‡
__USE_GNU


42 
	#CSIGNAL
 0x000000f‡

	)

43 
	#CLONE_VM
 0x00000100

	)

44 
	#CLONE_FS
 0x00000200

	)

45 
	#CLONE_FILES
 0x00000400

	)

46 
	#CLONE_SIGHAND
 0x00000800

	)

47 
	#CLONE_PTRACE
 0x00002000

	)

48 
	#CLONE_VFORK
 0x00004000

	)

50 
	#CLONE_PARENT
 0x00008000

	)

52 
	#CLONE_THREAD
 0x00010000

	)

53 
	#CLONE_NEWNS
 0x00020000

	)

54 
	#CLONE_SYSVSEM
 0x00040000

	)

55 
	#CLONE_SETTLS
 0x00080000

	)

56 
	#CLONE_PARENT_SETTID
 0x00100000

	)

58 
	#CLONE_CHILD_CLEARTID
 0x00200000

	)

60 
	#CLONE_DETACHED
 0x00400000

	)

61 
	#CLONE_UNTRACED
 0x00800000

	)

63 
	#CLONE_CHILD_SETTID
 0x01000000

	)

65 
	#CLONE_NEWUTS
 0x04000000

	)

66 
	#CLONE_NEWIPC
 0x08000000

	)

67 
	#CLONE_NEWUSER
 0x10000000

	)

68 
	#CLONE_NEWPID
 0x20000000

	)

69 
	#CLONE_NEWNET
 0x40000000

	)

70 
	#CLONE_IO
 0x80000000

	)

74 
	ssched_∑øm


76 
	m__sched_¥i‹ôy
;

79 
	g__BEGIN_DECLS


81 #ifde‡
__USE_GNU


83 
˛⁄e
 ((*
__‚
Ë(*
__¨g
), *
__chûd_°ack
,

84 
__Êags
, *
__¨g
, ...Ë
__THROW
;

87 
	$unsh¨e
 (
__Êags
Ë
__THROW
;

90 
	$sched_gë˝u
 (Ë
__THROW
;

93 
	$£äs
 (
__fd
, 
__n°y≥
Ë
__THROW
;

97 
__END_DECLS


101 #i‡!
deföed
 
__deföed_sched∑øm
 \

102 && (
deföed
 
__√ed_sched∑øm
 || deföed 
_SCHED_H
)

103 
	#__deföed_sched∑øm
 1

	)

105 
	s__sched_∑øm


107 
__sched_¥i‹ôy
;

109 #unde‡
__√ed_sched∑øm


113 #i‡
deföed
 
_SCHED_H
 && !deföed 
__˝u_£t_t_deföed


114 
	#__˝u_£t_t_deföed


	)

116 
	#__CPU_SETSIZE
 1024

	)

117 
	#__NCPUBITS
 (8 *  (
__˝u_mask
))

	)

120 
	t__˝u_mask
;

123 
	#__CPUELT
(
˝u
Ë((˝uË/ 
__NCPUBITS
)

	)

124 
	#__CPUMASK
(
˝u
Ë((
__˝u_mask
Ë1 << ((˝uË% 
__NCPUBITS
))

	)

129 
__˝u_mask
 
__bôs
[
__CPU_SETSIZE
 / 
__NCPUBITS
];

130 } 
	t˝u_£t_t
;

133 #i‡
	`__GNUC_PREREQ
 (2, 91)

134 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

135 dÿ
	`__buûtö_mem£t
 (
˝u£ç
, '\0', 
£tsize
); 0)

	)

137 
	#__CPU_ZERO_S
(
£tsize
, 
˝u£ç
) \

139 
size_t
 
__i
; \

140 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

141 
__˝u_mask
 *
__bôs
 = (
˝u£ç
)->__bits; \

142 
__i
 = 0; __ò< 
__imax
; ++__i) \

143 
__bôs
[
__i
] = 0; \

144 
	}
} 0)

	)

146 
	#__CPU_SET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

147 (
__exãnsi⁄__
 \

148 ({ 
size_t
 
__˝u
 = (
˝u
); \

149 
__˝u
 < 8 * (
£tsize
) \

150 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

151 |
	`__CPUMASK
 (
__˝u
)) \

152 : 0; }))

	)

153 
	#__CPU_CLR_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

154 (
__exãnsi⁄__
 \

155 ({ 
size_t
 
__˝u
 = (
˝u
); \

156 
__˝u
 < 8 * (
£tsize
) \

157 ? (((
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

158 &~
	`__CPUMASK
 (
__˝u
)) \

159 : 0; }))

	)

160 
	#__CPU_ISSET_S
(
˝u
, 
£tsize
, 
˝u£ç
) \

161 (
__exãnsi⁄__
 \

162 ({ 
size_t
 
__˝u
 = (
˝u
); \

163 
__˝u
 < 8 * (
£tsize
) \

164 ? ((((
__c⁄°
 
__˝u_mask
 *Ë((
˝u£ç
)->
__bôs
))[
	`__CPUELT
 (
__˝u
)] \

165 & 
	`__CPUMASK
 (
__˝u
))) != 0 \

166 : 0; }))

	)

168 
	#__CPU_COUNT_S
(
£tsize
, 
˝u£ç
) \

169 
	`__sched_˝ucou¡
 (
£tsize
, 
˝u£ç
)

	)

171 #i‡
__GNUC_PREREQ
 (2, 91)

172 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

173 (
	`__buûtö_memcmp
 (
˝u£ç1
, 
˝u£ç2
, 
£tsize
Ë=0)

	)

175 
	#__CPU_EQUAL_S
(
£tsize
, 
˝u£ç1
, 
˝u£ç2
) \

176 (
__exãnsi⁄__
 \

177 ({ 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
˝u£ç1
)->
__bôs
; \

178 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
˝u£ç2
)->
__bôs
; \

179 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

180 
size_t
 
__i
; \

181 
__i
 = 0; __ò< 
__imax
; ++__i) \

182 i‡(
__¨r1
[
__i
] !
__¨r2
[__i]) \

184 
__i
 =
__imax
; }))

	)

187 
	#__CPU_OP_S
(
£tsize
, 
de°£t
, 
§c£t1
, 
§c£t2
, 
›
) \

188 (
__exãnsi⁄__
 \

189 ({ 
˝u_£t_t
 *
__de°
 = (
de°£t
); \

190 
__c⁄°
 
__˝u_mask
 *
__¨r1
 = (
§c£t1
)->
__bôs
; \

191 
__c⁄°
 
__˝u_mask
 *
__¨r2
 = (
§c£t2
)->
__bôs
; \

192 
size_t
 
__imax
 = (
£tsize
Ë/  (
__˝u_mask
); \

193 
size_t
 
__i
; \

194 
__i
 = 0; __ò< 
__imax
; ++__i) \

195 ((
__˝u_mask
 *Ë
__de°
->
__bôs
)[
__i
] = 
__¨r1
[__i] 
›
 
__¨r2
[__i]; \

196 
__de°
; }))

	)

198 
	#__CPU_ALLOC_SIZE
(
cou¡
) \

199 ((((
cou¡
Ë+ 
__NCPUBITS
 - 1Ë/ __NCPUBITSË*  (
__˝u_mask
))

	)

200 
	#__CPU_ALLOC
(
cou¡
Ë
	`__sched_˝uÆloc
 (cou¡)

	)

201 
	#__CPU_FREE
(
˝u£t
Ë
	`__sched_˝u‰ì
 (˝u£t)

	)

203 
__BEGIN_DECLS


205 
	$__sched_˝ucou¡
 (
size_t
 
__£tsize
, c⁄° 
˝u_£t_t
 *
__£ç
)

206 
__THROW
;

207 
˝u_£t_t
 *
	$__sched_˝uÆloc
 (
size_t
 
__cou¡
Ë
__THROW
 
__wur
;

208 
	$__sched_˝u‰ì
 (
˝u_£t_t
 *
__£t
Ë
__THROW
;

210 
__END_DECLS


	@/usr/include/bits/stat.h

19 #i‡!
deföed
 
_SYS_STAT_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_STAT_H


24 
	#_BITS_STAT_H
 1

	)

27 
	#_STAT_VER_KERNEL
 0

	)

29 #i‡
__WORDSIZE
 == 32

30 
	#_STAT_VER_SVR4
 2

	)

31 
	#_STAT_VER_LINUX
 3

	)

34 
	#_MKNOD_VER_LINUX
 1

	)

35 
	#_MKNOD_VER_SVR4
 2

	)

36 
	#_MKNOD_VER
 
_MKNOD_VER_LINUX


	)

38 
	#_STAT_VER_LINUX
 1

	)

41 
	#_MKNOD_VER_LINUX
 0

	)

44 
	#_STAT_VER
 
_STAT_VER_LINUX


	)

46 
	s°©


48 
__dev_t
 
	m°_dev
;

49 #i‡
__WORDSIZE
 == 32

50 
	m__∑d1
;

52 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


53 
__öo_t
 
	m°_öo
;

55 
__öo_t
 
	m__°_öo
;

57 #i‡
__WORDSIZE
 == 32

58 
__mode_t
 
	m°_mode
;

59 
__∆ök_t
 
	m°_∆ök
;

61 
__∆ök_t
 
	m°_∆ök
;

62 
__mode_t
 
	m°_mode
;

64 
__uid_t
 
	m°_uid
;

65 
__gid_t
 
	m°_gid
;

66 #i‡
__WORDSIZE
 == 64

67 
	m__∑d0
;

69 
__dev_t
 
	m°_rdev
;

70 #i‡
__WORDSIZE
 == 32

71 
	m__∑d2
;

73 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


74 
__off_t
 
	m°_size
;

76 
__off64_t
 
	m°_size
;

78 
__blksize_t
 
	m°_blksize
;

79 #i‡
__WORDSIZE
 =64 || !
deföed
 
__USE_FILE_OFFSET64


80 
__blk˙t_t
 
	m°_blocks
;

82 
__blk˙t64_t
 
	m°_blocks
;

84 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


91 
time•ec
 
	m°_©im
;

92 
time•ec
 
	m°_mtim
;

93 
time•ec
 
	m°_˘im
;

94 
	#°_©ime
 
°_©im
.
tv_£c


	)

95 
	#°_mtime
 
°_mtim
.
tv_£c


	)

96 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

98 
__time_t
 
	m°_©ime
;

99 
	m°_©imí£c
;

100 
__time_t
 
	m°_mtime
;

101 
	m°_mtimí£c
;

102 
__time_t
 
	m°_˘ime
;

103 
	m°_˘imí£c
;

105 #i‡
__WORDSIZE
 == 64

106 
	m__unu£d
[3];

108 #i‚de‡
__USE_FILE_OFFSET64


109 
	m__unu£d4
;

110 
	m__unu£d5
;

112 
__öo64_t
 
	m°_öo
;

117 #ifde‡
__USE_LARGEFILE64


119 
	s°©64


121 
__dev_t
 
	m°_dev
;

122 #i‡
__WORDSIZE
 == 64

123 
__öo64_t
 
	m°_öo
;

124 
__∆ök_t
 
	m°_∆ök
;

125 
__mode_t
 
	m°_mode
;

127 
	m__∑d1
;

128 
__öo_t
 
	m__°_öo
;

129 
__mode_t
 
	m°_mode
;

130 
__∆ök_t
 
	m°_∆ök
;

132 
__uid_t
 
	m°_uid
;

133 
__gid_t
 
	m°_gid
;

134 #i‡
__WORDSIZE
 == 64

135 
	m__∑d0
;

136 
__dev_t
 
	m°_rdev
;

137 
__off_t
 
	m°_size
;

139 
__dev_t
 
	m°_rdev
;

140 
	m__∑d2
;

141 
__off64_t
 
	m°_size
;

143 
__blksize_t
 
	m°_blksize
;

144 
__blk˙t64_t
 
	m°_blocks
;

145 #i‡
deföed
 
__USE_MISC
 || deföed 
__USE_XOPEN2K8


152 
time•ec
 
	m°_©im
;

153 
time•ec
 
	m°_mtim
;

154 
time•ec
 
	m°_˘im
;

155 
	#°_©ime
 
°_©im
.
tv_£c


	)

156 
	#°_mtime
 
°_mtim
.
tv_£c


	)

157 
	#°_˘ime
 
°_˘im
.
tv_£c


	)

159 
__time_t
 
	m°_©ime
;

160 
	m°_©imí£c
;

161 
__time_t
 
	m°_mtime
;

162 
	m°_mtimí£c
;

163 
__time_t
 
	m°_˘ime
;

164 
	m°_˘imí£c
;

166 #i‡
__WORDSIZE
 == 64

167 
	m__unu£d
[3];

169 
__öo64_t
 
	m°_öo
;

175 
	#_STATBUF_ST_BLKSIZE


	)

176 
	#_STATBUF_ST_RDEV


	)

178 
	#_STATBUF_ST_NSEC


	)

182 
	#__S_IFMT
 0170000

	)

185 
	#__S_IFDIR
 0040000

	)

186 
	#__S_IFCHR
 0020000

	)

187 
	#__S_IFBLK
 0060000

	)

188 
	#__S_IFREG
 0100000

	)

189 
	#__S_IFIFO
 0010000

	)

190 
	#__S_IFLNK
 0120000

	)

191 
	#__S_IFSOCK
 0140000

	)

195 
	#__S_TYPEISMQ
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

196 
	#__S_TYPEISSEM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

197 
	#__S_TYPEISSHM
(
buf
Ë((buf)->
°_mode
 - (buf)->°_mode)

	)

201 
	#__S_ISUID
 04000

	)

202 
	#__S_ISGID
 02000

	)

203 
	#__S_ISVTX
 01000

	)

204 
	#__S_IREAD
 0400

	)

205 
	#__S_IWRITE
 0200

	)

206 
	#__S_IEXEC
 0100

	)

208 #ifde‡
__USE_ATFILE


209 
	#UTIME_NOW
 ((1»<< 30Ë- 1l)

	)

210 
	#UTIME_OMIT
 ((1»<< 30Ë- 2l)

	)

	@/usr/include/bits/stdio-ldbl.h

20 #i‚de‡
_STDIO_H


24 
__BEGIN_NAMESPACE_STD


25 
	$__LDBL_REDIR_DECL
 (
Ârötf
)

26 
	$__LDBL_REDIR_DECL
 (
¥ötf
)

27 
	$__LDBL_REDIR_DECL
 (
•rötf
)

28 
	$__LDBL_REDIR_DECL
 (
vÂrötf
)

29 
	$__LDBL_REDIR_DECL
 (
v¥ötf
)

30 
	$__LDBL_REDIR_DECL
 (
v•rötf
)

31 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

32 && !
deföed
 
__REDIRECT
 \

33 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

34 
	$__LDBL_REDIR1_DECL
 (
fsˇnf
, 
__∆dbl___isoc99_fsˇnf
)

35 
	$__LDBL_REDIR1_DECL
 (
sˇnf
, 
__∆dbl___isoc99_sˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
ssˇnf
, 
__∆dbl___isoc99_ssˇnf
)

38 
	$__LDBL_REDIR_DECL
 (
fsˇnf
)

39 
	$__LDBL_REDIR_DECL
 (
sˇnf
)

40 
	$__LDBL_REDIR_DECL
 (
ssˇnf
)

42 
__END_NAMESPACE_STD


44 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


45 
__BEGIN_NAMESPACE_C99


46 
	$__LDBL_REDIR_DECL
 (
¢¥ötf
)

47 
	$__LDBL_REDIR_DECL
 (
v¢¥ötf
)

48 
__END_NAMESPACE_C99


51 #ifdef 
__USE_ISOC99


52 
__BEGIN_NAMESPACE_C99


53 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

54 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

55 
	$__LDBL_REDIR1_DECL
 (
vfsˇnf
, 
__∆dbl___isoc99_vfsˇnf
)

56 
	$__LDBL_REDIR1_DECL
 (
vsˇnf
, 
__∆dbl___isoc99_vsˇnf
)

57 
	$__LDBL_REDIR1_DECL
 (
vssˇnf
, 
__∆dbl___isoc99_vssˇnf
)

59 
	$__LDBL_REDIR_DECL
 (
vfsˇnf
)

60 
	$__LDBL_REDIR_DECL
 (
vssˇnf
)

61 
	$__LDBL_REDIR_DECL
 (
vsˇnf
)

63 
__END_NAMESPACE_C99


66 #ifde‡
__USE_GNU


67 
	$__LDBL_REDIR_DECL
 (
vd¥ötf
)

68 
	$__LDBL_REDIR_DECL
 (
d¥ötf
)

69 
	$__LDBL_REDIR_DECL
 (
va•rötf
)

70 
	$__LDBL_REDIR_DECL
 (
__a•rötf
)

71 
	$__LDBL_REDIR_DECL
 (
a•rötf
)

72 
	$__LDBL_REDIR_DECL
 (
ob°ack_¥ötf
)

73 
	$__LDBL_REDIR_DECL
 (
ob°ack_v¥ötf
)

76 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


77 
	$__LDBL_REDIR_DECL
 (
__•rötf_chk
)

78 
	$__LDBL_REDIR_DECL
 (
__v•rötf_chk
)

79 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


80 
	$__LDBL_REDIR_DECL
 (
__¢¥ötf_chk
)

81 
	$__LDBL_REDIR_DECL
 (
__v¢¥ötf_chk
)

83 #i‡
__USE_FORTIFY_LEVEL
 > 1

84 
	$__LDBL_REDIR_DECL
 (
__Ârötf_chk
)

85 
	$__LDBL_REDIR_DECL
 (
__¥ötf_chk
)

86 
	$__LDBL_REDIR_DECL
 (
__vÂrötf_chk
)

87 
	$__LDBL_REDIR_DECL
 (
__v¥ötf_chk
)

88 #ifde‡
__USE_GNU


89 
	$__LDBL_REDIR_DECL
 (
__a•rötf_chk
)

90 
	$__LDBL_REDIR_DECL
 (
__va•rötf_chk
)

91 
	$__LDBL_REDIR_DECL
 (
__d¥ötf_chk
)

92 
	$__LDBL_REDIR_DECL
 (
__vd¥ötf_chk
)

93 
	$__LDBL_REDIR_DECL
 (
__ob°ack_¥ötf_chk
)

94 
	$__LDBL_REDIR_DECL
 (
__ob°ack_v¥ötf_chk
)

	@/usr/include/bits/stdio.h

20 #i‚de‡
_STDIO_H


24 #i‚de‡
__exã∫_ölöe


25 
	#__STDIO_INLINE
 
ölöe


	)

27 
	#__STDIO_INLINE
 
__exã∫_ölöe


	)

31 #ifde‡
__USE_EXTERN_INLINES


34 #i‡!(
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe
)

36 
__STDIO_INLINE
 

37 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

39  
	`vÂrötf
 (
°dout
, 
__fmt
, 
__¨g
);

40 
	}
}

44 
__STDIO_INLINE
 

45 
	$gëch¨
 ()

47  
	`_IO_gëc
 (
°dö
);

48 
	}
}

51 #ifde‡
__USE_MISC


53 
__STDIO_INLINE
 

54 
	$fgëc_u∆ocked
 (
FILE
 *
__Â
)

56  
	`_IO_gëc_u∆ocked
 (
__Â
);

57 
	}
}

61 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


63 
__STDIO_INLINE
 

64 
	$gëc_u∆ocked
 (
FILE
 *
__Â
)

66  
	`_IO_gëc_u∆ocked
 (
__Â
);

67 
	}
}

70 
__STDIO_INLINE
 

71 
	$gëch¨_u∆ocked
 ()

73  
	`_IO_gëc_u∆ocked
 (
°dö
);

74 
	}
}

79 
__STDIO_INLINE
 

80 
	$putch¨
 (
__c
)

82  
	`_IO_putc
 (
__c
, 
°dout
);

83 
	}
}

86 #ifde‡
__USE_MISC


88 
__STDIO_INLINE
 

89 
	$Âutc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

91  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

92 
	}
}

96 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


98 
__STDIO_INLINE
 

99 
	$putc_u∆ocked
 (
__c
, 
FILE
 *
__°ªam
)

101  
	`_IO_putc_u∆ocked
 (
__c
, 
__°ªam
);

102 
	}
}

105 
__STDIO_INLINE
 

106 
	$putch¨_u∆ocked
 (
__c
)

108  
	`_IO_putc_u∆ocked
 (
__c
, 
°dout
);

109 
	}
}

113 #ifdef 
__USE_GNU


115 
__STDIO_INLINE
 
_IO_ssize_t


116 
	$gëlöe
 (**
__löïå
, 
size_t
 *
__n
, 
FILE
 *
__°ªam
)

118  
	`__gëdñim
 (
__löïå
, 
__n
, '\n', 
__°ªam
);

119 
	}
}

123 #ifde‡
__USE_MISC


125 
__STDIO_INLINE
 

126 
__NTH
 (
	$„of_u∆ocked
 (
FILE
 *
__°ªam
))

128  
	`_IO_„of_u∆ocked
 (
__°ªam
);

129 
	}
}

132 
__STDIO_INLINE
 

133 
__NTH
 (
	$„º‹_u∆ocked
 (
FILE
 *
__°ªam
))

135  
	`_IO_„º‹_u∆ocked
 (
__°ªam
);

136 
	}
}

142 #i‡
deföed
 
__USE_MISC
 && deföed 
__GNUC__
 && deföed 
__OPTIMIZE__
 \

143 && !
deföed
 
	g__˝lu•lus


145 
	#‰ód_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

146 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

147 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

148 && (
size_t
Ë(
size
) != 0) \

149 ? ({ *
__±r
 = (*Ë(
±r
); \

150 
FILE
 *
__°ªam
 = (
°ªam
); \

151 
size_t
 
__˙t
; \

152 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

153 
__˙t
 > 0; --__cnt) \

155 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
); \

156 i‡(
__c
 =
EOF
) \

158 *
__±r
++ = 
__c
; \

160 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

161 / (
size_t
Ë(
size
); }) \

162 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

163 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

165 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

166 (Ë(
n
), (
size_t
) 0) \

167 : 
	`‰ód_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

169 
	#fwrôe_u∆ocked
(
±r
, 
size
, 
n
, 
°ªam
) \

170 (
	`__exãnsi⁄__
 ((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& __buûtö_c⁄°™t_∞(
n
) \

171 && (
size_t
Ë(
size
Ë* (size_tË(
n
) <= 8 \

172 && (
size_t
Ë(
size
) != 0) \

173 ? ({ c⁄° *
__±r
 = (c⁄° *Ë(
±r
); \

174 
FILE
 *
__°ªam
 = (
°ªam
); \

175 
size_t
 
__˙t
; \

176 
__˙t
 = (
size_t
Ë(
size
Ë* (size_tË(
n
); \

177 
__˙t
 > 0; --__cnt) \

178 i‡(
	`_IO_putc_u∆ocked
 (*
__±r
++, 
__°ªam
Ë=
EOF
) \

180 ((
size_t
Ë(
size
Ë* (size_tË(
n
Ë- 
__˙t
) \

181 / (
size_t
Ë(
size
); }) \

182 : (((
	`__buûtö_c⁄°™t_p
 (
size
Ë&& (
size_t
) (size) == 0) \

183 || (
	`__buûtö_c⁄°™t_p
 (
n
Ë&& (
size_t
) (n) == 0)) \

185 ? ((Ë(
±r
), (Ë(
°ªam
), (Ë(
size
), \

186 (Ë(
n
), (
size_t
) 0) \

187 : 
	`fwrôe_u∆ocked
 (
±r
, 
size
, 
n
, 
°ªam
))))

	)

191 #unde‡
__STDIO_INLINE


	@/usr/include/bits/stdio2.h

20 #i‚de‡
_STDIO_H


24 
	$__•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

25 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...Ë
__THROW
;

26 
	$__v•rötf_chk
 (*
__ª°ri˘
 
__s
, 
__Êag
, 
size_t
 
__¶í
,

27 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

28 
_G_va_li°
 
__≠
Ë
__THROW
;

30 #ifde‡
__va_¨g_∑ck


31 
__exã∫_Æways_ölöe
 

32 
	`__NTH
 (
	$•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

34  
	`__buûtö___•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

35 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

36 
	}
}

37 #ñi‡!
deföed
 
__˝lu•lus


38 
	#•rötf
(
°r
, ...) \

39 
	`__buûtö___•rötf_chk
 (
°r
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

40 
__VA_ARGS__
)

	)

43 
__exã∫_Æways_ölöe
 

44 
__NTH
 (
	$v•rötf
 (*
__ª°ri˘
 
__s
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

45 
_G_va_li°
 
__≠
))

47  
	`__buûtö___v•rötf_chk
 (
__s
, 
__USE_FORTIFY_LEVEL
 - 1,

48 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

49 
	}
}

51 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_ISOC99
 || deföed 
__USE_UNIX98


53 
	$__¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

54 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

55 ...Ë
__THROW
;

56 
	$__v¢¥ötf_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
, 
__Êag
,

57 
size_t
 
__¶í
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

58 
_G_va_li°
 
__≠
Ë
__THROW
;

60 #ifde‡
__va_¨g_∑ck


61 
__exã∫_Æways_ölöe
 

62 
	`__NTH
 (
	$¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

63 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

65  
	`__buûtö___¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

66 
	`__bos
 (
__s
), 
__fmt
, 
	`__va_¨g_∑ck
 ());

67 
	}
}

68 #ñi‡!
deföed
 
__˝lu•lus


69 
	#¢¥ötf
(
°r
, 
Àn
, ...) \

70 
	`__buûtö___¢¥ötf_chk
 (
°r
, 
Àn
, 
__USE_FORTIFY_LEVEL
 - 1, 
	`__bos
 (str), \

71 
__VA_ARGS__
)

	)

74 
__exã∫_Æways_ölöe
 

75 
__NTH
 (
	$v¢¥ötf
 (*
__ª°ri˘
 
__s
, 
size_t
 
__n
,

76 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

78  
	`__buûtö___v¢¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

79 
	`__bos
 (
__s
), 
__fmt
, 
__≠
);

80 
	}
}

84 #i‡
__USE_FORTIFY_LEVEL
 > 1

86 
__Ârötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

87 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

88 
__¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, ...);

89 
__vÂrötf_chk
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

90 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
, 
_G_va_li°
 
__≠
);

91 
__v¥ötf_chk
 (
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

92 
_G_va_li°
 
__≠
);

94 #ifde‡
__va_¨g_∑ck


95 
__exã∫_Æways_ölöe
 

96 
	$Ârötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...)

98  
	`__Ârötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

99 
	`__va_¨g_∑ck
 ());

100 
	}
}

102 
__exã∫_Æways_ölöe
 

103 
	$¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

105  
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

106 
	}
}

107 #ñi‡!
deföed
 
__˝lu•lus


108 
	#¥ötf
(...) \

109 
	`__¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

110 
	#Ârötf
(
°ªam
, ...) \

111 
	`__Ârötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

114 
__exã∫_Æways_ölöe
 

115 
	$v¥ötf
 (
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

117 #ifde‡
__USE_EXTERN_INLINES


118  
	`__vÂrötf_chk
 (
°dout
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

120  
	`__v¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

122 
	}
}

124 
__exã∫_Æways_ölöe
 

125 
	$vÂrötf
 (
FILE
 *
__ª°ri˘
 
__°ªam
,

126 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

128  
	`__vÂrötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

129 
	}
}

131 #ifde‡
__USE_GNU


133 
	$__a•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

134 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

135 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 4))Ë
__wur
;

136 
	$__va•rötf_chk
 (**
__ª°ri˘
 
__±r
, 
__Êag
,

137 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

138 
__THROW
 
	`__©åibuã__
 ((
	$__f‹m©__
 (
__¥ötf__
, 3, 0))Ë
__wur
;

139 
	$__d¥ötf_chk
 (
__fd
, 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
,

140 ...Ë
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

141 
	$__vd¥ötf_chk
 (
__fd
, 
__Êag
,

142 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__¨g
)

143 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

144 
	$__ob°ack_¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

145 
__Êag
, 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

147 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 4)));

148 
	$__ob°ack_v¥ötf_chk
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

149 
__Êag
,

150 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

151 
_G_va_li°
 
__¨gs
)

152 
__THROW
 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__¥ötf__
, 3, 0)));

154 #ifde‡
__va_¨g_∑ck


155 
__exã∫_Æways_ölöe
 

156 
	`__NTH
 (
	$a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
, ...))

158  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

159 
	`__va_¨g_∑ck
 ());

160 
	}
}

162 
__exã∫_Æways_ölöe
 

163 
__NTH
 (
	$__a•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

166  
	`__a•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

167 
	`__va_¨g_∑ck
 ());

168 
	}
}

170 
__exã∫_Æways_ölöe
 

171 
	$d¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...)

173  
	`__d¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

174 
	`__va_¨g_∑ck
 ());

175 
	}
}

177 
__exã∫_Æways_ölöe
 

178 
__NTH
 (
	$ob°ack_¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

179 
__c⁄°
 *
__ª°ri˘
 
__fmt
, ...))

181  
	`__ob°ack_¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

182 
	`__va_¨g_∑ck
 ());

183 
	}
}

184 #ñi‡!
deföed
 
__˝lu•lus


185 
	#a•rötf
(
±r
, ...) \

186 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

187 
	#__a•rötf
(
±r
, ...) \

188 
	`__a•rötf_chk
 (
±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

189 
	#d¥ötf
(
fd
, ...) \

190 
	`__d¥ötf_chk
 (
fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

191 
	#ob°ack_¥ötf
(
ob°ack
, ...) \

192 
	`__ob°ack_¥ötf_chk
 (
ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

195 
__exã∫_Æways_ölöe
 

196 
__NTH
 (
	$va•rötf
 (**
__ª°ri˘
 
__±r
, 
__c⁄°
 *__ª°ri˘ 
__fmt
,

197 
_G_va_li°
 
__≠
))

199  
	`__va•rötf_chk
 (
__±r
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

200 
	}
}

202 
__exã∫_Æways_ölöe
 

203 
	$vd¥ötf
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
)

205  
	`__vd¥ötf_chk
 (
__fd
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

206 
	}
}

208 
__exã∫_Æways_ölöe
 

209 
__NTH
 (
	$ob°ack_v¥ötf
 (
ob°ack
 *
__ª°ri˘
 
__ob°ack
,

210 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
_G_va_li°
 
__≠
))

212  
	`__ob°ack_v¥ötf_chk
 (
__ob°ack
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

213 
__≠
);

214 
	}
}

220 *
	$__gës_chk
 (*
__°r
, 
size_t
Ë
__wur
;

221 *
	`__REDIRECT
 (
__gës_w¨n
, (*
__°r
), 
gës
)

222 
__wur
 
	`__w¨«âr
 ("please use fgets or getline instead, gets can't "

225 
__exã∫_Æways_ölöe
 
__wur
 *

226 
	$gës
 (*
__°r
)

228 i‡(
	`__bos
 (
__°r
Ë!(
size_t
) -1)

229  
	`__gës_chk
 (
__°r
, 
	`__bos
 (__str));

230  
	`__gës_w¨n
 (
__°r
);

231 
	}
}

233 *
	$__fgës_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

234 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

235 *
	`__REDIRECT
 (
__fgës_Æüs
,

236 (*
__ª°ri˘
 
__s
, 
__n
,

237 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës
Ë
__wur
;

238 *
	`__REDIRECT
 (
__fgës_chk_w¨n
,

239 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

240 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_chk
)

241 
__wur
 
	`__w¨«âr
 ("fgets called with bigger sizeÅhanÜength "

244 
__exã∫_Æways_ölöe
 
__wur
 *

245 
	$fgës
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

247 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

249 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

250  
	`__fgës_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

252 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

253  
	`__fgës_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

255  
	`__fgës_Æüs
 (
__s
, 
__n
, 
__°ªam
);

256 
	}
}

258 
size_t
 
	$__‰ód_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

259 
size_t
 
__size
, size_à
__n
,

260 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

261 
size_t
 
	`__REDIRECT
 (
__‰ód_Æüs
,

262 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

263 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

264 
‰ód
Ë
__wur
;

265 
size_t
 
	`__REDIRECT
 (
__‰ód_chk_w¨n
,

266 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

267 
size_t
 
__size
, size_à
__n
,

268 
FILE
 *
__ª°ri˘
 
__°ªam
),

269 
__‰ód_chk
)

270 
__wur
 
	`__w¨«âr
 ("fread called with bigger size *ÇmembÅhanÜength "

273 
__exã∫_Æways_ölöe
 
__wur
 
size_t


274 
	$‰ód
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

275 
FILE
 *
__ª°ri˘
 
__°ªam
)

277 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

279 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

280 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

281 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

282  
	`__‰ód_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

284 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

285  
	`__‰ód_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
, 
__°ªam
);

287  
	`__‰ód_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

288 
	}
}

290 #ifde‡
__USE_GNU


291 *
	$__fgës_u∆ocked_chk
 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
,

292 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

293 *
	`__REDIRECT
 (
__fgës_u∆ocked_Æüs
,

294 (*
__ª°ri˘
 
__s
, 
__n
,

295 
FILE
 *
__ª°ri˘
 
__°ªam
), 
fgës_u∆ocked
Ë
__wur
;

296 *
	`__REDIRECT
 (
__fgës_u∆ocked_chk_w¨n
,

297 (*
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

298 
FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgës_u∆ocked_chk
)

299 
__wur
 
	`__w¨«âr
 ("fgets_unlocked called with bigger sizeÅhanÜength "

302 
__exã∫_Æways_ölöe
 
__wur
 *

303 
	$fgës_u∆ocked
 (*
__ª°ri˘
 
__s
, 
__n
, 
FILE
 *__ª°ri˘ 
__°ªam
)

305 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

307 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

308  
	`__fgës_u∆ocked_chk
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

310 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
))

311  
	`__fgës_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__s), 
__n
, 
__°ªam
);

313  
	`__fgës_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

314 
	}
}

317 #ifde‡
__USE_MISC


318 #unde‡
‰ód_u∆ocked


319 
size_t
 
	$__‰ód_u∆ocked_chk
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

320 
size_t
 
__size
, size_à
__n
,

321 
FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

322 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_Æüs
,

323 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
,

324 
size_t
 
__n
, 
FILE
 *
__ª°ri˘
 
__°ªam
),

325 
‰ód_u∆ocked
Ë
__wur
;

326 
size_t
 
	`__REDIRECT
 (
__‰ód_u∆ocked_chk_w¨n
,

327 (*
__ª°ri˘
 
__±r
, 
size_t
 
__±æí
,

328 
size_t
 
__size
, size_à
__n
,

329 
FILE
 *
__ª°ri˘
 
__°ªam
),

330 
__‰ód_u∆ocked_chk
)

331 
__wur
 
	`__w¨«âr
 ("fread_unlocked called with bigger size *ÇmembÅhan "

334 
__exã∫_Æways_ölöe
 
__wur
 
size_t


335 
	$‰ód_u∆ocked
 (*
__ª°ri˘
 
__±r
, 
size_t
 
__size
, size_à
__n
,

336 
FILE
 *
__ª°ri˘
 
__°ªam
)

338 i‡(
	`__bos0
 (
__±r
Ë!(
size_t
) -1)

340 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
)

341 || !
	`__buûtö_c⁄°™t_p
 (
__n
)

342 || (
__size
 | 
__n
Ë>(((
size_t
) 1) << (8 *  (size_t) / 2)))

343  
	`__‰ód_u∆ocked_chk
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

344 
__°ªam
);

346 i‡(
__size
 * 
__n
 > 
	`__bos0
 (
__±r
))

347  
	`__‰ód_u∆ocked_chk_w¨n
 (
__±r
, 
	`__bos0
 (__±r), 
__size
, 
__n
,

348 
__°ªam
);

351 #ifde‡
__USE_EXTERN_INLINES


352 i‡(
	`__buûtö_c⁄°™t_p
 (
__size
)

353 && 
	`__buûtö_c⁄°™t_p
 (
__n
)

354 && (
__size
 | 
__n
Ë< (((
size_t
) 1) << (8 *  (size_t) / 2))

355 && 
__size
 * 
__n
 <= 8)

357 
size_t
 
__˙t
 = 
__size
 * 
__n
;

358 *
__˝å
 = (*Ë
__±r
;

359 i‡(
__˙t
 == 0)

362 ; 
__˙t
 > 0; --__cnt)

364 
__c
 = 
	`_IO_gëc_u∆ocked
 (
__°ªam
);

365 i‡(
__c
 =
EOF
)

367 *
__˝å
++ = 
__c
;

369  (
__˝å
 - (*Ë
__±r
Ë/ 
__size
;

372  
	`__‰ód_u∆ocked_Æüs
 (
__±r
, 
__size
, 
__n
, 
__°ªam
);

373 
	}
}

	@/usr/include/bits/stdio_lim.h

19 #i‡!
deföed
 
_STDIO_H
 && !deföed 
__√ed_FOPEN_MAX
 && !deföed 
__√ed_IOV_MAX


23 #ifde‡
_STDIO_H


24 
	#L_tm≤am
 20

	)

25 
	#TMP_MAX
 238328

	)

26 
	#FILENAME_MAX
 4096

	)

28 #ifde‡
__USE_POSIX


29 
	#L_˘îmid
 9

	)

30 #i‡!
deföed
 
__USE_XOPEN2K
 || deföed 
__USE_GNU


31 
	#L_cu£rid
 9

	)

36 #i‡
deföed
 
__√ed_FOPEN_MAX
 || deföed 
_STDIO_H


37 #unde‡
FOPEN_MAX


38 
	#FOPEN_MAX
 16

	)

41 #i‡
deföed
 
__√ed_IOV_MAX
 && !deföed 
IOV_MAX


42 
	#IOV_MAX
 1024

	)

	@/usr/include/bits/stdlib-ldbl.h

20 #i‚de‡
_STDLIB_H


24 #ifdef 
__USE_ISOC99


25 
__BEGIN_NAMESPACE_C99


26 
	$__LDBL_REDIR1_DECL
 (
°πﬁd
, 
°πod
)

27 
__END_NAMESPACE_C99


30 #ifde‡
__USE_GNU


31 
	$__LDBL_REDIR1_DECL
 (
°πﬁd_l
, 
°πod_l
)

34 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN_EXTENDED


35 #ifde‡
__USE_MISC


36 
	$__LDBL_REDIR1_DECL
 (
qecvt
, 
ecvt
)

37 
	$__LDBL_REDIR1_DECL
 (
qfcvt
, 
fcvt
)

38 
	$__LDBL_REDIR1_DECL
 (
qgcvt
, 
gcvt
)

39 
	$__LDBL_REDIR1_DECL
 (
qecvt_r
, 
ecvt_r
)

40 
	$__LDBL_REDIR1_DECL
 (
qfcvt_r
, 
fcvt_r
)

	@/usr/include/bits/stdlib.h

20 #i‚de‡
_STDLIB_H


24 *
	$__ªÆ∑th_chk
 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

25 *
__ª°ri˘
 
__ªsﬁved
,

26 
size_t
 
__ªsﬁvedÀn
Ë
__THROW
 
__wur
;

27 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_Æüs
,

28 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

29 *
__ª°ri˘
 
__ªsﬁved
), 
ªÆ∑th
Ë
__wur
;

30 *
	`__REDIRECT_NTH
 (
__ªÆ∑th_chk_w¨n
,

31 (
__c⁄°
 *
__ª°ri˘
 
__«me
,

32 *
__ª°ri˘
 
__ªsﬁved
,

33 
size_t
 
__ªsﬁvedÀn
), 
__ªÆ∑th_chk
Ë
__wur


34 
	`__w¨«âr
 ("secondárgument ofÑealpath must beÉither NULL orát "

37 
__exã∫_Æways_ölöe
 
__wur
 *

38 
	`__NTH
 (
	$ªÆ∑th
 (
__c⁄°
 *
__ª°ri˘
 
__«me
, *__ª°ri˘ 
__ªsﬁved
))

40 i‡(
	`__bos
 (
__ªsﬁved
Ë!(
size_t
) -1)

42 #i‡
deföed
 
_LIBC_LIMITS_H_
 && deföed 
PATH_MAX


43 i‡(
	`__bos
 (
__ªsﬁved
Ë< 
PATH_MAX
)

44  
	`__ªÆ∑th_chk_w¨n
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

46  
	`__ªÆ∑th_chk
 (
__«me
, 
__ªsﬁved
, 
	`__bos
 (__resolved));

49  
	`__ªÆ∑th_Æüs
 (
__«me
, 
__ªsﬁved
);

50 
	}
}

53 
	$__±¢ame_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

54 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

55 
	`__REDIRECT_NTH
 (
__±¢ame_r_Æüs
, (
__fd
, *
__buf
,

56 
size_t
 
__buÊí
), 
±¢ame_r
)

57 
	`__n⁄nuŒ
 ((2));

58 
	`__REDIRECT_NTH
 (
__±¢ame_r_chk_w¨n
,

59 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

60 
size_t
 
__ƒól
), 
__±¢ame_r_chk
)

61 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ptsname_r called with buflen biggerÅhan "

64 
__exã∫_Æways_ölöe
 

65 
	`__NTH
 (
	$±¢ame_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

67 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

69 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

70  
	`__±¢ame_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

71 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

72  
	`__±¢ame_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

74  
	`__±¢ame_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

75 
	}
}

78 
	$__w˘omb_chk
 (*
__s
, 
wch¨_t
 
__wch¨
, 
size_t
 
__buÊí
)

79 
__THROW
 
__wur
;

80 
	`__REDIRECT_NTH
 (
__w˘omb_Æüs
, (*
__s
, 
wch¨_t
 
__wch¨
),

81 
w˘omb
Ë
__wur
;

83 
__exã∫_Æways_ölöe
 
__wur
 

84 
	`__NTH
 (
	$w˘omb
 (*
__s
, 
wch¨_t
 
__wch¨
))

89 
	#__STDLIB_MB_LEN_MAX
 16

	)

90 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__STDLIB_MB_LEN_MAX


93 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__STDLIB_MB_LEN_MAX
 > __bos (__s))

94  
	`__w˘omb_chk
 (
__s
, 
__wch¨
, 
	`__bos
 (__s));

95  
	`__w˘omb_Æüs
 (
__s
, 
__wch¨
);

96 
	}
}

99 
size_t
 
	$__mb°owcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

100 
__c⁄°
 *
__ª°ri˘
 
__§c
,

101 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

102 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_Æüs
,

103 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

104 
__c⁄°
 *
__ª°ri˘
 
__§c
,

105 
size_t
 
__Àn
), 
mb°owcs
);

106 
size_t
 
	`__REDIRECT_NTH
 (
__mb°owcs_chk_w¨n
,

107 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

108 
__c⁄°
 *
__ª°ri˘
 
__§c
,

109 
size_t
 
__Àn
, size_à
__d°Àn
), 
__mb°owcs_chk
)

110 
	`__w¨«âr
 ("mbstowcs called with dst buffer smallerÅhanÜen "

113 
__exã∫_Æways_ölöe
 
size_t


114 
	`__NTH
 (
	$mb°owcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

115 
size_t
 
__Àn
))

117 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

119 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

120  
	`__mb°owcs_chk
 (
__d°
, 
__§c
, 
__Àn
,

121 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

123 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

124  
	`__mb°owcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
,

125 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

127  
	`__mb°owcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

128 
	}
}

131 
size_t
 
	$__wc°ombs_chk
 (*
__ª°ri˘
 
__d°
,

132 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

133 
size_t
 
__Àn
, size_à
__d°Àn
Ë
__THROW
;

134 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_Æüs
,

135 (*
__ª°ri˘
 
__d°
,

136 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

137 
size_t
 
__Àn
), 
wc°ombs
);

138 
size_t
 
	`__REDIRECT_NTH
 (
__wc°ombs_chk_w¨n
,

139 (*
__ª°ri˘
 
__d°
,

140 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

141 
size_t
 
__Àn
, size_à
__d°Àn
), 
__wc°ombs_chk
)

142 
	`__w¨«âr
 ("wcstombs called with dst buffer smallerÅhanÜen");

144 
__exã∫_Æways_ölöe
 
size_t


145 
	`__NTH
 (
	$wc°ombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__§c
,

146 
size_t
 
__Àn
))

148 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

150 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

151  
	`__wc°ombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

152 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

153  
	`__wc°ombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dst));

155  
	`__wc°ombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
);

156 
	}
}

	@/usr/include/bits/string.h

20 #i‚de‡
_STRING_H


26 
	#_STRING_ARCH_u«lig√d
 1

	)

	@/usr/include/bits/string2.h

21 #i‚de‡
_STRING_H


25 #i‡!
deföed
 
__NO_STRING_INLINES
 && !deföed 
__BOUNDED_POINTERS__


42 #i‚de‡
__STRING_INLINE


43 #ifde‡
__˝lu•lus


44 
	#__STRING_INLINE
 
ölöe


	)

46 
	#__STRING_INLINE
 
__exã∫_ölöe


	)

50 #i‡
_STRING_ARCH_u«lig√d


52 
	~<ídün.h
>

53 
	~<bôs/ty≥s.h
>

55 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


56 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

57 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1] << 8 \

58 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

59 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

60 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3] << 8 \

61 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

62 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

63 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
])

	)

65 
	#__STRING2_SMALL_GET16
(
§c
, 
idx
) \

66 (((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

67 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1])

	)

68 
	#__STRING2_SMALL_GET32
(
§c
, 
idx
) \

69 (((((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
] << 8 \

70 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 1]) << 8 \

71 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 2]) << 8 \

72 | ((
__c⁄°
 *Ë(__c⁄° *Ë(
§c
))[
idx
 + 3])

	)

77 
	#__STRING2_COPY_TYPE
(
N
) \

78 °ru˘ { 
__¨r
[
N
]; } \

79 
	t__©åibuã__
 ((
	t__∑cked__
)Ë
	t__STRING2_COPY_ARR
##
	tN


	)

80 
	t__STRING2_COPY_TYPE
 (2);

81 
__STRING2_COPY_TYPE
 (3);

82 
__STRING2_COPY_TYPE
 (4);

83 
__STRING2_COPY_TYPE
 (5);

84 
__STRING2_COPY_TYPE
 (6);

85 
__STRING2_COPY_TYPE
 (7);

86 
__STRING2_COPY_TYPE
 (8);

87 #unde‡
__STRING2_COPY_TYPE


93 
	#__°rög2_1b±r_p
(
__x
) \

94 ((
size_t
)(c⁄° *)((
__x
Ë+ 1Ë- (size_t)(c⁄° *)(__xË=1)

	)

97 #i‡!
deföed
 
_HAVE_STRING_ARCH_mem£t


98 #i‡!
__GNUC_PREREQ
 (3, 0)

99 #i‡
_STRING_ARCH_u«lig√d


100 
	#mem£t
(
s
, 
c
, 
n
) \

101 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) && (n) <= 16 \

102 ? ((
n
) == 1 \

103 ? 
	`__mem£t_1
 (
s
, 
c
) \

104 : 
	`__mem£t_gc
 (
s
, 
c
, 
n
)) \

105 : (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

106 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

107 : 
	`mem£t
 (
s
, 
c
, 
n
))))

	)

109 
	#__mem£t_1
(
s
, 
c
Ë({ *
__s
 = (s); \

110 *((
__uöt8_t
 *Ë
__s
Ë(__uöt8_tË
c
; __s; })

	)

112 
	#__mem£t_gc
(
s
, 
c
, 
n
) \

113 ({ *
__s
 = (
s
); \

115 
__ui
; \

116 
__usi
; \

117 
__uc
; \

118 } *
__u
 = 
__s
; \

119 
__uöt8_t
 
__c
 = (__uöt8_tË(
c
); \

122 (Ë(
n
)) \

125 
__u
->
__ui
 = 
__c
 * 0x01010101; \

126 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

128 
__u
->
__ui
 = 
__c
 * 0x01010101; \

129 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

131 
__u
->
__ui
 = 
__c
 * 0x01010101; \

132 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

134 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

135 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2); \

136 
__u
->
__uc
 = (Ë
__c
; \

140 
__u
->
__ui
 = 
__c
 * 0x01010101; \

141 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

143 
__u
->
__ui
 = 
__c
 * 0x01010101; \

144 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

146 
__u
->
__ui
 = 
__c
 * 0x01010101; \

147 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

149 
__u
->
__usi
 = (Ë
__c
 * 0x0101; \

153 
__u
->
__ui
 = 
__c
 * 0x01010101; \

154 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

156 
__u
->
__ui
 = 
__c
 * 0x01010101; \

157 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

159 
__u
->
__ui
 = 
__c
 * 0x01010101; \

160 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

162 
__u
->
__uc
 = (Ë
__c
; \

166 
__u
->
__ui
 = 
__c
 * 0x01010101; \

167 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

169 
__u
->
__ui
 = 
__c
 * 0x01010101; \

170 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

172 
__u
->
__ui
 = 
__c
 * 0x01010101; \

173 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4); \

175 
__u
->
__ui
 = 
__c
 * 0x01010101; \

180 
__s
; })

	)

182 
	#mem£t
(
s
, 
c
, 
n
) \

183 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

184 ? ({ *
__s
 = (
s
); 
	`__bzîo
 (__s, 
n
); __s; }) \

185 : 
	`mem£t
 (
s
, 
c
, 
n
)))

	)

194 #i‡
__GNUC_PREREQ
 (2, 91)

195 
	#__bzîo
(
s
, 
n
Ë
	`__buûtö_mem£t
 (s, '\0',Ç)

	)

203 #ifde‡
__USE_GNU


204 #i‡!
deföed
 
_HAVE_STRING_ARCH_memp˝y
 || deföed 
_FORCE_INLINES


205 #i‚de‡
_HAVE_STRING_ARCH_memp˝y


206 #i‡
__GNUC_PREREQ
 (3, 4)

207 
	#__memp˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_memp˝y
 (de°, src,Ç)

	)

208 #ñi‡
__GNUC_PREREQ
 (3, 0)

209 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

210 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

211 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

212 ? 
	`__buûtö_mem˝y
 (
de°
, 
§c
, 
n
) + (n) \

213 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

215 
	#__memp˝y
(
de°
, 
§c
, 
n
) \

216 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

217 && 
	`__°rög2_1b±r_p
 (
§c
Ë&& 
n
 <= 8 \

218 ? 
	`__memp˝y_smÆl
 (
de°
, 
	`__memp˝y_¨gs
 (
§c
), 
n
) \

219 : 
	`__memp˝y
 (
de°
, 
§c
, 
n
)))

	)

223 
	#memp˝y
(
de°
, 
§c
, 
n
Ë
	`__memp˝y
 (de°, src,Ç)

	)

226 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


227 #i‡
_STRING_ARCH_u«lig√d


228 #i‚de‡
_FORCE_INLINES


229 
	#__memp˝y_¨gs
(
§c
) \

230 ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[2], \

231 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[6], \

232 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

233 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

234 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

235 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

237 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , , , ,

238 
__uöt16_t
, __uöt16_t, 
__uöt32_t
,

239 
__uöt32_t
, 
size_t
);

240 
__STRING_INLINE
 *

241 
	$__memp˝y_smÆl
 (*
__de°1
,

242 
__§c0_1
, 
__§c2_1
, 
__§c4_1
, 
__§c6_1
,

243 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

244 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

245 
size_t
 
__§˛í
)

248 
__uöt32_t
 
__ui
;

249 
__uöt16_t
 
__usi
;

250 
__uc
;

251 
__c
;

252 } *
__u
 = 
__de°1
;

253 (Ë
__§˛í
)

256 
__u
->
__c
 = 
__§c0_1
;

257 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

260 
__u
->
__usi
 = 
__§c0_2
;

261 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

264 
__u
->
__usi
 = 
__§c0_2
;

265 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

266 
__u
->
__c
 = 
__§c2_1
;

267 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

270 
__u
->
__ui
 = 
__§c0_4
;

271 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

274 
__u
->
__ui
 = 
__§c0_4
;

275 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

276 
__u
->
__c
 = 
__§c4_1
;

277 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

280 
__u
->
__ui
 = 
__§c0_4
;

281 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

282 
__u
->
__usi
 = 
__§c4_2
;

283 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

286 
__u
->
__ui
 = 
__§c0_4
;

287 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

288 
__u
->
__usi
 = 
__§c4_2
;

289 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

290 
__u
->
__c
 = 
__§c6_1
;

291 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

294 
__u
->
__ui
 = 
__§c0_4
;

295 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

296 
__u
->
__ui
 = 
__§c4_4
;

297 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

300  (*Ë
__u
;

301 
	}
}

303 #i‚de‡
_FORCE_INLINES


304 
	#__memp˝y_¨gs
(
§c
) \

305 ((
__c⁄°
 *Ë(
§c
))[0], \

306 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

307 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1] } }), \

308 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

309 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

310 ((
__c⁄°
 *Ë(
§c
))[2] } }), \

311 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

312 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

313 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3] } }), \

314 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

315 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

316 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

317 ((
__c⁄°
 *Ë(
§c
))[4] } }), \

318 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

319 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

320 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

321 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5] } }), \

322 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

323 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

324 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

325 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

326 ((
__c⁄°
 *Ë(
§c
))[6] } }), \

327 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

328 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

329 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

330 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

331 ((
__c⁄°
 *Ë(
§c
))[6], ((__c⁄° *Ë(§c))[7] } })

	)

333 
__STRING_INLINE
 *
__memp˝y_smÆl
 (*, , 
__STRING2_COPY_ARR2
,

334 
__STRING2_COPY_ARR3
,

335 
__STRING2_COPY_ARR4
,

336 
__STRING2_COPY_ARR5
,

337 
__STRING2_COPY_ARR6
,

338 
__STRING2_COPY_ARR7
,

339 
__STRING2_COPY_ARR8
, 
size_t
);

340 
__STRING_INLINE
 *

341 
	$__memp˝y_smÆl
 (*
__de°
, 
__§c1
,

342 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

343 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

344 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

345 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

348 
__c
;

349 
__STRING2_COPY_ARR2
 
__sˇ2
;

350 
__STRING2_COPY_ARR3
 
__sˇ3
;

351 
__STRING2_COPY_ARR4
 
__sˇ4
;

352 
__STRING2_COPY_ARR5
 
__sˇ5
;

353 
__STRING2_COPY_ARR6
 
__sˇ6
;

354 
__STRING2_COPY_ARR7
 
__sˇ7
;

355 
__STRING2_COPY_ARR8
 
__sˇ8
;

356 } *
__u
 = 
__de°
;

357 (Ë
__§˛í
)

360 
__u
->
__c
 = 
__§c1
;

363 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

366 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

369 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

372 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

375 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

378 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

381 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

384  
	`__exãnsi⁄__
 ((*Ë
__u
 + 
__§˛í
);

385 
	}
}

393 #i‚de‡
_HAVE_STRING_ARCH_°rchr


394 *
__øwmemchr
 (c⁄° *
__s
, 
__c
);

395 #i‡
__GNUC_PREREQ
 (3, 2)

396 
	#°rchr
(
s
, 
c
) \

397 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
Ë&& !__buûtö_c⁄°™t_∞(
s
) \

398 && (
c
) == '\0' \

399 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

400 : 
	`__buûtö_°rchr
 (
s
, 
c
)))

	)

402 
	#°rchr
(
s
, 
c
) \

403 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
c
) && (c) == '\0' \

404 ? (*Ë
	`__øwmemchr
 (
s
, 
c
) \

405 : 
	`°rchr
 (
s
, 
c
)))

	)

411 #i‡(!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)) \

412 || 
deföed
 
	g_FORCE_INLINES


413 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r˝y
 && !
__GNUC_PREREQ
 (3, 0)

414 
	#°r˝y
(
de°
, 
§c
) \

415 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

416 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

417 ? 
	`__°r˝y_smÆl
 (
de°
, 
	`__°r˝y_¨gs
 (
§c
), \

418 
	`°æí
 (
§c
) + 1) \

419 : (*Ë
	`mem˝y
 (
de°
, 
§c
, 
	`°æí
 (src) + 1)) \

420 : 
	`°r˝y
 (
de°
, 
§c
)))

	)

423 #i‡
_STRING_ARCH_u«lig√d


424 #i‚de‡
_FORCE_INLINES


425 
	#__°r˝y_¨gs
(
§c
) \

426 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

427 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

428 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

429 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

431 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

432 
__uöt32_t
, __uöt32_t, 
size_t
);

433 
__STRING_INLINE
 *

434 
	$__°r˝y_smÆl
 (*
__de°
,

435 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

436 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

437 
size_t
 
__§˛í
)

440 
__uöt32_t
 
__ui
;

441 
__uöt16_t
 
__usi
;

442 
__uc
;

443 } *
__u
 = (*Ë
__de°
;

444 (Ë
__§˛í
)

447 
__u
->
__uc
 = '\0';

450 
__u
->
__usi
 = 
__§c0_2
;

453 
__u
->
__usi
 = 
__§c0_2
;

454 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

455 
__u
->
__uc
 = '\0';

458 
__u
->
__ui
 = 
__§c0_4
;

461 
__u
->
__ui
 = 
__§c0_4
;

462 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

463 
__u
->
__uc
 = '\0';

466 
__u
->
__ui
 = 
__§c0_4
;

467 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

468 
__u
->
__usi
 = 
__§c4_2
;

471 
__u
->
__ui
 = 
__§c0_4
;

472 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

473 
__u
->
__usi
 = 
__§c4_2
;

474 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

475 
__u
->
__uc
 = '\0';

478 
__u
->
__ui
 = 
__§c0_4
;

479 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

480 
__u
->
__ui
 = 
__§c4_4
;

483  
__de°
;

484 
	}
}

486 #i‚de‡
_FORCE_INLINES


487 
	#__°r˝y_¨gs
(
§c
) \

488 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

489 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

490 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

491 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

493 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

494 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

495 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

496 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

497 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

498 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

500 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

501 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

502 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

503 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

504 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

505 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

506 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

507 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

509 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

510 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

511 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

512 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

513 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

515 
__STRING_INLINE
 *
__°r˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

516 
__STRING2_COPY_ARR3
,

517 
__STRING2_COPY_ARR4
,

518 
__STRING2_COPY_ARR5
,

519 
__STRING2_COPY_ARR6
,

520 
__STRING2_COPY_ARR7
,

521 
__STRING2_COPY_ARR8
, 
size_t
);

522 
__STRING_INLINE
 *

523 
	$__°r˝y_smÆl
 (*
__de°
,

524 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

525 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

526 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

527 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

530 
__c
;

531 
__STRING2_COPY_ARR2
 
__sˇ2
;

532 
__STRING2_COPY_ARR3
 
__sˇ3
;

533 
__STRING2_COPY_ARR4
 
__sˇ4
;

534 
__STRING2_COPY_ARR5
 
__sˇ5
;

535 
__STRING2_COPY_ARR6
 
__sˇ6
;

536 
__STRING2_COPY_ARR7
 
__sˇ7
;

537 
__STRING2_COPY_ARR8
 
__sˇ8
;

538 } *
__u
 = (*Ë
__de°
;

539 (Ë
__§˛í
)

542 
__u
->
__c
 = '\0';

545 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

548 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

551 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

554 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

557 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

560 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

563 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

566  
__de°
;

567 
	}
}

573 #ifde‡
__USE_GNU


574 #i‡!
deföed
 
_HAVE_STRING_ARCH_°p˝y
 || deföed 
_FORCE_INLINES


575 #i‚de‡
_HAVE_STRING_ARCH_°p˝y


576 #i‡
__GNUC_PREREQ
 (3, 4)

577 
	#__°p˝y
(
de°
, 
§c
Ë
	`__buûtö_°p˝y
 (de°, src)

	)

578 #ñi‡
__GNUC_PREREQ
 (3, 0)

579 
	#__°p˝y
(
de°
, 
§c
) \

580 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

581 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

582 ? 
	`__buûtö_°r˝y
 (
de°
, 
§c
Ë+ 
	`°æí
 (src) \

583 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

585 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

587 
	#__°p˝y
(
de°
, 
§c
) \

588 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
) \

589 ? (
	`__°rög2_1b±r_p
 (
§c
Ë&& 
	`°æí
 (src) + 1 <= 8 \

590 ? 
	`__°p˝y_smÆl
 (
de°
, 
	`__°p˝y_¨gs
 (
§c
), \

591 
	`°æí
 (
§c
) + 1) \

592 : ((*Ë(
__memp˝y
Ë(
de°
, 
§c
, 
	`°æí
 (src) + 1) \

594 : 
	`__°p˝y
 (
de°
, 
§c
)))

	)

598 
	#°p˝y
(
de°
, 
§c
Ë
	`__°p˝y
 (de°, src)

	)

601 #i‡!
__GNUC_PREREQ
 (3, 0Ë|| 
deföed
 
_FORCE_INLINES


602 #i‡
_STRING_ARCH_u«lig√d


603 #i‚de‡
_FORCE_INLINES


604 
	#__°p˝y_¨gs
(
§c
) \

605 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 0), \

606 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET16
 (
§c
, 4), \

607 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 0), \

608 
__exãnsi⁄__
 
	`__STRING2_SMALL_GET32
 (
§c
, 4)

	)

610 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__uöt16_t
, __uint16_t,

611 
__uöt32_t
, __uöt32_t, 
size_t
);

612 
__STRING_INLINE
 *

613 
	$__°p˝y_smÆl
 (*
__de°
,

614 
__uöt16_t
 
__§c0_2
, __uöt16_à
__§c4_2
,

615 
__uöt32_t
 
__§c0_4
, __uöt32_à
__§c4_4
,

616 
size_t
 
__§˛í
)

619 
__ui
;

620 
__usi
;

621 
__uc
;

622 
__c
;

623 } *
__u
 = (*Ë
__de°
;

624 (Ë
__§˛í
)

627 
__u
->
__uc
 = '\0';

630 
__u
->
__usi
 = 
__§c0_2
;

631 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

634 
__u
->
__usi
 = 
__§c0_2
;

635 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

636 
__u
->
__uc
 = '\0';

639 
__u
->
__ui
 = 
__§c0_4
;

640 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

643 
__u
->
__ui
 = 
__§c0_4
;

644 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

645 
__u
->
__uc
 = '\0';

648 
__u
->
__ui
 = 
__§c0_4
;

649 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

650 
__u
->
__usi
 = 
__§c4_2
;

651 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 1);

654 
__u
->
__ui
 = 
__§c0_4
;

655 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

656 
__u
->
__usi
 = 
__§c4_2
;

657 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 2);

658 
__u
->
__uc
 = '\0';

661 
__u
->
__ui
 = 
__§c0_4
;

662 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 4);

663 
__u
->
__ui
 = 
__§c4_4
;

664 
__u
 = 
	`__exãnsi⁄__
 ((*) __u + 3);

667  &
__u
->
__c
;

668 
	}
}

670 #i‚de‡
_FORCE_INLINES


671 
	#__°p˝y_¨gs
(
§c
) \

672 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR2
) \

673 { { ((
__c⁄°
 *Ë(
§c
))[0], '\0' } }), \

674 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR3
) \

675 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

677 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR4
) \

678 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

679 ((
__c⁄°
 *Ë(
§c
))[2], '\0' } }), \

680 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR5
) \

681 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

682 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

684 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR6
) \

685 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

686 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

687 ((
__c⁄°
 *Ë(
§c
))[4], '\0' } }), \

688 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR7
) \

689 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

690 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

691 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

693 
	`__exãnsi⁄__
 ((
__STRING2_COPY_ARR8
) \

694 { { ((
__c⁄°
 *Ë(
§c
))[0], ((__const *) (src))[1], \

695 ((
__c⁄°
 *Ë(
§c
))[2], ((__const *) (src))[3], \

696 ((
__c⁄°
 *Ë(
§c
))[4], ((__const *) (src))[5], \

697 ((
__c⁄°
 *Ë(
§c
))[6], '\0' } })

	)

699 
__STRING_INLINE
 *
__°p˝y_smÆl
 (*, 
__STRING2_COPY_ARR2
,

700 
__STRING2_COPY_ARR3
,

701 
__STRING2_COPY_ARR4
,

702 
__STRING2_COPY_ARR5
,

703 
__STRING2_COPY_ARR6
,

704 
__STRING2_COPY_ARR7
,

705 
__STRING2_COPY_ARR8
, 
size_t
);

706 
__STRING_INLINE
 *

707 
	$__°p˝y_smÆl
 (*
__de°
,

708 
__STRING2_COPY_ARR2
 
__§c2
, 
__STRING2_COPY_ARR3
 
__§c3
,

709 
__STRING2_COPY_ARR4
 
__§c4
, 
__STRING2_COPY_ARR5
 
__§c5
,

710 
__STRING2_COPY_ARR6
 
__§c6
, 
__STRING2_COPY_ARR7
 
__§c7
,

711 
__STRING2_COPY_ARR8
 
__§c8
, 
size_t
 
__§˛í
)

714 
__c
;

715 
__STRING2_COPY_ARR2
 
__sˇ2
;

716 
__STRING2_COPY_ARR3
 
__sˇ3
;

717 
__STRING2_COPY_ARR4
 
__sˇ4
;

718 
__STRING2_COPY_ARR5
 
__sˇ5
;

719 
__STRING2_COPY_ARR6
 
__sˇ6
;

720 
__STRING2_COPY_ARR7
 
__sˇ7
;

721 
__STRING2_COPY_ARR8
 
__sˇ8
;

722 } *
__u
 = (*Ë
__de°
;

723 (Ë
__§˛í
)

726 
__u
->
__c
 = '\0';

729 
__exãnsi⁄__
 
__u
->
__sˇ2
 = 
__§c2
;

732 
__exãnsi⁄__
 
__u
->
__sˇ3
 = 
__§c3
;

735 
__exãnsi⁄__
 
__u
->
__sˇ4
 = 
__§c4
;

738 
__exãnsi⁄__
 
__u
->
__sˇ5
 = 
__§c5
;

741 
__exãnsi⁄__
 
__u
->
__sˇ6
 = 
__§c6
;

744 
__exãnsi⁄__
 
__u
->
__sˇ7
 = 
__§c7
;

747 
__exãnsi⁄__
 
__u
->
__sˇ8
 = 
__§c8
;

750  
__de°
 + 
__§˛í
 - 1;

751 
	}
}

759 #i‚de‡
_HAVE_STRING_ARCH_°∫˝y


760 #i‡
__GNUC_PREREQ
 (3, 2)

761 
	#°∫˝y
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫˝y
 (de°, src,Ç)

	)

763 
	#°∫˝y
(
de°
, 
§c
, 
n
) \

764 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

765 ? (
	`°æí
 (
§c
Ë+ 1 >((
size_t
Ë(
n
)) \

766 ? (*Ë
	`mem˝y
 (
de°
, 
§c
, 
n
) \

767 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)) \

768 : 
	`°∫˝y
 (
de°
, 
§c
, 
n
)))

	)

774 #i‚de‡
_HAVE_STRING_ARCH_°∫ˇt


775 #ifde‡
_USE_STRING_ARCH_°rchr


776 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

777 (
	`__exãnsi⁄__
 ({ *
__de°
 = (
de°
); \

778 
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

779 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

780 ? 
	`°rˇt
 (
__de°
, 
§c
) \

781 : (*((*Ë
	`__memp˝y
 (
	`°rchr
 (
__de°
, '\0'), \

782 
§c
, 
n
)Ë'\0', 
__de°
)) \

783 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
); }))

	)

784 #ñi‡
__GNUC_PREREQ
 (3, 2)

785 
	#°∫ˇt
(
de°
, 
§c
, 
n
Ë
	`__buûtö_°∫ˇt
 (de°, src,Ç)

	)

787 
	#°∫ˇt
(
de°
, 
§c
, 
n
) \

788 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
§c
Ë&& __buûtö_c⁄°™t_∞(
n
) \

789 ? (
	`°æí
 (
§c
Ë< ((
size_t
Ë(
n
)) \

790 ? 
	`°rˇt
 (
de°
, 
§c
) \

791 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)) \

792 : 
	`°∫ˇt
 (
de°
, 
§c
, 
n
)))

	)

798 #i‚de‡
_HAVE_STRING_ARCH_°rcmp


799 #i‡
__GNUC_PREREQ
 (3, 2)

800 
	#°rcmp
(
s1
, 
s2
) \

801 
__exãnsi⁄__
 \

802 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

803 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

804 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

805 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

806 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

807 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

808 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

809 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

810 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

811 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

812 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

813 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

814 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

815 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

816 ? 
	`__buûtö_°rcmp
 (
s1
, 
s2
) \

817 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

818 : 
	`__buûtö_°rcmp
 (
s1
, 
s2
)))); })

	)

820 
	#°rcmp
(
s1
, 
s2
) \

821 
__exãnsi⁄__
 \

822 ({ 
size_t
 
__s1_Àn
, 
__s2_Àn
; \

823 (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& __buûtö_c⁄°™t_∞(
s2
) \

824 && (
__s1_Àn
 = 
	`°æí
 (
s1
), 
__s2_Àn
 = såÀ¿(
s2
), \

825 (!
	`__°rög2_1b±r_p
 (
s1
Ë|| 
__s1_Àn
 >= 4) \

826 && (!
	`__°rög2_1b±r_p
 (
s2
Ë|| 
__s2_Àn
 >= 4)) \

827 ? 
	`memcmp
 ((
__c⁄°
 *Ë(
s1
), (__c⁄° *Ë(
s2
), \

828 (
__s1_Àn
 < 
__s2_Àn
 ? __s1_len : __s2_len) + 1) \

829 : (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

830 && (
__s1_Àn
 = 
	`°æí
 (
s1
), __s1_len < 4) \

831 ? (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

832 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s1_Àn
) \

833 : 
	`__°rcmp_cg
 (
s1
, 
s2
, 
__s1_Àn
)) \

834 : (
	`__buûtö_c⁄°™t_p
 (
s2
Ë&& 
	`__°rög2_1b±r_p
 (s2) \

835 && (
__s2_Àn
 = 
	`°æí
 (
s2
), __s2_len < 4) \

836 ? (
	`__buûtö_c⁄°™t_p
 (
s1
Ë&& 
	`__°rög2_1b±r_p
 (s1) \

837 ? 
	`__°rcmp_cc
 (
s1
, 
s2
, 
__s2_Àn
) \

838 : 
	`__°rcmp_gc
 (
s1
, 
s2
, 
__s2_Àn
)) \

839 : 
	`°rcmp
 (
s1
, 
s2
)))); })

	)

842 
	#__°rcmp_cc
(
s1
, 
s2
, 
l
) \

843 (
	`__exãnsi⁄__
 ({ 
__ªsu…
 = \

844 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

845 - ((
__c⁄°
 *Ë(__c⁄° *)(
s2
))[0]);\

846 i‡(
l
 > 0 && 
__ªsu…
 == 0) \

848 
__ªsu…
 = (((
__c⁄°
 *) \

849 (
__c⁄°
 *Ë(
s1
))[1] \

850 - ((
__c⁄°
 *) \

851 (
__c⁄°
 *Ë(
s2
))[1]); \

852 i‡(
l
 > 1 && 
__ªsu…
 == 0) \

854 
__ªsu…
 = \

855 (((
__c⁄°
 *) \

856 (
__c⁄°
 *Ë(
s1
))[2] \

857 - ((
__c⁄°
 *) \

858 (
__c⁄°
 *Ë(
s2
))[2]); \

859 i‡(
l
 > 2 && 
__ªsu…
 == 0) \

860 
__ªsu…
 = \

861 (((
__c⁄°
 *) \

862 (
__c⁄°
 *Ë(
s1
))[3] \

863 - ((
__c⁄°
 *) \

864 (
__c⁄°
 *Ë(
s2
))[3]); \

867 
__ªsu…
; }))

	)

869 
	#__°rcmp_cg
(
s1
, 
s2
, 
l1
) \

870 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s2
 = \

871 (
__c⁄°
 *Ë(__c⁄° *Ë(
s2
); \

872 
__ªsu…
 = \

873 (((
__c⁄°
 *Ë(__c⁄° *Ë(
s1
))[0] \

874 - 
__s2
[0]); \

875 i‡(
l1
 > 0 && 
__ªsu…
 == 0) \

877 
__ªsu…
 = (((
__c⁄°
 *) \

878 (
__c⁄°
 *Ë(
s1
))[1] - 
__s2
[1]); \

879 i‡(
l1
 > 1 && 
__ªsu…
 == 0) \

881 
__ªsu…
 = (((
__c⁄°
 *) \

882 (
__c⁄°
 *Ë(
s1
))[2] - 
__s2
[2]);\

883 i‡(
l1
 > 2 && 
__ªsu…
 == 0) \

884 
__ªsu…
 = (((
__c⁄°
 *) \

885 (
__c⁄°
 *Ë(
s1
))[3] \

886 - 
__s2
[3]); \

889 
__ªsu…
; }))

	)

891 
	#__°rcmp_gc
(
s1
, 
s2
, 
l2
) \

892 (
	`__exãnsi⁄__
 ({ 
__c⁄°
 *
__s1
 = \

893 (
__c⁄°
 *Ë(__c⁄° *Ë(
s1
); \

894 
__ªsu…
 = \

895 
__s1
[0] - ((
__c⁄°
 *) \

896 (
__c⁄°
 *Ë(
s2
))[0]; \

897 i‡(
l2
 > 0 && 
__ªsu…
 == 0) \

899 
__ªsu…
 = (
__s1
[1] \

900 - ((
__c⁄°
 *) \

901 (
__c⁄°
 *Ë(
s2
))[1]); \

902 i‡(
l2
 > 1 && 
__ªsu…
 == 0) \

904 
__ªsu…
 = \

905 (
__s1
[2] - ((
__c⁄°
 *) \

906 (
__c⁄°
 *Ë(
s2
))[2]); \

907 i‡(
l2
 > 2 && 
__ªsu…
 == 0) \

908 
__ªsu…
 = \

909 (
__s1
[3] \

910 - ((
__c⁄°
 *) \

911 (
__c⁄°
 *Ë(
s2
))[3]); \

914 
__ªsu…
; }))

	)

919 #i‚de‡
_HAVE_STRING_ARCH_°∫cmp


920 
	#°∫cmp
(
s1
, 
s2
, 
n
) \

921 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
n
) \

922 && ((
	`__buûtö_c⁄°™t_p
 (
s1
) \

923 && 
	`°æí
 (
s1
Ë< ((
size_t
Ë(
n
))) \

924 || (
	`__buûtö_c⁄°™t_p
 (
s2
) \

925 && 
	`°æí
 (
s2
Ë< ((
size_t
Ë(
n
)))) \

926 ? 
	`°rcmp
 (
s1
, 
s2
Ë: 
	`°∫cmp
 (s1, s2, 
n
)))

	)

932 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rc•n
 || deföed 
_FORCE_INLINES


933 #i‚de‡
_HAVE_STRING_ARCH_°rc•n


934 #i‡
__GNUC_PREREQ
 (3, 2)

935 
	#°rc•n
(
s
, 
ªje˘
) \

936 
__exãnsi⁄__
 \

937 ({ 
__r0
, 
__r1
, 
__r2
; \

938 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

939 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

940 ? 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
) \

941 : ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

942 ? 
	`°æí
 (
s
) \

943 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

944 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

945 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

946 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

947 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

948 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

949 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)))))) \

950 : 
	`__buûtö_°rc•n
 (
s
, 
ªje˘
)); })

	)

952 
	#°rc•n
(
s
, 
ªje˘
) \

953 
__exãnsi⁄__
 \

954 ({ 
__r0
, 
__r1
, 
__r2
; \

955 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

956 ? ((
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], __r0 == '\0') \

957 ? 
	`°æí
 (
s
) \

958 : ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], __r1 == '\0') \

959 ? 
	`__°rc•n_c1
 (
s
, 
__r0
) \

960 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

961 ? 
	`__°rc•n_c2
 (
s
, 
__r0
, 
__r1
) \

962 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

963 ? 
	`__°rc•n_c3
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

964 : 
	`°rc•n
 (
s
, 
ªje˘
))))) \

965 : 
	`°rc•n
 (
s
, 
ªje˘
)); })

	)

969 
__STRING_INLINE
 
size_t
 
__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
);

970 
__STRING_INLINE
 
size_t


971 
	$__°rc•n_c1
 (
__c⁄°
 *
__s
, 
__ªje˘
)

973 
size_t
 
__ªsu…
 = 0;

974 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘
)

975 ++
__ªsu…
;

976  
__ªsu…
;

977 
	}
}

979 
__STRING_INLINE
 
size_t
 
__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

980 
__ªje˘2
);

981 
__STRING_INLINE
 
size_t


982 
	$__°rc•n_c2
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
)

984 
size_t
 
__ªsu…
 = 0;

985 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


986 && 
__s
[
__ªsu…
] !
__ªje˘2
)

987 ++
__ªsu…
;

988  
__ªsu…
;

989 
	}
}

991 
__STRING_INLINE
 
size_t
 
__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
,

992 
__ªje˘2
, 
__ªje˘3
);

993 
__STRING_INLINE
 
size_t


994 
	$__°rc•n_c3
 (
__c⁄°
 *
__s
, 
__ªje˘1
, 
__ªje˘2
,

995 
__ªje˘3
)

997 
size_t
 
__ªsu…
 = 0;

998 
__s
[
__ªsu…
] !'\0' && __s[__ªsu…] !
__ªje˘1


999 && 
__s
[
__ªsu…
] !
__ªje˘2
 && __s[__ªsu…] !
__ªje˘3
)

1000 ++
__ªsu…
;

1001  
__ªsu…
;

1002 
	}
}

1008 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r•n
 || deföed 
_FORCE_INLINES


1009 #i‚de‡
_HAVE_STRING_ARCH_°r•n


1010 #i‡
__GNUC_PREREQ
 (3, 2)

1011 
	#°r•n
(
s
, 
ac˚±
) \

1012 
__exãnsi⁄__
 \

1013 ({ 
__a0
, 
__a1
, 
__a2
; \

1014 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1015 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1016 ? 
	`__buûtö_°r•n
 (
s
, 
ac˚±
) \

1017 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1018 ? ((Ë(
s
), 0) \

1019 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1020 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1021 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1022 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1023 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1024 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1025 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)))))) \

1026 : 
	`__buûtö_°r•n
 (
s
, 
ac˚±
)); })

	)

1028 
	#°r•n
(
s
, 
ac˚±
) \

1029 
__exãnsi⁄__
 \

1030 ({ 
__a0
, 
__a1
, 
__a2
; \

1031 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1032 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1033 ? ((Ë(
s
), 0) \

1034 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1035 ? 
	`__°r•n_c1
 (
s
, 
__a0
) \

1036 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1037 ? 
	`__°r•n_c2
 (
s
, 
__a0
, 
__a1
) \

1038 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1039 ? 
	`__°r•n_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1040 : 
	`°r•n
 (
s
, 
ac˚±
))))) \

1041 : 
	`°r•n
 (
s
, 
ac˚±
)); })

	)

1045 
__STRING_INLINE
 
size_t
 
__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
);

1046 
__STRING_INLINE
 
size_t


1047 
	$__°r•n_c1
 (
__c⁄°
 *
__s
, 
__ac˚±
)

1049 
size_t
 
__ªsu…
 = 0;

1051 
__s
[
__ªsu…
] =
__ac˚±
)

1052 ++
__ªsu…
;

1053  
__ªsu…
;

1054 
	}
}

1056 
__STRING_INLINE
 
size_t
 
__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1057 
__ac˚±2
);

1058 
__STRING_INLINE
 
size_t


1059 
	$__°r•n_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1061 
size_t
 
__ªsu…
 = 0;

1063 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2
)

1064 ++
__ªsu…
;

1065  
__ªsu…
;

1066 
	}
}

1068 
__STRING_INLINE
 
size_t
 
__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1069 
__ac˚±2
, 
__ac˚±3
);

1070 
__STRING_INLINE
 
size_t


1071 
	$__°r•n_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
, 
__ac˚±3
)

1073 
size_t
 
__ªsu…
 = 0;

1075 
__s
[
__ªsu…
] =
__ac˚±1
 || __s[__ªsu…] =
__ac˚±2


1076 || 
__s
[
__ªsu…
] =
__ac˚±3
)

1077 ++
__ªsu…
;

1078  
__ªsu…
;

1079 
	}
}

1084 #i‡!
deföed
 
_HAVE_STRING_ARCH_°Ωbrk
 || deföed 
_FORCE_INLINES


1085 #i‚de‡
_HAVE_STRING_ARCH_°Ωbrk


1086 #i‡
__GNUC_PREREQ
 (3, 2)

1087 
	#°Ωbrk
(
s
, 
ac˚±
) \

1088 
__exãnsi⁄__
 \

1089 ({ 
__a0
, 
__a1
, 
__a2
; \

1090 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1091 ? ((
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s)) \

1092 ? 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
) \

1093 : ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1094 ? ((Ë(
s
), (*Ë
NULL
) \

1095 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1096 ? 
	`__buûtö_°rchr
 (
s
, 
__a0
) \

1097 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1098 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1099 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1100 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1101 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)))))) \

1102 : 
	`__buûtö_°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1104 
	#°Ωbrk
(
s
, 
ac˚±
) \

1105 
__exãnsi⁄__
 \

1106 ({ 
__a0
, 
__a1
, 
__a2
; \

1107 (
	`__buûtö_c⁄°™t_p
 (
ac˚±
Ë&& 
	`__°rög2_1b±r_p
 (accept) \

1108 ? ((
__a0
 = ((
__c⁄°
 *Ë(
ac˚±
))[0], __a0 == '\0') \

1109 ? ((Ë(
s
), (*Ë
NULL
) \

1110 : ((
__a1
 = ((
__c⁄°
 *Ë(
ac˚±
))[1], __a1 == '\0') \

1111 ? 
	`°rchr
 (
s
, 
__a0
) \

1112 : ((
__a2
 = ((
__c⁄°
 *Ë(
ac˚±
))[2], __a2 == '\0') \

1113 ? 
	`__°Ωbrk_c2
 (
s
, 
__a0
, 
__a1
) \

1114 : (((
__c⁄°
 *Ë(
ac˚±
))[3] == '\0' \

1115 ? 
	`__°Ωbrk_c3
 (
s
, 
__a0
, 
__a1
, 
__a2
) \

1116 : 
	`°Ωbrk
 (
s
, 
ac˚±
))))) \

1117 : 
	`°Ωbrk
 (
s
, 
ac˚±
)); })

	)

1121 
__STRING_INLINE
 *
__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1122 
__ac˚±2
);

1123 
__STRING_INLINE
 *

1124 
	$__°Ωbrk_c2
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
)

1127 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2
)

1128 ++
__s
;

1129  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1130 
	}
}

1132 
__STRING_INLINE
 *
__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
,

1133 
__ac˚±2
, 
__ac˚±3
);

1134 
__STRING_INLINE
 *

1135 
	$__°Ωbrk_c3
 (
__c⁄°
 *
__s
, 
__ac˚±1
, 
__ac˚±2
,

1136 
__ac˚±3
)

1139 *
__s
 !'\0' && *__†!
__ac˚±1
 && *__†!
__ac˚±2


1140 && *
__s
 !
__ac˚±3
)

1141 ++
__s
;

1142  *
__s
 ='\0' ? 
NULL
 : (*Ë(
size_t
) __s;

1143 
	}
}

1149 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r°r
 && !
__GNUC_PREREQ
 (2, 97)

1150 
	#°r°r
(
hay°ack
, 
√edÀ
) \

1151 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
√edÀ
Ë&& 
	`__°rög2_1b±r_p
 (needle) \

1152 ? (((
__c⁄°
 *Ë(
√edÀ
))[0] == '\0' \

1153 ? (*Ë(
size_t
Ë(
hay°ack
) \

1154 : (((
__c⁄°
 *Ë(
√edÀ
))[1] == '\0' \

1155 ? 
	`°rchr
 (
hay°ack
, \

1156 ((
__c⁄°
 *Ë(
√edÀ
))[0]) \

1157 : 
	`°r°r
 (
hay°ack
, 
√edÀ
))) \

1158 : 
	`°r°r
 (
hay°ack
, 
√edÀ
)))

	)

1162 #i‡!
deföed
 
_HAVE_STRING_ARCH_°πok_r
 || deföed 
_FORCE_INLINES


1163 #i‚de‡
_HAVE_STRING_ARCH_°πok_r


1164 
	#__°πok_r
(
s
, 
£p
, 
√xç
) \

1165 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
£p
Ë&& 
	`__°rög2_1b±r_p
 (sep) \

1166 && ((
__c⁄°
 *Ë(
£p
))[0] != '\0' \

1167 && ((
__c⁄°
 *Ë(
£p
))[1] == '\0' \

1168 ? 
	`__°πok_r_1c
 (
s
, ((
__c⁄°
 *Ë(
£p
))[0], 
√xç
) \

1169 : 
	`__°πok_r
 (
s
, 
£p
, 
√xç
)))

	)

1172 
__STRING_INLINE
 *
__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
);

1173 
__STRING_INLINE
 *

1174 
	$__°πok_r_1c
 (*
__s
, 
__£p
, **
__√xç
)

1176 *
__ªsu…
;

1177 i‡(
__s
 =
NULL
)

1178 
__s
 = *
__√xç
;

1179 *
__s
 =
__£p
)

1180 ++
__s
;

1181 
__ªsu…
 = 
NULL
;

1182 i‡(*
__s
 != '\0')

1184 
__ªsu…
 = 
__s
++;

1185 *
__s
 != '\0')

1186 i‡(*
__s
++ =
__£p
)

1188 
__s
[-1] = '\0';

1192 *
__√xç
 = 
__s
;

1193  
__ªsu…
;

1194 
	}
}

1195 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


1196 
	#°πok_r
(
s
, 
£p
, 
√xç
Ë
	`__°πok_r
 (s, sï,Çexç)

	)

1201 #i‡!
deföed
 
_HAVE_STRING_ARCH_°r£p
 || deföed 
_FORCE_INLINES


1202 #i‚de‡
_HAVE_STRING_ARCH_°r£p


1204 *
__°r£p_g
 (**
__°rögp
, 
__c⁄°
 *
__dñim
);

1205 
	#__°r£p
(
s
, 
ªje˘
) \

1206 
__exãnsi⁄__
 \

1207 ({ 
__r0
, 
__r1
, 
__r2
; \

1208 (
	`__buûtö_c⁄°™t_p
 (
ªje˘
Ë&& 
	`__°rög2_1b±r_p
 (reject) \

1209 && (
__r0
 = ((
__c⁄°
 *Ë(
ªje˘
))[0], \

1210 ((
__c⁄°
 *Ë(
ªje˘
))[0] != '\0') \

1211 ? ((
__r1
 = ((
__c⁄°
 *Ë(
ªje˘
))[1], \

1212 ((
__c⁄°
 *Ë(
ªje˘
))[1] == '\0') \

1213 ? 
	`__°r£p_1c
 (
s
, 
__r0
) \

1214 : ((
__r2
 = ((
__c⁄°
 *Ë(
ªje˘
))[2], __r2 == '\0') \

1215 ? 
	`__°r£p_2c
 (
s
, 
__r0
, 
__r1
) \

1216 : (((
__c⁄°
 *Ë(
ªje˘
))[3] == '\0' \

1217 ? 
	`__°r£p_3c
 (
s
, 
__r0
, 
__r1
, 
__r2
) \

1218 : 
	`__°r£p_g
 (
s
, 
ªje˘
)))) \

1219 : 
	`__°r£p_g
 (
s
, 
ªje˘
)); })

	)

1222 
__STRING_INLINE
 *
__°r£p_1c
 (**
__s
, 
__ªje˘
);

1223 
__STRING_INLINE
 *

1224 
	$__°r£p_1c
 (**
__s
, 
__ªje˘
)

1226 *
__ªtvÆ
 = *
__s
;

1227 i‡(
__ªtvÆ
 !
NULL
 && (*
__s
 = 
	`°rchr
 (__ªtvÆ, 
__ªje˘
)) != NULL)

1228 *(*
__s
)++ = '\0';

1229  
__ªtvÆ
;

1230 
	}
}

1232 
__STRING_INLINE
 *
__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
);

1233 
__STRING_INLINE
 *

1234 
	$__°r£p_2c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
)

1236 *
__ªtvÆ
 = *
__s
;

1237 i‡(
__ªtvÆ
 !
NULL
)

1239 *
__˝
 = 
__ªtvÆ
;

1242 i‡(*
__˝
 == '\0')

1244 
__˝
 = 
NULL
;

1247 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
)

1249 *
__˝
++ = '\0';

1252 ++
__˝
;

1254 *
__s
 = 
__˝
;

1256  
__ªtvÆ
;

1257 
	}
}

1259 
__STRING_INLINE
 *
__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
,

1260 
__ªje˘3
);

1261 
__STRING_INLINE
 *

1262 
	$__°r£p_3c
 (**
__s
, 
__ªje˘1
, 
__ªje˘2
, 
__ªje˘3
)

1264 *
__ªtvÆ
 = *
__s
;

1265 i‡(
__ªtvÆ
 !
NULL
)

1267 *
__˝
 = 
__ªtvÆ
;

1270 i‡(*
__˝
 == '\0')

1272 
__˝
 = 
NULL
;

1275 i‡(*
__˝
 =
__ªje˘1
 || *__˝ =
__ªje˘2
 || *__˝ =
__ªje˘3
)

1277 *
__˝
++ = '\0';

1280 ++
__˝
;

1282 *
__s
 = 
__˝
;

1284  
__ªtvÆ
;

1285 
	}
}

1286 #ifde‡
__USE_BSD


1287 
	#°r£p
(
s
, 
ªje˘
Ë
	`__°r£p
 (s,Ñeje˘)

	)

1294 #ifde‡
__USE_MISC


1296 #i‡!
deföed
 
_HAVE_STRING_ARCH_°rdup
 || !deföed 
_HAVE_STRING_ARCH_°∫dup


1297 
	#__√ed_mÆloc_™d_ˇŒoc


	)

1298 
	~<°dlib.h
>

1301 #i‚de‡
_HAVE_STRING_ARCH_°rdup


1303 *
	$__°rdup
 (
__c⁄°
 *
__°rög
Ë
__THROW
 
__©åibuã_mÆloc__
;

1304 
	#__°rdup
(
s
) \

1305 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1306 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1307 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1308 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1309 *
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1310 i‡(
__ªtvÆ
 !
NULL
) \

1311 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, 
__Àn
); \

1312 
__ªtvÆ
; 
	}
})) \

1313 : 
	`__°rdup
 (
s
)))

	)

1315 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


1316 
	#°rdup
(
s
Ë
	`__°rdup
 (s)

	)

1320 #i‚de‡
_HAVE_STRING_ARCH_°∫dup


1322 *
	$__°∫dup
 (
__c⁄°
 *
__°rög
, 
size_t
 
__n
)

1323 
__THROW
 
__©åibuã_mÆloc__
;

1324 
	#__°∫dup
(
s
, 
n
) \

1325 (
	`__exãnsi⁄__
 (
	`__buûtö_c⁄°™t_p
 (
s
Ë&& 
	`__°rög2_1b±r_p
 (s) \

1326 ? (((
__c⁄°
 *Ë(
s
))[0] == '\0' \

1327 ? (*Ë
	`ˇŒoc
 ((
size_t
) 1, (size_t) 1) \

1328 : ({ 
size_t
 
__Àn
 = 
	`°æí
 (
s
) + 1; \

1329 
size_t
 
__n
 = (
n
); \

1330 *
__ªtvÆ
; \

1331 i‡(
__n
 < 
__Àn
) \

1332 
__Àn
 = 
__n
 + 1; \

1333 
__ªtvÆ
 = (*Ë
	`mÆloc
 (
__Àn
); \

1334 i‡(
__ªtvÆ
 !
NULL
) \

1336 
__ªtvÆ
[
__Àn
 - 1] = '\0'; \

1337 
__ªtvÆ
 = (*Ë
	`mem˝y
 (__ªtvÆ, 
s
, \

1338 
__Àn
 - 1); \

1340 
__ªtvÆ
; 
	}
})) \

1341 : 
	`__°∫dup
 (
s
, 
n
)))

	)

1343 #ifde‡
__USE_GNU


1344 
	#°∫dup
(
s
, 
n
Ë
	`__°∫dup
 (s,Ç)

	)

1350 #i‚de‡
_FORCE_INLINES


1351 #unde‡
__STRING_INLINE


	@/usr/include/bits/string3.h

19 #i‚de‡
_STRING_H


23 
__w¨nde˛
 (
__w¨n_mem£t_zîo_Àn
,

26 #i‚de‡
__˝lu•lus


30 #unde‡
mem˝y


31 #unde‡
memmove


32 #unde‡
mem£t


33 #unde‡
°rˇt


34 #unde‡
°r˝y


35 #unde‡
°∫ˇt


36 #unde‡
°∫˝y


37 #ifde‡
__USE_GNU


38 #unde‡
memp˝y


39 #unde‡
°p˝y


41 #ifde‡
__USE_BSD


42 #unde‡
bc›y


43 #unde‡
bzîo


48 
__exã∫_Æways_ölöe
 *

49 
__NTH
 (
	$mem˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

50 
size_t
 
__Àn
))

52  
	`__buûtö___mem˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

53 
	}
}

55 
__exã∫_Æways_ölöe
 *

56 
__NTH
 (
	$memmove
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__Àn
))

58  
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

59 
	}
}

61 #ifde‡
__USE_GNU


62 
__exã∫_Æways_ölöe
 *

63 
__NTH
 (
	$memp˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

64 
size_t
 
__Àn
))

66  
	`__buûtö___memp˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

67 
	}
}

76 
__exã∫_Æways_ölöe
 *

77 
__NTH
 (
	$mem£t
 (*
__de°
, 
__ch
, 
size_t
 
__Àn
))

79 i‡(
	`__buûtö_c⁄°™t_p
 (
__Àn
) && __len == 0

80 && (!
	`__buûtö_c⁄°™t_p
 (
__ch
) || __ch != 0))

82 
	`__w¨n_mem£t_zîo_Àn
 ();

83  
__de°
;

85  
	`__buûtö___mem£t_chk
 (
__de°
, 
__ch
, 
__Àn
, 
	`__bos0
 (__dest));

86 
	}
}

88 #ifde‡
__USE_BSD


89 
__exã∫_Æways_ölöe
 

90 
__NTH
 (
	$bc›y
 (
__c⁄°
 *
__§c
, *
__de°
, 
size_t
 
__Àn
))

92 (Ë
	`__buûtö___memmove_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos0
 (__dest));

93 
	}
}

95 
__exã∫_Æways_ölöe
 

96 
__NTH
 (
	$bzîo
 (*
__de°
, 
size_t
 
__Àn
))

98 (Ë
	`__buûtö___mem£t_chk
 (
__de°
, '\0', 
__Àn
, 
	`__bos0
 (__dest));

99 
	}
}

102 
__exã∫_Æways_ölöe
 *

103 
__NTH
 (
	$°r˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

105  
	`__buûtö___°r˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

106 
	}
}

108 #ifde‡
__USE_GNU


109 
__exã∫_Æways_ölöe
 *

110 
__NTH
 (
	$°p˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

112  
	`__buûtö___°p˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

113 
	}
}

117 
__exã∫_Æways_ölöe
 *

118 
__NTH
 (
	$°∫˝y
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

119 
size_t
 
__Àn
))

121  
	`__buûtö___°∫˝y_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

122 
	}
}

125 *
	$__°≤˝y_chk
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
,

126 
size_t
 
__de°Àn
Ë
__THROW
;

127 *
	`__REDIRECT_NTH
 (
__°≤˝y_Æüs
, (*
__de°
,

128 
__c⁄°
 *
__§c
,

129 
size_t
 
__n
), 
°≤˝y
);

131 
__exã∫_Æways_ölöe
 *

132 
	`__NTH
 (
	$°≤˝y
 (*
__de°
, 
__c⁄°
 *
__§c
, 
size_t
 
__n
))

134 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1

135 && (!
	`__buûtö_c⁄°™t_p
 (
__n
Ë|| __¿<
	`__bos
 (
__de°
)))

136  
	`__°≤˝y_chk
 (
__de°
, 
__§c
, 
__n
, 
	`__bos
 (__dest));

137  
	`__°≤˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

138 
	}
}

141 
__exã∫_Æways_ölöe
 *

142 
__NTH
 (
	$°rˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
))

144  
	`__buûtö___°rˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__dest));

145 
	}
}

148 
__exã∫_Æways_ölöe
 *

149 
__NTH
 (
	$°∫ˇt
 (*
__ª°ri˘
 
__de°
, 
__c⁄°
 *__ª°ri˘ 
__§c
,

150 
size_t
 
__Àn
))

152  
	`__buûtö___°∫ˇt_chk
 (
__de°
, 
__§c
, 
__Àn
, 
	`__bos
 (__dest));

153 
	}
}

	@/usr/include/bits/sys_errlist.h

20 #i‚de‡
_STDIO_H


26 #ifde‡ 
__USE_BSD


27 
sys_√º
;

28 
__c⁄°
 *__c⁄° 
sys_îæi°
[];

30 #ifde‡ 
__USE_GNU


31 
_sys_√º
;

32 
__c⁄°
 *__c⁄° 
_sys_îæi°
[];

	@/usr/include/bits/time.h

24 #i‡
deföed
 
__√ed_timevÆ
 || deföed 
__USE_GNU


25 #i‚de‡
_STRUCT_TIMEVAL


26 
	#_STRUCT_TIMEVAL
 1

	)

27 
	~<bôs/ty≥s.h
>

31 
	stimevÆ


33 
__time_t
 
	mtv_£c
;

34 
__su£c⁄ds_t
 
	mtv_u£c
;

39 #i‚de‡
__√ed_timevÆ


40 #i‚de‡
_BITS_TIME_H


41 
	#_BITS_TIME_H
 1

	)

49 
	#CLOCKS_PER_SEC
 1000000l

	)

51 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


54 
	~<bôs/ty≥s.h
>

55 
__sysc⁄f
 ();

56 
	#CLK_TCK
 ((
__˛ock_t
Ë
	`__sysc⁄f
 (2)Ë

	)

59 #ifde‡
__USE_POSIX199309


61 
	#CLOCK_REALTIME
 0

	)

63 
	#CLOCK_MONOTONIC
 1

	)

65 
	#CLOCK_PROCESS_CPUTIME_ID
 2

	)

67 
	#CLOCK_THREAD_CPUTIME_ID
 3

	)

69 
	#CLOCK_MONOTONIC_RAW
 4

	)

71 
	#CLOCK_REALTIME_COARSE
 5

	)

73 
	#CLOCK_MONOTONIC_COARSE
 6

	)

75 
	#CLOCK_BOOTTIME
 7

	)

77 
	#CLOCK_REALTIME_ALARM
 8

	)

79 
	#CLOCK_BOOTTIME_ALARM
 9

	)

82 
	#TIMER_ABSTIME
 1

	)

85 #ifde‡
__USE_GNU


86 
	~<bôs/timex.h
>

88 
__BEGIN_DECLS


91 
	$˛ock_adjtime
 (
__˛ockid_t
 
__˛ock_id
, 
timex
 *
__utx
Ë
__THROW
;

93 
__END_DECLS


99 #unde‡
__√ed_timevÆ


	@/usr/include/bits/types.h

24 #i‚def 
_BITS_TYPES_H


25 
	#_BITS_TYPES_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/w‹dsize.h
>

31 
	t__u_ch¨
;

32 
	t__u_sh‹t
;

33 
	t__u_öt
;

34 
	t__u_l⁄g
;

37 sig√d 
	t__öt8_t
;

38 
	t__uöt8_t
;

39 sig√d 
	t__öt16_t
;

40 
	t__uöt16_t
;

41 sig√d 
	t__öt32_t
;

42 
	t__uöt32_t
;

43 #i‡
__WORDSIZE
 == 64

44 sig√d 
	t__öt64_t
;

45 
	t__uöt64_t
;

46 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


47 
__exãnsi⁄__
 sig√d 
	t__öt64_t
;

48 
__exãnsi⁄__
 
	t__uöt64_t
;

52 #i‡
__WORDSIZE
 == 64

53 
	t__quad_t
;

54 
	t__u_quad_t
;

55 #ñi‡
deföed
 
__GLIBC_HAVE_LONG_LONG


56 
__exãnsi⁄__
 
	t__quad_t
;

57 
__exãnsi⁄__
 
	t__u_quad_t
;

61 
	m__vÆ
[2];

62 } 
	t__quad_t
;

65 
__u_l⁄g
 
	m__vÆ
[2];

66 } 
	t__u_quad_t
;

99 
	#__S16_TYPE
 

	)

100 
	#__U16_TYPE
 

	)

101 
	#__S32_TYPE
 

	)

102 
	#__U32_TYPE
 

	)

103 
	#__SLONGWORD_TYPE
 

	)

104 
	#__ULONGWORD_TYPE
 

	)

105 #i‡
__WORDSIZE
 == 32

106 
	#__SQUAD_TYPE
 
__quad_t


	)

107 
	#__UQUAD_TYPE
 
__u_quad_t


	)

108 
	#__SWORD_TYPE
 

	)

109 
	#__UWORD_TYPE
 

	)

110 
	#__SLONG32_TYPE
 

	)

111 
	#__ULONG32_TYPE
 

	)

112 
	#__S64_TYPE
 
__quad_t


	)

113 
	#__U64_TYPE
 
__u_quad_t


	)

116 
	#__STD_TYPE
 
__exãnsi⁄__
 

	)

117 #ñi‡
__WORDSIZE
 == 64

118 
	t__SQUAD_TYPE
 

	)

119 
	t__UQUAD_TYPE
 

	)

120 
	t__SWORD_TYPE
 

	)

121 
	t__UWORD_TYPE
 

	)

122 
	t__SLONG32_TYPE
 

	)

123 
	t__ULONG32_TYPE
 

	)

124 
	t__S64_TYPE
 

	)

125 
	t__U64_TYPE
 

	)

127 
	t__STD_TYPE
 

	)

131 
	~<bôs/ty≥sizes.h
>

134 
__STD_TYPE
 
	t__DEV_T_TYPE
 
	t__dev_t
;

135 
__STD_TYPE
 
__UID_T_TYPE
 
	g__uid_t
;

136 
__STD_TYPE
 
__GID_T_TYPE
 
	g__gid_t
;

137 
__STD_TYPE
 
__INO_T_TYPE
 
	g__öo_t
;

138 
__STD_TYPE
 
__INO64_T_TYPE
 
	g__öo64_t
;

139 
__STD_TYPE
 
__MODE_T_TYPE
 
	g__mode_t
;

140 
__STD_TYPE
 
__NLINK_T_TYPE
 
	g__∆ök_t
;

141 
__STD_TYPE
 
__OFF_T_TYPE
 
	g__off_t
;

142 
__STD_TYPE
 
__OFF64_T_TYPE
 
	g__off64_t
;

143 
__STD_TYPE
 
__PID_T_TYPE
 
	g__pid_t
;

144 
__STD_TYPE
 
__FSID_T_TYPE
 
	g__fsid_t
;

145 
__STD_TYPE
 
__CLOCK_T_TYPE
 
	g__˛ock_t
;

146 
__STD_TYPE
 
__RLIM_T_TYPE
 
	g__æim_t
;

147 
__STD_TYPE
 
__RLIM64_T_TYPE
 
	g__æim64_t
;

148 
__STD_TYPE
 
__ID_T_TYPE
 
	g__id_t
;

149 
__STD_TYPE
 
__TIME_T_TYPE
 
	g__time_t
;

150 
__STD_TYPE
 
__USECONDS_T_TYPE
 
	g__u£c⁄ds_t
;

151 
__STD_TYPE
 
__SUSECONDS_T_TYPE
 
	g__su£c⁄ds_t
;

153 
__STD_TYPE
 
__DADDR_T_TYPE
 
	g__daddr_t
;

154 
__STD_TYPE
 
__SWBLK_T_TYPE
 
	g__swblk_t
;

155 
__STD_TYPE
 
__KEY_T_TYPE
 
	g__key_t
;

158 
__STD_TYPE
 
__CLOCKID_T_TYPE
 
	g__˛ockid_t
;

161 
__STD_TYPE
 
__TIMER_T_TYPE
 
	g__timî_t
;

164 
__STD_TYPE
 
__BLKSIZE_T_TYPE
 
	g__blksize_t
;

169 
__STD_TYPE
 
__BLKCNT_T_TYPE
 
	g__blk˙t_t
;

170 
__STD_TYPE
 
__BLKCNT64_T_TYPE
 
	g__blk˙t64_t
;

173 
__STD_TYPE
 
__FSBLKCNT_T_TYPE
 
	g__fsblk˙t_t
;

174 
__STD_TYPE
 
__FSBLKCNT64_T_TYPE
 
	g__fsblk˙t64_t
;

177 
__STD_TYPE
 
__FSFILCNT_T_TYPE
 
	g__fsfû˙t_t
;

178 
__STD_TYPE
 
__FSFILCNT64_T_TYPE
 
	g__fsfû˙t64_t
;

180 
__STD_TYPE
 
__SSIZE_T_TYPE
 
	g__ssize_t
;

184 
__off64_t
 
	t__loff_t
;

185 
__quad_t
 *
	t__qaddr_t
;

186 *
	t__ˇddr_t
;

189 
__STD_TYPE
 
__SWORD_TYPE
 
	g__öçå_t
;

192 
__STD_TYPE
 
__U32_TYPE
 
	g__sockÀn_t
;

195 #unde‡
__STD_TYPE


	@/usr/include/bits/unistd.h

20 #i‚de‡
_UNISTD_H


24 
ssize_t
 
	$__ªad_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

25 
size_t
 
__buÊí
Ë
__wur
;

26 
ssize_t
 
	`__REDIRECT
 (
__ªad_Æüs
, (
__fd
, *
__buf
,

27 
size_t
 
__nbyãs
), 
ªad
Ë
__wur
;

28 
ssize_t
 
	`__REDIRECT
 (
__ªad_chk_w¨n
,

29 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

30 
size_t
 
__buÊí
), 
__ªad_chk
)

31 
__wur
 
	`__w¨«âr
 ("read called with biggerÜengthÅhan size of "

34 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


35 
	$ªad
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
)

37 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

39 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

40  
	`__ªad_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

42 i‡(
__nbyãs
 > 
	`__bos0
 (
__buf
))

43  
	`__ªad_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
	`__bos0
 (__buf));

45  
	`__ªad_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
);

46 
	}
}

48 #ifde‡
__USE_UNIX98


49 
ssize_t
 
	$__¥ód_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

50 
__off_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

51 
ssize_t
 
	$__¥ód64_chk
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

52 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
Ë
__wur
;

53 
ssize_t
 
	`__REDIRECT
 (
__¥ód_Æüs
,

54 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

55 
__off_t
 
__off£t
), 
¥ód
Ë
__wur
;

56 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_Æüs
,

57 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

58 
__off64_t
 
__off£t
), 
¥ód64
Ë
__wur
;

59 
ssize_t
 
	`__REDIRECT
 (
__¥ód_chk_w¨n
,

60 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

61 
__off_t
 
__off£t
, 
size_t
 
__bufsize
), 
__¥ód_chk
)

62 
__wur
 
	`__w¨«âr
 ("pread called with biggerÜengthÅhan size of "

64 
ssize_t
 
	`__REDIRECT
 (
__¥ód64_chk_w¨n
,

65 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
,

66 
__off64_t
 
__off£t
, 
size_t
 
__bufsize
),

67 
__¥ód64_chk
)

68 
__wur
 
	`__w¨«âr
 ("pread64 called with biggerÜengthÅhan size of "

71 #i‚de‡
__USE_FILE_OFFSET64


72 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


73 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off_t
 
__off£t
)

75 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

77 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

78  
	`__¥ód_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

80 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

81  
	`__¥ód_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

82 
	`__bos0
 (
__buf
));

84  
	`__¥ód_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

85 
	}
}

87 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


88 
	$¥ód
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

90 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

92 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

93  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

95 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

96  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

97 
	`__bos0
 (
__buf
));

100  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

101 
	}
}

104 #ifde‡
__USE_LARGEFILE64


105 
__exã∫_Æways_ölöe
 
__wur
 
ssize_t


106 
	$¥ód64
 (
__fd
, *
__buf
, 
size_t
 
__nbyãs
, 
__off64_t
 
__off£t
)

108 i‡(
	`__bos0
 (
__buf
Ë!(
size_t
) -1)

110 i‡(!
	`__buûtö_c⁄°™t_p
 (
__nbyãs
))

111  
	`__¥ód64_chk
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
, 
	`__bos0
 (__buf));

113 i‡–
__nbyãs
 > 
	`__bos0
 (
__buf
))

114  
	`__¥ód64_chk_w¨n
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
,

115 
	`__bos0
 (
__buf
));

118  
	`__¥ód64_Æüs
 (
__fd
, 
__buf
, 
__nbyãs
, 
__off£t
);

119 
	}
}

123 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED
 || deföed 
__USE_XOPEN2K


124 
ssize_t
 
	$__ªadlök_chk
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

125 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

126 
size_t
 
__buÊí
)

127 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

128 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_Æüs
,

129 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

130 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
), 
ªadlök
)

131 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
;

132 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök_chk_w¨n
,

133 (
__c⁄°
 *
__ª°ri˘
 
__∑th
,

134 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

135 
size_t
 
__buÊí
), 
__ªadlök_chk
)

136 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
	`__w¨«âr
 ("readlink called with biggerÜength "

139 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1, 2)Ë
__wur
 
ssize_t


140 
	`__NTH
 (
	$ªadlök
 (
__c⁄°
 *
__ª°ri˘
 
__∑th
, *__ª°ri˘ 
__buf
,

141 
size_t
 
__Àn
))

143 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

145 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

146  
	`__ªadlök_chk
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

148 i‡–
__Àn
 > 
	`__bos
 (
__buf
))

149  
	`__ªadlök_chk_w¨n
 (
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

151  
	`__ªadlök_Æüs
 (
__∑th
, 
__buf
, 
__Àn
);

152 
	}
}

155 #ifde‡
__USE_ATFILE


156 
ssize_t
 
	$__ªadlök©_chk
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

157 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

158 
size_t
 
__buÊí
)

159 
__THROW
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

160 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_Æüs
,

161 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

162 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
),

163 
ªadlök©
)

164 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
;

165 
ssize_t
 
	`__REDIRECT_NTH
 (
__ªadlök©_chk_w¨n
,

166 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

167 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
,

168 
size_t
 
__buÊí
), 
__ªadlök©_chk
)

169 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
	`__w¨«âr
 ("readlinkat called with bigger "

173 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((2, 3)Ë
__wur
 
ssize_t


174 
	`__NTH
 (
	$ªadlök©
 (
__fd
, 
__c⁄°
 *
__ª°ri˘
 
__∑th
,

175 *
__ª°ri˘
 
__buf
, 
size_t
 
__Àn
))

177 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

179 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

180  
	`__ªadlök©_chk
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

182 i‡(
__Àn
 > 
	`__bos
 (
__buf
))

183  
	`__ªadlök©_chk_w¨n
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
,

184 
	`__bos
 (
__buf
));

186  
	`__ªadlök©_Æüs
 (
__fd
, 
__∑th
, 
__buf
, 
__Àn
);

187 
	}
}

190 *
	$__gëcwd_chk
 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
)

191 
__THROW
 
__wur
;

192 *
	`__REDIRECT_NTH
 (
__gëcwd_Æüs
,

193 (*
__buf
, 
size_t
 
__size
), 
gëcwd
Ë
__wur
;

194 *
	`__REDIRECT_NTH
 (
__gëcwd_chk_w¨n
,

195 (*
__buf
, 
size_t
 
__size
, size_à
__buÊí
),

196 
__gëcwd_chk
)

197 
__wur
 
	`__w¨«âr
 ("getcwd caller with biggerÜengthÅhan size of "

200 
__exã∫_Æways_ölöe
 
__wur
 *

201 
	`__NTH
 (
	$gëcwd
 (*
__buf
, 
size_t
 
__size
))

203 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

205 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
))

206  
	`__gëcwd_chk
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

208 i‡(
__size
 > 
	`__bos
 (
__buf
))

209  
	`__gëcwd_chk_w¨n
 (
__buf
, 
__size
, 
	`__bos
 (__buf));

211  
	`__gëcwd_Æüs
 (
__buf
, 
__size
);

212 
	}
}

214 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_XOPEN_EXTENDED


215 *
	$__gëwd_chk
 (*
__buf
, 
size_t
 
buÊí
)

216 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

217 *
	`__REDIRECT_NTH
 (
__gëwd_w¨n
, (*
__buf
), 
gëwd
)

218 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("please use getcwd instead,ás getwd "

221 
__exã∫_Æways_ölöe
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
 
__wur
 *

222 
	`__NTH
 (
	$gëwd
 (*
__buf
))

224 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

225  
	`__gëwd_chk
 (
__buf
, 
	`__bos
 (__buf));

226  
	`__gëwd_w¨n
 (
__buf
);

227 
	}
}

230 
size_t
 
	$__c⁄f°r_chk
 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

231 
size_t
 
__buÊí
Ë
__THROW
;

232 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_Æüs
, (
__«me
, *
__buf
,

233 
size_t
 
__Àn
), 
c⁄f°r
);

234 
size_t
 
	`__REDIRECT_NTH
 (
__c⁄f°r_chk_w¨n
,

235 (
__«me
, *
__buf
, 
size_t
 
__Àn
,

236 
size_t
 
__buÊí
), 
__c⁄f°r_chk
)

237 
	`__w¨«âr
 ("confstr called with biggerÜengthÅhan size of destination "

240 
__exã∫_Æways_ölöe
 
size_t


241 
	`__NTH
 (
	$c⁄f°r
 (
__«me
, *
__buf
, 
size_t
 
__Àn
))

243 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

245 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

246  
	`__c⁄f°r_chk
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

248 i‡(
	`__bos
 (
__buf
Ë< 
__Àn
)

249  
	`__c⁄f°r_chk_w¨n
 (
__«me
, 
__buf
, 
__Àn
, 
	`__bos
 (__buf));

251  
	`__c⁄f°r_Æüs
 (
__«me
, 
__buf
, 
__Àn
);

252 
	}
}

255 
	$__gëgroups_chk
 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
)

256 
__THROW
 
__wur
;

257 
	`__REDIRECT_NTH
 (
__gëgroups_Æüs
, (
__size
, 
__gid_t
 
__li°
[]),

258 
gëgroups
Ë
__wur
;

259 
	`__REDIRECT_NTH
 (
__gëgroups_chk_w¨n
,

260 (
__size
, 
__gid_t
 
__li°
[], 
size_t
 
__li°Àn
),

261 
__gëgroups_chk
)

262 
__wur
 
	`__w¨«âr
 ("getgroups called with bigger group countÅhan what "

265 
__exã∫_Æways_ölöe
 

266 
	`__NTH
 (
	$gëgroups
 (
__size
, 
__gid_t
 
__li°
[]))

268 i‡(
	`__bos
 (
__li°
Ë!(
size_t
) -1)

270 i‡(!
	`__buûtö_c⁄°™t_p
 (
__size
) || __size < 0)

271  
	`__gëgroups_chk
 (
__size
, 
__li°
, 
	`__bos
 (__list));

273 i‡(
__size
 *  (
__gid_t
Ë> 
	`__bos
 (
__li°
))

274  
	`__gëgroups_chk_w¨n
 (
__size
, 
__li°
, 
	`__bos
 (__list));

276  
	`__gëgroups_Æüs
 (
__size
, 
__li°
);

277 
	}
}

280 
	$__ây«me_r_chk
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

281 
size_t
 
__ƒól
Ë
__THROW
 
	`__n⁄nuŒ
 ((2));

282 
	`__REDIRECT_NTH
 (
__ây«me_r_Æüs
, (
__fd
, *
__buf
,

283 
size_t
 
__buÊí
), 
ây«me_r
)

284 
	`__n⁄nuŒ
 ((2));

285 
	`__REDIRECT_NTH
 (
__ây«me_r_chk_w¨n
,

286 (
__fd
, *
__buf
, 
size_t
 
__buÊí
,

287 
size_t
 
__ƒól
), 
__ây«me_r_chk
)

288 
	`__n⁄nuŒ
 ((2)Ë
	`__w¨«âr
 ("ttyname_r called with bigger buflenÅhan "

291 
__exã∫_Æways_ölöe
 

292 
	`__NTH
 (
	$ây«me_r
 (
__fd
, *
__buf
, 
size_t
 
__buÊí
))

294 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

296 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

297  
	`__ây«me_r_chk
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

299 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

300  
	`__ây«me_r_chk_w¨n
 (
__fd
, 
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

302  
	`__ây«me_r_Æüs
 (
__fd
, 
__buf
, 
__buÊí
);

303 
	}
}

306 #i‡
deföed
 
__USE_REENTRANT
 || deföed 
__USE_POSIX199506


307 
	$__gëlogö_r_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

308 
	`__n⁄nuŒ
 ((1));

309 
	`__REDIRECT
 (
__gëlogö_r_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

310 
gëlogö_r
Ë
	`__n⁄nuŒ
 ((1));

311 
	`__REDIRECT
 (
__gëlogö_r_chk_w¨n
,

312 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

313 
__gëlogö_r_chk
)

314 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("getlogin_r called with bigger buflenÅhan "

317 
__exã∫_Æways_ölöe
 

318 
	$gëlogö_r
 (*
__buf
, 
size_t
 
__buÊí
)

320 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

322 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

323  
	`__gëlogö_r_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

325 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

326  
	`__gëlogö_r_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

328  
	`__gëlogö_r_Æüs
 (
__buf
, 
__buÊí
);

329 
	}
}

333 #i‡
deföed
 
__USE_BSD
 || deföed 
__USE_UNIX98


334 
	$__gëho°«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

335 
__THROW
 
	`__n⁄nuŒ
 ((1));

336 
	`__REDIRECT_NTH
 (
__gëho°«me_Æüs
, (*
__buf
, 
size_t
 
__buÊí
),

337 
gëho°«me
Ë
	`__n⁄nuŒ
 ((1));

338 
	`__REDIRECT_NTH
 (
__gëho°«me_chk_w¨n
,

339 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

340 
__gëho°«me_chk
)

341 
	`__n⁄nuŒ
 ((1)Ë
	`__w¨«âr
 ("gethostname called with bigger buflenÅhan "

344 
__exã∫_Æways_ölöe
 

345 
	`__NTH
 (
	$gëho°«me
 (*
__buf
, 
size_t
 
__buÊí
))

347 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

349 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

350  
	`__gëho°«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

352 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

353  
	`__gëho°«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

355  
	`__gëho°«me_Æüs
 (
__buf
, 
__buÊí
);

356 
	}
}

360 #i‡
deföed
 
__USE_BSD
 || (deföed 
__USE_XOPEN
 && !deföed 
__USE_UNIX98
)

361 
	$__gëdomaö«me_chk
 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__wur
;

363 
	`__REDIRECT_NTH
 (
__gëdomaö«me_Æüs
, (*
__buf
,

364 
size_t
 
__buÊí
),

365 
gëdomaö«me
Ë
	`__n⁄nuŒ
 ((1)Ë
__wur
;

366 
	`__REDIRECT_NTH
 (
__gëdomaö«me_chk_w¨n
,

367 (*
__buf
, 
size_t
 
__buÊí
, size_à
__ƒól
),

368 
__gëdomaö«me_chk
)

369 
	`__n⁄nuŒ
 ((1)Ë
__wur
 
	`__w¨«âr
 ("getdomainname called with bigger "

373 
__exã∫_Æways_ölöe
 

374 
	`__NTH
 (
	$gëdomaö«me
 (*
__buf
, 
size_t
 
__buÊí
))

376 i‡(
	`__bos
 (
__buf
Ë!(
size_t
) -1)

378 i‡(!
	`__buûtö_c⁄°™t_p
 (
__buÊí
))

379  
	`__gëdomaö«me_chk
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

381 i‡(
__buÊí
 > 
	`__bos
 (
__buf
))

382  
	`__gëdomaö«me_chk_w¨n
 (
__buf
, 
__buÊí
, 
	`__bos
 (__buf));

384  
	`__gëdomaö«me_Æüs
 (
__buf
, 
__buÊí
);

385 
	}
}

	@/usr/include/bits/waitflags.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


26 
	#WNOHANG
 1

	)

27 
	#WUNTRACED
 2

	)

30 
	#WSTOPPED
 2

	)

31 
	#WEXITED
 4

	)

32 
	#WCONTINUED
 8

	)

33 
	#WNOWAIT
 0x01000000

	)

35 
	#__WNOTHREAD
 0x20000000

	)

37 
	#__WALL
 0x40000000

	)

38 
	#__WCLONE
 0x80000000

	)

	@/usr/include/bits/waitstatus.h

20 #i‡!
deföed
 
_SYS_WAIT_H
 && !deföed 
_STDLIB_H


29 
	#__WEXITSTATUS
(
°©us
Ë(((°©usË& 0xff00Ë>> 8)

	)

32 
	#__WTERMSIG
(
°©us
Ë((°©usË& 0x7f)

	)

35 
	#__WSTOPSIG
(
°©us
Ë
	`__WEXITSTATUS
(°©us)

	)

38 
	#__WIFEXITED
(
°©us
Ë(
	`__WTERMSIG
(°©usË=0)

	)

41 
	#__WIFSIGNALED
(
°©us
) \

42 (((sig√d Ë(((
°©us
Ë& 0x7fË+ 1Ë>> 1Ë> 0)

	)

45 
	#__WIFSTOPPED
(
°©us
Ë(((°©usË& 0xffË=0x7f)

	)

49 #ifde‡
WCONTINUED


50 
	#__WIFCONTINUED
(
°©us
Ë((°©usË=
__W_CONTINUED
)

	)

54 
	#__WCOREDUMP
(
°©us
Ë((°©usË& 
__WCOREFLAG
)

	)

57 
	#__W_EXITCODE
(
ªt
, 
sig
Ë(‘ëË<< 8 | (sig))

	)

58 
	#__W_STOPCODE
(
sig
Ë((sigË<< 8 | 0x7f)

	)

59 
	#__W_CONTINUED
 0xffff

	)

60 
	#__WCOREFLAG
 0x80

	)

63 #ifdef 
__USE_BSD


65 
	~<ídün.h
>

67 
	uwaô


69 
	mw_°©us
;

72 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


73 
	m__w_ãrmsig
:7;

74 
	m__w_c‹edump
:1;

75 
	m__w_ªtcode
:8;

78 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


80 
	m__w_ªtcode
:8;

81 
	m__w_c‹edump
:1;

82 
	m__w_ãrmsig
:7;

84 } 
	m__waô_ãrmö©ed
;

87 #if 
__BYTE_ORDER
 =
__LITTLE_ENDIAN


88 
	m__w_°›vÆ
:8;

89 
	m__w_°›sig
:8;

92 #if 
__BYTE_ORDER
 =
__BIG_ENDIAN


94 
	m__w_°›sig
:8;

95 
	m__w_°›vÆ
:8;

97 } 
	m__waô_°›≥d
;

100 
	#w_ãrmsig
 
__waô_ãrmö©ed
.
__w_ãrmsig


	)

101 
	#w_c‹edump
 
__waô_ãrmö©ed
.
__w_c‹edump


	)

102 
	#w_ªtcode
 
__waô_ãrmö©ed
.
__w_ªtcode


	)

103 
	#w_°›sig
 
__waô_°›≥d
.
__w_°›sig


	)

104 
	#w_°›vÆ
 
__waô_°›≥d
.
__w_°›vÆ


	)

	@/usr/include/endian.h

19 #i‚def 
_ENDIAN_H


20 
	#_ENDIAN_H
 1

	)

22 
	~<„©uªs.h
>

32 
	#__LITTLE_ENDIAN
 1234

	)

33 
	#__BIG_ENDIAN
 4321

	)

34 
	#__PDP_ENDIAN
 3412

	)

37 
	~<bôs/ídün.h
>

41 #i‚de‡
__FLOAT_WORD_ORDER


42 
	#__FLOAT_WORD_ORDER
 
__BYTE_ORDER


	)

45 #ifdef 
__USE_BSD


46 
	#LITTLE_ENDIAN
 
__LITTLE_ENDIAN


	)

47 
	#BIG_ENDIAN
 
__BIG_ENDIAN


	)

48 
	#PDP_ENDIAN
 
__PDP_ENDIAN


	)

49 
	#BYTE_ORDER
 
__BYTE_ORDER


	)

52 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


53 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËLO, 
	)
HI

54 #ñi‡
__BYTE_ORDER
 =
__BIG_ENDIAN


55 
	#__LONG_LONG_PAIR
(
HI
, 
LO
ËHI, 
	)
LO

59 #ifde‡
__USE_BSD


61 
	~<bôs/byãsw≠.h
>

63 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


64 
	#htobe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

65 
	#htﬁe16
(
x
Ë(x)

	)

66 
	#be16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

67 
	#À16toh
(
x
Ë(x)

	)

69 
	#htobe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

70 
	#htﬁe32
(
x
Ë(x)

	)

71 
	#be32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

72 
	#À32toh
(
x
Ë(x)

	)

74 
	#htobe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

75 
	#htﬁe64
(
x
Ë(x)

	)

76 
	#be64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

77 
	#À64toh
(
x
Ë(x)

	)

79 
	#htobe16
(
x
Ë(x)

	)

80 
	#htﬁe16
(
x
Ë
	`__bsw≠_16
 (x)

	)

81 
	#be16toh
(
x
Ë(x)

	)

82 
	#À16toh
(
x
Ë
	`__bsw≠_16
 (x)

	)

84 
	#htobe32
(
x
Ë(x)

	)

85 
	#htﬁe32
(
x
Ë
	`__bsw≠_32
 (x)

	)

86 
	#be32toh
(
x
Ë(x)

	)

87 
	#À32toh
(
x
Ë
	`__bsw≠_32
 (x)

	)

89 
	#htobe64
(
x
Ë(x)

	)

90 
	#htﬁe64
(
x
Ë
	`__bsw≠_64
 (x)

	)

91 
	#be64toh
(
x
Ë(x)

	)

92 
	#À64toh
(
x
Ë
	`__bsw≠_64
 (x)

	)

	@/usr/include/features.h

20 #i‚def 
_FEATURES_H


21 
	#_FEATURES_H
 1

	)

98 #unde‡
__USE_ISOC99


99 #unde‡
__USE_ISOC95


100 #unde‡
__USE_POSIX


101 #unde‡
__USE_POSIX2


102 #unde‡
__USE_POSIX199309


103 #unde‡
__USE_POSIX199506


104 #unde‡
__USE_XOPEN


105 #unde‡
__USE_XOPEN_EXTENDED


106 #unde‡
__USE_UNIX98


107 #unde‡
__USE_XOPEN2K


108 #unde‡
__USE_XOPEN2KXSI


109 #unde‡
__USE_XOPEN2K8


110 #unde‡
__USE_XOPEN2K8XSI


111 #unde‡
__USE_LARGEFILE


112 #unde‡
__USE_LARGEFILE64


113 #unde‡
__USE_FILE_OFFSET64


114 #unde‡
__USE_BSD


115 #unde‡
__USE_SVID


116 #unde‡
__USE_MISC


117 #unde‡
__USE_ATFILE


118 #unde‡
__USE_GNU


119 #unde‡
__USE_REENTRANT


120 #unde‡
__USE_FORTIFY_LEVEL


121 #unde‡
__FAVOR_BSD


122 #unde‡
__KERNEL_STRICT_NAMES


126 #i‚de‡
_LOOSE_KERNEL_NAMES


127 
	#__KERNEL_STRICT_NAMES


	)

131 
	#__USE_ANSI
 1

	)

140 #i‡
deföed
 
__GNUC__
 && deföed 
__GNUC_MINOR__


141 
	#__GNUC_PREREQ
(
maj
, 
mö
) \

142 ((
__GNUC__
 << 16Ë+ 
__GNUC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

144 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë0

	)

149 #i‡
deföed
 
_BSD_SOURCE
 && \

150 !(
deföed
 
	g_POSIX_SOURCE
 || deföed 
	g_POSIX_C_SOURCE
 || \

151 
deföed
 
	g_XOPEN_SOURCE
 || deföed 
	g_GNU_SOURCE
 || deföed 
	g_SVID_SOURCE
)

152 
	#__FAVOR_BSD
 1

	)

156 #ifde‡
_GNU_SOURCE


157 #unde‡
_ISOC95_SOURCE


158 
	#_ISOC95_SOURCE
 1

	)

159 #unde‡
_ISOC99_SOURCE


160 
	#_ISOC99_SOURCE
 1

	)

161 #unde‡
_POSIX_SOURCE


162 
	#_POSIX_SOURCE
 1

	)

163 #unde‡
_POSIX_C_SOURCE


164 
	#_POSIX_C_SOURCE
 200809L

	)

165 #unde‡
_XOPEN_SOURCE


166 
	#_XOPEN_SOURCE
 700

	)

167 #unde‡
_XOPEN_SOURCE_EXTENDED


168 
	#_XOPEN_SOURCE_EXTENDED
 1

	)

169 #unde‡
_LARGEFILE64_SOURCE


170 
	#_LARGEFILE64_SOURCE
 1

	)

171 #unde‡
_BSD_SOURCE


172 
	#_BSD_SOURCE
 1

	)

173 #unde‡
_SVID_SOURCE


174 
	#_SVID_SOURCE
 1

	)

175 #unde‡
_ATFILE_SOURCE


176 
	#_ATFILE_SOURCE
 1

	)

181 #i‡(!
deföed
 
__STRICT_ANSI__
 && !deföed 
_ISOC99_SOURCE
 && \

182 !
deföed
 
	g_POSIX_SOURCE
 && !deföed 
	g_POSIX_C_SOURCE
 && \

183 !
deföed
 
	g_XOPEN_SOURCE
 && !deföed 
	g_BSD_SOURCE
 && !deföed 
	g_SVID_SOURCE
)

184 
	#_BSD_SOURCE
 1

	)

185 
	#_SVID_SOURCE
 1

	)

192 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

193 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L))

194 
	#__USE_ISOC99
 1

	)

198 #i‡(
deföed
 
_ISOC99_SOURCE
 || deföed 
_ISOC9X_SOURCE
 \

199 || (
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199409L))

200 
	#__USE_ISOC95
 1

	)

205 #i‡((!
deföed
 
__STRICT_ANSI__
 || (
_XOPEN_SOURCE
 - 0) >= 500) && \

206 !
deföed
 
_POSIX_SOURCE
 && !deföed 
_POSIX_C_SOURCE
)

207 
	#_POSIX_SOURCE
 1

	)

208 #i‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 500

209 
	#_POSIX_C_SOURCE
 2

	)

210 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 600

211 
	#_POSIX_C_SOURCE
 199506L

	)

212 #ñi‡
deföed
 
_XOPEN_SOURCE
 && (_XOPEN_SOURCE - 0) < 700

213 
	#_POSIX_C_SOURCE
 200112L

	)

215 
	#_POSIX_C_SOURCE
 200809L

	)

217 
	#__USE_POSIX_IMPLICITLY
 1

	)

220 #i‡
deföed
 
_POSIX_SOURCE
 || 
_POSIX_C_SOURCE
 >1 || deföed 
_XOPEN_SOURCE


221 
	#__USE_POSIX
 1

	)

224 #i‡
deföed
 
_POSIX_C_SOURCE
 && _POSIX_C_SOURCE >2 || deföed 
_XOPEN_SOURCE


225 
	#__USE_POSIX2
 1

	)

228 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199309L

229 
	#__USE_POSIX199309
 1

	)

232 #i‡(
_POSIX_C_SOURCE
 - 0) >= 199506L

233 
	#__USE_POSIX199506
 1

	)

236 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200112L

237 
	#__USE_XOPEN2K
 1

	)

238 #unde‡
__USE_ISOC95


239 
	#__USE_ISOC95
 1

	)

240 #unde‡
__USE_ISOC99


241 
	#__USE_ISOC99
 1

	)

244 #i‡(
_POSIX_C_SOURCE
 - 0) >= 200809L

245 
	#__USE_XOPEN2K8
 1

	)

246 #unde‡
_ATFILE_SOURCE


247 
	#_ATFILE_SOURCE
 1

	)

250 #ifdef 
_XOPEN_SOURCE


251 
	#__USE_XOPEN
 1

	)

252 #i‡(
_XOPEN_SOURCE
 - 0) >= 500

253 
	#__USE_XOPEN_EXTENDED
 1

	)

254 
	#__USE_UNIX98
 1

	)

255 #unde‡
_LARGEFILE_SOURCE


256 
	#_LARGEFILE_SOURCE
 1

	)

257 #i‡(
_XOPEN_SOURCE
 - 0) >= 600

258 #i‡(
_XOPEN_SOURCE
 - 0) >= 700

259 
	#__USE_XOPEN2K8
 1

	)

260 
	#__USE_XOPEN2K8XSI
 1

	)

262 
	#__USE_XOPEN2K
 1

	)

263 
	#__USE_XOPEN2KXSI
 1

	)

264 #unde‡
__USE_ISOC95


265 
	#__USE_ISOC95
 1

	)

266 #unde‡
__USE_ISOC99


267 
	#__USE_ISOC99
 1

	)

270 #ifde‡
_XOPEN_SOURCE_EXTENDED


271 
	#__USE_XOPEN_EXTENDED
 1

	)

276 #ifde‡
_LARGEFILE_SOURCE


277 
	#__USE_LARGEFILE
 1

	)

280 #ifde‡
_LARGEFILE64_SOURCE


281 
	#__USE_LARGEFILE64
 1

	)

284 #i‡
deföed
 
_FILE_OFFSET_BITS
 && _FILE_OFFSET_BITS == 64

285 
	#__USE_FILE_OFFSET64
 1

	)

288 #i‡
deföed
 
_BSD_SOURCE
 || deföed 
_SVID_SOURCE


289 
	#__USE_MISC
 1

	)

292 #ifdef 
_BSD_SOURCE


293 
	#__USE_BSD
 1

	)

296 #ifdef 
_SVID_SOURCE


297 
	#__USE_SVID
 1

	)

300 #ifdef 
_ATFILE_SOURCE


301 
	#__USE_ATFILE
 1

	)

304 #ifdef 
_GNU_SOURCE


305 
	#__USE_GNU
 1

	)

308 #i‡
deföed
 
_REENTRANT
 || deföed 
_THREAD_SAFE


309 
	#__USE_REENTRANT
 1

	)

312 #i‡
deföed
 
_FORTIFY_SOURCE
 && _FORTIFY_SOURCE > 0

313 #i‡!
deföed
 
__OPTIMIZE__
 || __OPTIMIZE__ <= 0

314 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
compûög
 
wôh
 
›timiz©i⁄
 (-
O
)

315 #ñi‡!
__GNUC_PREREQ
 (4, 1)

316 #w¨nög 
_FORTIFY_SOURCE
 
ªquúes
 
GCC
 4.1 
‹
 
œãr


317 #ñi‡
_FORTIFY_SOURCE
 > 1

318 
	#__USE_FORTIFY_LEVEL
 2

	)

320 
	#__USE_FORTIFY_LEVEL
 1

	)

323 #i‚de‡
__USE_FORTIFY_LEVEL


324 
	#__USE_FORTIFY_LEVEL
 0

	)

328 
	#__STDC_IEC_559__
 1

	)

329 
	#__STDC_IEC_559_COMPLEX__
 1

	)

332 
	#__STDC_ISO_10646__
 200009L

	)

340 #unde‡
__GNU_LIBRARY__


341 
	#__GNU_LIBRARY__
 6

	)

345 
	#__GLIBC__
 2

	)

346 
	#__GLIBC_MINOR__
 15

	)

348 
	#__GLIBC_PREREQ
(
maj
, 
mö
) \

349 ((
__GLIBC__
 << 16Ë+ 
__GLIBC_MINOR__
 >((
maj
Ë<< 16Ë+ (
mö
))

	)

352 #i‡
deföed
 
__GNUC__
 \

353 || (
deföed
 
	g__PGI
 && deföed 
	g__i386__
 ) \

354 || (
deföed
 
	g__INTEL_COMPILER
 && (deföed 
	g__i386__
 || deföed 
	g__ü64__
)) \

355 || (
deföed
 
	g__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L)

356 
	#__GLIBC_HAVE_LONG_LONG
 1

	)

360 #i‚de‡
__ASSEMBLER__


361 #i‚de‡
_SYS_CDEFS_H


362 
	~<sys/cdefs.h
>

367 #i‡
deföed
 
__USE_FILE_OFFSET64
 && !deföed 
__REDIRECT


368 
	#__USE_LARGEFILE
 1

	)

369 
	#__USE_LARGEFILE64
 1

	)

375 #i‡
__GNUC_PREREQ
 (2, 7Ë&& 
deföed
 
__OPTIMIZE__
 \

376 && !
deföed
 
	g__OPTIMIZE_SIZE__
 && !deföed 
	g__NO_INLINE__
 \

377 && 
deföed
 
	g__exã∫_ölöe


378 
	#__USE_EXTERN_INLINES
 1

	)

386 
	~<gnu/°ubs.h
>

	@/usr/include/getopt.h

21 #i‚de‡
_GETOPT_H


23 #i‚de‡
__√ed_gë›t


24 
	#_GETOPT_H
 1

	)

34 #i‡!
deföed
 
__GNU_LIBRARY__


35 
	~<˘y≥.h
>

38 #i‚de‡
__THROW


39 #i‚de‡
__GNUC_PREREQ


40 
	#__GNUC_PREREQ
(
maj
, 
mö
Ë(0)

	)

42 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

43 
	#__THROW
 
	`throw
 ()

	)

45 
	#__THROW


	)

49 #ifdef 
__˝lu•lus


59 *
›èrg
;

73 
›töd
;

78 
›ãº
;

82 
›t›t
;

84 #i‚de‡
__√ed_gë›t


106 
	s›ti⁄


108 c⁄° *
	g«me
;

111 
	ghas_¨g
;

112 *
	gÊag
;

113 
	gvÆ
;

118 
	#no_¨gumít
 0

	)

119 
	#ªquúed_¨gumít
 1

	)

120 
	#›ti⁄Æ_¨gumít
 2

	)

148 #ifde‡
__GNU_LIBRARY__


152 
gë›t
 (
___¨gc
, *c⁄° *
___¨gv
, c⁄° *
__sh‹t›ts
)

153 
__THROW
;

155 #i‡
deföed
 
__√ed_gë›t
 && deföed 
__USE_POSIX2
 \

156 && !
deföed
 
	g__USE_POSIX_IMPLICITLY
 && !deföed 
	g__USE_GNU


160 #ifde‡
__REDIRECT


161 
__REDIRECT_NTH
 (
gë›t
, (
___¨gc
, *c⁄° *
___¨gv
,

162 c⁄° *
__sh‹t›ts
),

163 
__posix_gë›t
);

165 
__posix_gë›t
 (
___¨gc
, *c⁄° *
___¨gv
,

166 c⁄° *
__sh‹t›ts
Ë
__THROW
;

167 
	#gë›t
 
__posix_gë›t


	)

171 
gë›t
 ();

174 #i‚de‡
__√ed_gë›t


175 
gë›t_l⁄g
 (
___¨gc
, *c⁄° *
___¨gv
,

176 c⁄° *
__sh‹t›ts
,

177 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

178 
__THROW
;

179 
gë›t_l⁄g_⁄ly
 (
___¨gc
, *c⁄° *
___¨gv
,

180 c⁄° *
__sh‹t›ts
,

181 c⁄° 
›ti⁄
 *
__l⁄g›ts
, *
__l⁄göd
)

182 
__THROW
;

186 #ifdef 
__˝lu•lus


191 #unde‡
__√ed_gë›t


	@/usr/include/libio.h

29 #i‚de‡
_IO_STDIO_H


30 
	#_IO_STDIO_H


	)

32 
	~<_G_c⁄fig.h
>

34 
	#_IO_pos_t
 
_G_Âos_t


	)

35 
	#_IO_Âos_t
 
_G_Âos_t


	)

36 
	#_IO_Âos64_t
 
_G_Âos64_t


	)

37 
	#_IO_size_t
 
_G_size_t


	)

38 
	#_IO_ssize_t
 
_G_ssize_t


	)

39 
	#_IO_off_t
 
_G_off_t


	)

40 
	#_IO_off64_t
 
_G_off64_t


	)

41 
	#_IO_pid_t
 
_G_pid_t


	)

42 
	#_IO_uid_t
 
_G_uid_t


	)

43 
	#_IO_ic⁄v_t
 
_G_ic⁄v_t


	)

44 
	#_IO_HAVE_SYS_WAIT
 
_G_HAVE_SYS_WAIT


	)

45 
	#_IO_HAVE_ST_BLKSIZE
 
_G_HAVE_ST_BLKSIZE


	)

46 
	#_IO_BUFSIZ
 
_G_BUFSIZ


	)

47 
	#_IO_va_li°
 
_G_va_li°


	)

48 
	#_IO_wöt_t
 
_G_wöt_t


	)

50 #ifde‡
_G_NEED_STDARG_H


52 
	#__√ed___va_li°


	)

53 
	~<°d¨g.h
>

54 #ifde‡
__GNUC_VA_LIST


55 #unde‡
_IO_va_li°


56 
	#_IO_va_li°
 
__gnuc_va_li°


	)

60 #i‚de‡
__P


61 #i‡
_G_HAVE_SYS_CDEFS


62 
	~<sys/cdefs.h
>

64 #ifde‡
__STDC__


65 
	#__P
(
p
Ë
	)
p

66 
	#__PMT
(
p
Ë
	)
p

68 
	#__P
(
p
Ë()

	)

69 
	#__PMT
(
p
Ë()

	)

75 #i‚de‡
_PARAMS


76 
	#_PARAMS
(
¥Ÿos
Ë
	`__P
’rŸos)

	)

79 #i‚de‡
__STDC__


81 c⁄°

	)

84 
	#_IO_UNIFIED_JUMPTABLES
 1

	)

85 #i‚de‡
_G_HAVE_PRINTF_FP


86 
	#_IO_USE_DTOA
 1

	)

89 #i‚de‡
EOF


90 
	#EOF
 (-1)

	)

92 #i‚de‡
NULL


93 #i‡
deföed
 
__GNUG__
 && \

94 (
	g__GNUC__
 > 2 || (__GNUC__ =2 && 
__GNUC_MINOR__
 >= 8))

95 
	#NULL
 (
__nuŒ
)

	)

97 #i‡!
deföed
(
__˝lu•lus
)

98 
	#NULL
 ((*)0)

	)

100 
	#NULL
 (0)

	)

105 
	#_IOS_INPUT
 1

	)

106 
	#_IOS_OUTPUT
 2

	)

107 
	#_IOS_ATEND
 4

	)

108 
	#_IOS_APPEND
 8

	)

109 
	#_IOS_TRUNC
 16

	)

110 
	#_IOS_NOCREATE
 32

	)

111 
	#_IOS_NOREPLACE
 64

	)

112 
	#_IOS_BIN
 128

	)

120 
	#_IO_MAGIC
 0xFBAD0000

	)

121 
	#_OLD_STDIO_MAGIC
 0xFABC0000

	)

122 
	#_IO_MAGIC_MASK
 0xFFFF0000

	)

123 
	#_IO_USER_BUF
 1

	)

124 
	#_IO_UNBUFFERED
 2

	)

125 
	#_IO_NO_READS
 4

	)

126 
	#_IO_NO_WRITES
 8

	)

127 
	#_IO_EOF_SEEN
 0x10

	)

128 
	#_IO_ERR_SEEN
 0x20

	)

129 
	#_IO_DELETE_DONT_CLOSE
 0x40

	)

130 
	#_IO_LINKED
 0x80

	)

131 
	#_IO_IN_BACKUP
 0x100

	)

132 
	#_IO_LINE_BUF
 0x200

	)

133 
	#_IO_TIED_PUT_GET
 0x400

	)

134 
	#_IO_CURRENTLY_PUTTING
 0x800

	)

135 
	#_IO_IS_APPENDING
 0x1000

	)

136 
	#_IO_IS_FILEBUF
 0x2000

	)

137 
	#_IO_BAD_SEEN
 0x4000

	)

138 
	#_IO_USER_LOCK
 0x8000

	)

140 
	#_IO_FLAGS2_MMAP
 1

	)

141 
	#_IO_FLAGS2_NOTCANCEL
 2

	)

142 #ifde‡
_LIBC


143 
	#_IO_FLAGS2_FORTIFY
 4

	)

145 
	#_IO_FLAGS2_USER_WBUF
 8

	)

146 #ifde‡
_LIBC


147 
	#_IO_FLAGS2_SCANF_STD
 16

	)

148 
	#_IO_FLAGS2_NOCLOSE
 32

	)

149 
	#_IO_FLAGS2_CLOEXEC
 64

	)

153 
	#_IO_SKIPWS
 01

	)

154 
	#_IO_LEFT
 02

	)

155 
	#_IO_RIGHT
 04

	)

156 
	#_IO_INTERNAL
 010

	)

157 
	#_IO_DEC
 020

	)

158 
	#_IO_OCT
 040

	)

159 
	#_IO_HEX
 0100

	)

160 
	#_IO_SHOWBASE
 0200

	)

161 
	#_IO_SHOWPOINT
 0400

	)

162 
	#_IO_UPPERCASE
 01000

	)

163 
	#_IO_SHOWPOS
 02000

	)

164 
	#_IO_SCIENTIFIC
 04000

	)

165 
	#_IO_FIXED
 010000

	)

166 
	#_IO_UNITBUF
 020000

	)

167 
	#_IO_STDIO
 040000

	)

168 
	#_IO_DONT_CLOSE
 0100000

	)

169 
	#_IO_BOOLALPHA
 0200000

	)

172 
_IO_jump_t
; 
	g_IO_FILE
;

175 #ifde‡
_IO_MTSAFE_IO


176 #i‡
deföed
 
__GLIBC__
 && __GLIBC__ >= 2

177 
	~<bôs/°dio-lock.h
>

182 
	t_IO_lock_t
;

188 
	s_IO_m¨kî
 {

189 
_IO_m¨kî
 *
	m_√xt
;

190 
_IO_FILE
 *
	m_sbuf
;

194 
	m_pos
;

196 
£t_°ªampos
(
°ªampos
 
•
Ë{ 
	m_•os
 = sp; }

197 
£t_off£t
(
off£t
Ë{ 
	m_pos
 = off£t; 
	m_•os
 = (
°ªampos
)(-2); }

198 
	mpublic
:

199 
°ªamm¨kî
(
°ªambuf
 *
sb
);

200 ~
°ªamm¨kî
();

201 
ßvög
(Ë{  
	m_•os
 == -2; }

202 
dñè
(
°ªamm¨kî
&);

203 
dñè
();

208 
	e__codecvt_ªsu…


210 
	m__codecvt_ok
,

211 
	m__codecvt_∑πül
,

212 
	m__codecvt_îr‹
,

213 
	m__codecvt_noc⁄v


216 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


219 
	s_IO_codecvt


221 (*
	m__codecvt_de°r
Ë(
	m_IO_codecvt
 *);

222 
__codecvt_ªsu…
 (*
__codecvt_do_out
Ë(
	m_IO_codecvt
 *,

223 
	m__mb°©e_t
 *,

224 c⁄° 
	mwch¨_t
 *,

225 c⁄° 
	mwch¨_t
 *,

226 c⁄° 
	mwch¨_t
 **, *,

228 
__codecvt_ªsu…
 (*
__codecvt_do_unshi·
Ë(
	m_IO_codecvt
 *,

229 
	m__mb°©e_t
 *, *,

231 
__codecvt_ªsu…
 (*
__codecvt_do_ö
Ë(
	m_IO_codecvt
 *,

232 
	m__mb°©e_t
 *,

234 c⁄° **, 
	mwch¨_t
 *,

235 
	mwch¨_t
 *, wchar_t **);

236 (*
	m__codecvt_do_ícodög
Ë(
	m_IO_codecvt
 *);

237 (*
	m__codecvt_do_Æways_noc⁄v
Ë(
	m_IO_codecvt
 *);

238 (*
	m__codecvt_do_Àngth
Ë(
	m_IO_codecvt
 *, 
	m__mb°©e_t
 *,

239 c⁄° *, c⁄° *, 
	m_IO_size_t
);

240 (*
	m__codecvt_do_max_Àngth
Ë(
	m_IO_codecvt
 *);

242 
_IO_ic⁄v_t
 
	m__cd_ö
;

243 
_IO_ic⁄v_t
 
	m__cd_out
;

247 
	s_IO_wide_d©a


249 
wch¨_t
 *
	m_IO_ªad_±r
;

250 
wch¨_t
 *
	m_IO_ªad_íd
;

251 
wch¨_t
 *
	m_IO_ªad_ba£
;

252 
wch¨_t
 *
	m_IO_wrôe_ba£
;

253 
wch¨_t
 *
	m_IO_wrôe_±r
;

254 
wch¨_t
 *
	m_IO_wrôe_íd
;

255 
wch¨_t
 *
	m_IO_buf_ba£
;

256 
wch¨_t
 *
	m_IO_buf_íd
;

258 
wch¨_t
 *
	m_IO_ßve_ba£
;

259 
wch¨_t
 *
	m_IO_backup_ba£
;

261 
wch¨_t
 *
	m_IO_ßve_íd
;

263 
__mb°©e_t
 
	m_IO_°©e
;

264 
__mb°©e_t
 
	m_IO_œ°_°©e
;

265 
_IO_codecvt
 
	m_codecvt
;

267 
wch¨_t
 
	m_sh‹tbuf
[1];

269 c⁄° 
_IO_jump_t
 *
	m_wide_vèbÀ
;

273 
	s_IO_FILE
 {

274 
	m_Êags
;

275 
	#_IO_fûe_Êags
 
_Êags


	)

279 * 
	m_IO_ªad_±r
;

280 * 
	m_IO_ªad_íd
;

281 * 
	m_IO_ªad_ba£
;

282 * 
	m_IO_wrôe_ba£
;

283 * 
	m_IO_wrôe_±r
;

284 * 
	m_IO_wrôe_íd
;

285 * 
	m_IO_buf_ba£
;

286 * 
	m_IO_buf_íd
;

288 *
	m_IO_ßve_ba£
;

289 *
	m_IO_backup_ba£
;

290 *
	m_IO_ßve_íd
;

292 
_IO_m¨kî
 *
	m_m¨kîs
;

294 
_IO_FILE
 *
	m_chaö
;

296 
	m_fûío
;

298 
	m_blksize
;

300 
	m_Êags2
;

302 
_IO_off_t
 
	m_ﬁd_off£t
;

304 
	#__HAVE_COLUMN


	)

306 
	m_cur_cﬁumn
;

307 sig√d 
	m_vèbÀ_off£t
;

308 
	m_sh‹tbuf
[1];

312 
_IO_lock_t
 *
	m_lock
;

313 #ifde‡
_IO_USE_OLD_IO_FILE


316 
	s_IO_FILE_com∂ëe


318 
_IO_FILE
 
	m_fûe
;

320 #i‡
deföed
 
_G_IO_IO_FILE_VERSION
 && _G_IO_IO_FILE_VERSION == 0x20001

321 
_IO_off64_t
 
	m_off£t
;

322 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


324 
_IO_codecvt
 *
	m_codecvt
;

325 
_IO_wide_d©a
 *
	m_wide_d©a
;

326 
_IO_FILE
 *
	m_‰ìªs_li°
;

327 *
	m_‰ìªs_buf
;

328 
size_t
 
	m_‰ìªs_size
;

330 *
	m__∑d1
;

331 *
	m__∑d2
;

332 *
	m__∑d3
;

333 *
	m__∑d4
;

334 
size_t
 
	m__∑d5
;

336 
	m_mode
;

338 
	m_unu£d2
[15 *  (Ë- 4 *  (*Ë-  (
size_t
)];

342 #i‚de‡
__˝lu•lus


343 
_IO_FILE
 
	t_IO_FILE
;

346 
	g_IO_FILE_∂us
;

348 
_IO_FILE_∂us
 
_IO_2_1_°dö_
;

349 
_IO_FILE_∂us
 
_IO_2_1_°dout_
;

350 
_IO_FILE_∂us
 
_IO_2_1_°dîr_
;

351 #i‚de‡
_LIBC


352 
	#_IO_°dö
 ((
_IO_FILE
*)(&
_IO_2_1_°dö_
))

	)

353 
	#_IO_°dout
 ((
_IO_FILE
*)(&
_IO_2_1_°dout_
))

	)

354 
	#_IO_°dîr
 ((
_IO_FILE
*)(&
_IO_2_1_°dîr_
))

	)

356 
_IO_FILE
 *
_IO_°dö
 
©åibuã_hiddí
;

357 
_IO_FILE
 *
_IO_°dout
 
©åibuã_hiddí
;

358 
_IO_FILE
 *
_IO_°dîr
 
©åibuã_hiddí
;

366 
__ssize_t
 
	t__io_ªad_‚
 (*
	t__cookõ
, *
	t__buf
, 
	tsize_t
 
	t__nbyãs
);

374 
__ssize_t
 
	t__io_wrôe_‚
 (*
	t__cookõ
, 
	t__c⁄°
 *
	t__buf
,

375 
	tsize_t
 
	t__n
);

383 
	t__io_£ek_‚
 (*
	t__cookõ
, 
	t_IO_off64_t
 *
	t__pos
, 
	t__w
);

386 
	t__io_˛o£_‚
 (*
	t__cookõ
);

389 #ifde‡
_GNU_SOURCE


391 
__io_ªad_‚
 
	tcookõ_ªad_fun˘i⁄_t
;

392 
__io_wrôe_‚
 
	tcookõ_wrôe_fun˘i⁄_t
;

393 
__io_£ek_‚
 
	tcookõ_£ek_fun˘i⁄_t
;

394 
__io_˛o£_‚
 
	tcookõ_˛o£_fun˘i⁄_t
;

399 
__io_ªad_‚
 *
	mªad
;

400 
__io_wrôe_‚
 *
	mwrôe
;

401 
__io_£ek_‚
 *
	m£ek
;

402 
__io_˛o£_‚
 *
	m˛o£
;

403 } 
	t_IO_cookõ_io_fun˘i⁄s_t
;

404 
_IO_cookõ_io_fun˘i⁄s_t
 
	tcookõ_io_fun˘i⁄s_t
;

406 
	g_IO_cookõ_fûe
;

409 
_IO_cookõ_öô
 (
_IO_cookõ_fûe
 *
__cfûe
, 
__ªad_wrôe
,

410 *
__cookõ
, 
_IO_cookõ_io_fun˘i⁄s_t
 
__‚s
);

414 #ifde‡
__˝lu•lus


418 
__undîÊow
 (
_IO_FILE
 *);

419 
__uÊow
 (
_IO_FILE
 *);

420 
__ovîÊow
 (
_IO_FILE
 *, );

421 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


422 
_IO_wöt_t
 
__wundîÊow
 (
_IO_FILE
 *);

423 
_IO_wöt_t
 
__wuÊow
 (
_IO_FILE
 *);

424 
_IO_wöt_t
 
__wovîÊow
 (
_IO_FILE
 *, _IO_wint_t);

427 #i‡ 
__GNUC__
 >= 3

428 
	#_IO_BE
(
ex¥
, 
ªs
Ë
	`__buûtö_ex≥˘
 (”x¥),Ñes)

	)

430 
	#_IO_BE
(
ex¥
, 
ªs
Ë”x¥)

	)

433 
	#_IO_gëc_u∆ocked
(
_Â
) \

434 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

435 ? 
	`__uÊow
 (
_Â
Ë: *(*Ë(_Â)->
_IO_ªad_±r
++)

	)

436 
	#_IO_≥ekc_u∆ocked
(
_Â
) \

437 (
	`_IO_BE
 ((
_Â
)->
_IO_ªad_±r
 >(_Â)->
_IO_ªad_íd
, 0) \

438 && 
	`__undîÊow
 (
_Â
Ë=
EOF
 ? EOF \

439 : *(*Ë(
_Â
)->
_IO_ªad_±r
)

	)

440 
	#_IO_putc_u∆ocked
(
_ch
, 
_Â
) \

441 (
	`_IO_BE
 ((
_Â
)->
_IO_wrôe_±r
 >(_Â)->
_IO_wrôe_íd
, 0) \

442 ? 
	`__ovîÊow
 (
_Â
, (Ë(
_ch
)) \

443 : (Ë(*(
_Â
)->
_IO_wrôe_±r
++ = (
_ch
)))

	)

445 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


446 
	#_IO_gëwc_u∆ocked
(
_Â
) \

447 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

448 || ((
_Â
)->
_wide_d©a
->
_IO_ªad_±r
 \

449 >(
_Â
)->
_wide_d©a
->
_IO_ªad_íd
), 0) \

450 ? 
	`__wuÊow
 (
_Â
Ë: (
_IO_wöt_t
Ë*(_Â)->
_wide_d©a
->
_IO_ªad_±r
++)

	)

451 
	#_IO_putwc_u∆ocked
(
_wch
, 
_Â
) \

452 (
	`_IO_BE
 ((
_Â
)->
_wide_d©a
 =
NULL
 \

453 || ((
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
 \

454 >(
_Â
)->
_wide_d©a
->
_IO_wrôe_íd
), 0) \

455 ? 
	`__wovîÊow
 (
_Â
, 
_wch
) \

456 : (
_IO_wöt_t
Ë(*(
_Â
)->
_wide_d©a
->
_IO_wrôe_±r
++ = (
_wch
)))

	)

459 
	#_IO_„of_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_EOF_SEEN
Ë!0)

	)

460 
	#_IO_„º‹_u∆ocked
(
__Â
Ë(((__Â)->
_Êags
 & 
_IO_ERR_SEEN
Ë!0)

	)

462 
_IO_gëc
 (
_IO_FILE
 *
__Â
);

463 
_IO_putc
 (
__c
, 
_IO_FILE
 *
__Â
);

464 
_IO_„of
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

465 
_IO_„º‹
 (
_IO_FILE
 *
__Â
Ë
__THROW
;

467 
_IO_≥ekc_locked
 (
_IO_FILE
 *
__Â
);

470 
	#_IO_PENDING_OUTPUT_COUNT
(
_Â
) \

471 ((
_Â
)->
_IO_wrôe_±r
 - (_Â)->
_IO_wrôe_ba£
)

	)

473 
_IO_Êockfûe
 (
_IO_FILE
 *Ë
__THROW
;

474 
_IO_fu∆ockfûe
 (
_IO_FILE
 *Ë
__THROW
;

475 
_IO_·rylockfûe
 (
_IO_FILE
 *Ë
__THROW
;

477 #ifde‡
_IO_MTSAFE_IO


478 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_locked
 (_Â)

	)

479 
	#_IO_Êockfûe
(
_Â
) \

480 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_Êockfûe
 (_Â)

	)

481 
	#_IO_fu∆ockfûe
(
_Â
) \

482 i‡(((
_Â
)->
_Êags
 & 
_IO_USER_LOCK
Ë=0Ë
	`_IO_fu∆ockfûe
 (_Â)

	)

484 
	#_IO_≥ekc
(
_Â
Ë
	`_IO_≥ekc_u∆ocked
 (_Â)

	)

485 
	#_IO_Êockfûe
(
_Â
Ë

	)

486 
	#_IO_fu∆ockfûe
(
_Â
Ë

	)

487 
	#_IO_·rylockfûe
(
_Â
Ë

	)

488 
	#_IO_˛ónup_ªgi⁄_°¨t
(
_f˘
, 
_Â
Ë

	)

489 
	#_IO_˛ónup_ªgi⁄_íd
(
_Doô
Ë

	)

492 
_IO_vfsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, const * __restrict,

493 
_IO_va_li°
, *
__ª°ri˘
);

494 
_IO_vÂrötf
 (
_IO_FILE
 *
__ª°ri˘
, const *__restrict,

495 
_IO_va_li°
);

496 
_IO_ssize_t
 
_IO_∑dn
 (
_IO_FILE
 *, , _IO_ssize_t);

497 
_IO_size_t
 
_IO_sgën
 (
_IO_FILE
 *, *, _IO_size_t);

499 
_IO_off64_t
 
_IO_£ekoff
 (
_IO_FILE
 *, _IO_off64_t, , );

500 
_IO_off64_t
 
_IO_£ekpos
 (
_IO_FILE
 *, _IO_off64_t, );

502 
_IO_‰ì_backup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

504 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


505 
_IO_wöt_t
 
_IO_gëwc
 (
_IO_FILE
 *
__Â
);

506 
_IO_wöt_t
 
_IO_putwc
 (
wch¨_t
 
__wc
, 
_IO_FILE
 *
__Â
);

507 
_IO_fwide
 (
_IO_FILE
 *
__Â
, 
__mode
Ë
__THROW
;

508 #i‡
__GNUC__
 >= 2

511 #i‡
deföed
 
_LIBC
 && deföed 
SHARED


512 
	~<shlib-com∑t.h
>

513 #i‡
SHLIB_COMPAT
 (
libc
, 
GLIBC_2_0
, 
GLIBC_2_1
)

514 
	#_IO_fwide_maybe_öcom∑tibÀ
 \

515 (
	`__buûtö_ex≥˘
 (&
_IO_°dö_u£d
 =
NULL
, 0))

	)

516 c⁄° 
_IO_°dö_u£d
;

517 
wók_exã∫
 (
_IO_°dö_u£d
);

520 #i‚de‡
_IO_fwide_maybe_öcom∑tibÀ


521 
	#_IO_fwide_maybe_öcom∑tibÀ
 (0)

	)

525 
	#_IO_fwide
(
__Â
, 
__mode
) \

526 ({ 
__ªsu…
 = (
__mode
); \

527 i‡(
__ªsu…
 < 0 && ! 
_IO_fwide_maybe_öcom∑tibÀ
) \

529 i‡((
__Â
)->
_mode
 == 0) \

531 (
__Â
)->
_mode
 = -1; \

532 
__ªsu…
 = (
__Â
)->
_mode
; \

534 i‡(
	`__buûtö_c⁄°™t_p
 (
__mode
) && (__mode) == 0) \

535 
__ªsu…
 = 
_IO_fwide_maybe_öcom∑tibÀ
 ? -1 : (
__Â
)->
_mode
; \

537 
__ªsu…
 = 
	`_IO_fwide
 (
__Â
, __result); \

538 
__ªsu…
; })

	)

541 
_IO_vfwsˇnf
 (
_IO_FILE
 * 
__ª°ri˘
, c⁄° 
wch¨_t
 * __restrict,

542 
_IO_va_li°
, *
__ª°ri˘
);

543 
_IO_vfw¥ötf
 (
_IO_FILE
 *
__ª°ri˘
, c⁄° 
wch¨_t
 *__restrict,

544 
_IO_va_li°
);

545 
_IO_ssize_t
 
_IO_w∑dn
 (
_IO_FILE
 *, 
wöt_t
, _IO_ssize_t);

546 
_IO_‰ì_wbackup_¨ó
 (
_IO_FILE
 *Ë
__THROW
;

549 #ifde‡
__LDBL_COMPAT


550 
	~<bôs/libio-ldbl.h
>

553 #ifde‡
__˝lu•lus


	@/usr/include/linux/sysctl.h

22 #i‚de‡
_LINUX_SYSCTL_H


23 
	#_LINUX_SYSCTL_H


	)

25 
	~<löux/kî√l.h
>

26 
	~<löux/ty≥s.h
>

29 
	gcom∂ëi⁄
;

31 
	#CTL_MAXNAME
 10

	)

36 
	s__sys˘l_¨gs
 {

37 *
	m«me
;

38 
	m∆í
;

39 *
	mﬁdvÆ
;

40 
size_t
 *
	mﬁdÀ≈
;

41 *
	m√wvÆ
;

42 
size_t
 
	m√wÀn
;

43 
	m__unu£d
[4];

52 
	mCTL_KERN
=1,

53 
	mCTL_VM
=2,

54 
	mCTL_NET
=3,

55 
	mCTL_PROC
=4,

56 
	mCTL_FS
=5,

57 
	mCTL_DEBUG
=6,

58 
	mCTL_DEV
=7,

59 
	mCTL_BUS
=8,

60 
	mCTL_ABI
=9,

61 
	mCTL_CPU
=10,

62 
	mCTL_ARLAN
=254,

63 
	mCTL_S390DBF
=5677,

64 
	mCTL_SUNRPC
=7249,

65 
	mCTL_PM
=9899,

66 
	mCTL_FRV
=9898,

72 
	mCTL_BUS_ISA
=1

78 
	mINOTIFY_MAX_USER_INSTANCES
=1,

79 
	mINOTIFY_MAX_USER_WATCHES
=2,

80 
	mINOTIFY_MAX_QUEUED_EVENTS
=3

86 
	mKERN_OSTYPE
=1,

87 
	mKERN_OSRELEASE
=2,

88 
	mKERN_OSREV
=3,

89 
	mKERN_VERSION
=4,

90 
	mKERN_SECUREMASK
=5,

91 
	mKERN_PROF
=6,

92 
	mKERN_NODENAME
=7,

93 
	mKERN_DOMAINNAME
=8,

95 
	mKERN_PANIC
=15,

96 
	mKERN_REALROOTDEV
=16,

98 
	mKERN_SPARC_REBOOT
=21,

99 
	mKERN_CTLALTDEL
=22,

100 
	mKERN_PRINTK
=23,

101 
	mKERN_NAMETRANS
=24,

102 
	mKERN_PPC_HTABRECLAIM
=25,

103 
	mKERN_PPC_ZEROPAGED
=26,

104 
	mKERN_PPC_POWERSAVE_NAP
=27,

105 
	mKERN_MODPROBE
=28,

106 
	mKERN_SG_BIG_BUFF
=29,

107 
	mKERN_ACCT
=30,

108 
	mKERN_PPC_L2CR
=31,

110 
	mKERN_RTSIGNR
=32,

111 
	mKERN_RTSIGMAX
=33,

113 
	mKERN_SHMMAX
=34,

114 
	mKERN_MSGMAX
=35,

115 
	mKERN_MSGMNB
=36,

116 
	mKERN_MSGPOOL
=37,

117 
	mKERN_SYSRQ
=38,

118 
	mKERN_MAX_THREADS
=39,

119 
	mKERN_RANDOM
=40,

120 
	mKERN_SHMALL
=41,

121 
	mKERN_MSGMNI
=42,

122 
	mKERN_SEM
=43,

123 
	mKERN_SPARC_STOP_A
=44,

124 
	mKERN_SHMMNI
=45,

125 
	mKERN_OVERFLOWUID
=46,

126 
	mKERN_OVERFLOWGID
=47,

127 
	mKERN_SHMPATH
=48,

128 
	mKERN_HOTPLUG
=49,

129 
	mKERN_IEEE_EMULATION_WARNINGS
=50,

130 
	mKERN_S390_USER_DEBUG_LOGGING
=51,

131 
	mKERN_CORE_USES_PID
=52,

132 
	mKERN_TAINTED
=53,

133 
	mKERN_CADPID
=54,

134 
	mKERN_PIDMAX
=55,

135 
	mKERN_CORE_PATTERN
=56,

136 
	mKERN_PANIC_ON_OOPS
=57,

137 
	mKERN_HPPA_PWRSW
=58,

138 
	mKERN_HPPA_UNALIGNED
=59,

139 
	mKERN_PRINTK_RATELIMIT
=60,

140 
	mKERN_PRINTK_RATELIMIT_BURST
=61,

141 
	mKERN_PTY
=62,

142 
	mKERN_NGROUPS_MAX
=63,

143 
	mKERN_SPARC_SCONS_PWROFF
=64,

144 
	mKERN_HZ_TIMER
=65,

145 
	mKERN_UNKNOWN_NMI_PANIC
=66,

146 
	mKERN_BOOTLOADER_TYPE
=67,

147 
	mKERN_RANDOMIZE
=68,

148 
	mKERN_SETUID_DUMPABLE
=69,

149 
	mKERN_SPIN_RETRY
=70,

150 
	mKERN_ACPI_VIDEO_FLAGS
=71,

151 
	mKERN_IA64_UNALIGNED
=72,

152 
	mKERN_COMPAT_LOG
=73,

153 
	mKERN_MAX_LOCK_DEPTH
=74,

154 
	mKERN_NMI_WATCHDOG
=75,

155 
	mKERN_PANIC_ON_NMI
=76,

163 
	mVM_UNUSED1
=1,

164 
	mVM_UNUSED2
=2,

165 
	mVM_UNUSED3
=3,

166 
	mVM_UNUSED4
=4,

167 
	mVM_OVERCOMMIT_MEMORY
=5,

168 
	mVM_UNUSED5
=6,

169 
	mVM_UNUSED7
=7,

170 
	mVM_UNUSED8
=8,

171 
	mVM_UNUSED9
=9,

172 
	mVM_PAGE_CLUSTER
=10,

173 
	mVM_DIRTY_BACKGROUND
=11,

174 
	mVM_DIRTY_RATIO
=12,

175 
	mVM_DIRTY_WB_CS
=13,

176 
	mVM_DIRTY_EXPIRE_CS
=14,

177 
	mVM_NR_PDFLUSH_THREADS
=15,

178 
	mVM_OVERCOMMIT_RATIO
=16,

179 
	mVM_PAGEBUF
=17,

180 
	mVM_HUGETLB_PAGES
=18,

181 
	mVM_SWAPPINESS
=19,

182 
	mVM_LOWMEM_RESERVE_RATIO
=20,

183 
	mVM_MIN_FREE_KBYTES
=21,

184 
	mVM_MAX_MAP_COUNT
=22,

185 
	mVM_LAPTOP_MODE
=23,

186 
	mVM_BLOCK_DUMP
=24,

187 
	mVM_HUGETLB_GROUP
=25,

188 
	mVM_VFS_CACHE_PRESSURE
=26,

189 
	mVM_LEGACY_VA_LAYOUT
=27,

190 
	mVM_SWAP_TOKEN_TIMEOUT
=28,

191 
	mVM_DROP_PAGECACHE
=29,

192 
	mVM_PERCPU_PAGELIST_FRACTION
=30,

193 
	mVM_ZONE_RECLAIM_MODE
=31,

194 
	mVM_MIN_UNMAPPED
=32,

195 
	mVM_PANIC_ON_OOM
=33,

196 
	mVM_VDSO_ENABLED
=34,

197 
	mVM_MIN_SLAB
=35,

204 
	mNET_CORE
=1,

205 
	mNET_ETHER
=2,

206 
	mNET_802
=3,

207 
	mNET_UNIX
=4,

208 
	mNET_IPV4
=5,

209 
	mNET_IPX
=6,

210 
	mNET_ATALK
=7,

211 
	mNET_NETROM
=8,

212 
	mNET_AX25
=9,

213 
	mNET_BRIDGE
=10,

214 
	mNET_ROSE
=11,

215 
	mNET_IPV6
=12,

216 
	mNET_X25
=13,

217 
	mNET_TR
=14,

218 
	mNET_DECNET
=15,

219 
	mNET_ECONET
=16,

220 
	mNET_SCTP
=17,

221 
	mNET_LLC
=18,

222 
	mNET_NETFILTER
=19,

223 
	mNET_DCCP
=20,

224 
	mNET_IRDA
=412,

230 
	mRANDOM_POOLSIZE
=1,

231 
	mRANDOM_ENTROPY_COUNT
=2,

232 
	mRANDOM_READ_THRESH
=3,

233 
	mRANDOM_WRITE_THRESH
=4,

234 
	mRANDOM_BOOT_ID
=5,

235 
	mRANDOM_UUID
=6

241 
	mPTY_MAX
=1,

242 
	mPTY_NR
=2

248 
	mBUS_ISA_MEM_BASE
=1,

249 
	mBUS_ISA_PORT_BASE
=2,

250 
	mBUS_ISA_PORT_SHIFT
=3

256 
	mNET_CORE_WMEM_MAX
=1,

257 
	mNET_CORE_RMEM_MAX
=2,

258 
	mNET_CORE_WMEM_DEFAULT
=3,

259 
	mNET_CORE_RMEM_DEFAULT
=4,

261 
	mNET_CORE_MAX_BACKLOG
=6,

262 
	mNET_CORE_FASTROUTE
=7,

263 
	mNET_CORE_MSG_COST
=8,

264 
	mNET_CORE_MSG_BURST
=9,

265 
	mNET_CORE_OPTMEM_MAX
=10,

266 
	mNET_CORE_HOT_LIST_LENGTH
=11,

267 
	mNET_CORE_DIVERT_VERSION
=12,

268 
	mNET_CORE_NO_CONG_THRESH
=13,

269 
	mNET_CORE_NO_CONG
=14,

270 
	mNET_CORE_LO_CONG
=15,

271 
	mNET_CORE_MOD_CONG
=16,

272 
	mNET_CORE_DEV_WEIGHT
=17,

273 
	mNET_CORE_SOMAXCONN
=18,

274 
	mNET_CORE_BUDGET
=19,

275 
	mNET_CORE_AEVENT_ETIME
=20,

276 
	mNET_CORE_AEVENT_RSEQTH
=21,

277 
	mNET_CORE_WARNINGS
=22,

288 
	mNET_UNIX_DESTROY_DELAY
=1,

289 
	mNET_UNIX_DELETE_DELAY
=2,

290 
	mNET_UNIX_MAX_DGRAM_QLEN
=3,

296 
	mNET_NF_CONNTRACK_MAX
=1,

297 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_SYN_SENT
=2,

298 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_SYN_RECV
=3,

299 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_ESTABLISHED
=4,

300 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_FIN_WAIT
=5,

301 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_CLOSE_WAIT
=6,

302 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_LAST_ACK
=7,

303 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_TIME_WAIT
=8,

304 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_CLOSE
=9,

305 
	mNET_NF_CONNTRACK_UDP_TIMEOUT
=10,

306 
	mNET_NF_CONNTRACK_UDP_TIMEOUT_STREAM
=11,

307 
	mNET_NF_CONNTRACK_ICMP_TIMEOUT
=12,

308 
	mNET_NF_CONNTRACK_GENERIC_TIMEOUT
=13,

309 
	mNET_NF_CONNTRACK_BUCKETS
=14,

310 
	mNET_NF_CONNTRACK_LOG_INVALID
=15,

311 
	mNET_NF_CONNTRACK_TCP_TIMEOUT_MAX_RETRANS
=16,

312 
	mNET_NF_CONNTRACK_TCP_LOOSE
=17,

313 
	mNET_NF_CONNTRACK_TCP_BE_LIBERAL
=18,

314 
	mNET_NF_CONNTRACK_TCP_MAX_RETRANS
=19,

315 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_CLOSED
=20,

316 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_WAIT
=21,

317 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_ECHOED
=22,

318 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_ESTABLISHED
=23,

319 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_SENT
=24,

320 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_RECD
=25,

321 
	mNET_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_ACK_SENT
=26,

322 
	mNET_NF_CONNTRACK_COUNT
=27,

323 
	mNET_NF_CONNTRACK_ICMPV6_TIMEOUT
=28,

324 
	mNET_NF_CONNTRACK_FRAG6_TIMEOUT
=29,

325 
	mNET_NF_CONNTRACK_FRAG6_LOW_THRESH
=30,

326 
	mNET_NF_CONNTRACK_FRAG6_HIGH_THRESH
=31,

327 
	mNET_NF_CONNTRACK_CHECKSUM
=32,

334 
	mNET_IPV4_FORWARD
=8,

335 
	mNET_IPV4_DYNADDR
=9,

337 
	mNET_IPV4_CONF
=16,

338 
	mNET_IPV4_NEIGH
=17,

339 
	mNET_IPV4_ROUTE
=18,

340 
	mNET_IPV4_FIB_HASH
=19,

341 
	mNET_IPV4_NETFILTER
=20,

343 
	mNET_IPV4_TCP_TIMESTAMPS
=33,

344 
	mNET_IPV4_TCP_WINDOW_SCALING
=34,

345 
	mNET_IPV4_TCP_SACK
=35,

346 
	mNET_IPV4_TCP_RETRANS_COLLAPSE
=36,

347 
	mNET_IPV4_DEFAULT_TTL
=37,

348 
	mNET_IPV4_AUTOCONFIG
=38,

349 
	mNET_IPV4_NO_PMTU_DISC
=39,

350 
	mNET_IPV4_TCP_SYN_RETRIES
=40,

351 
	mNET_IPV4_IPFRAG_HIGH_THRESH
=41,

352 
	mNET_IPV4_IPFRAG_LOW_THRESH
=42,

353 
	mNET_IPV4_IPFRAG_TIME
=43,

354 
	mNET_IPV4_TCP_MAX_KA_PROBES
=44,

355 
	mNET_IPV4_TCP_KEEPALIVE_TIME
=45,

356 
	mNET_IPV4_TCP_KEEPALIVE_PROBES
=46,

357 
	mNET_IPV4_TCP_RETRIES1
=47,

358 
	mNET_IPV4_TCP_RETRIES2
=48,

359 
	mNET_IPV4_TCP_FIN_TIMEOUT
=49,

360 
	mNET_IPV4_IP_MASQ_DEBUG
=50,

361 
	mNET_TCP_SYNCOOKIES
=51,

362 
	mNET_TCP_STDURG
=52,

363 
	mNET_TCP_RFC1337
=53,

364 
	mNET_TCP_SYN_TAILDROP
=54,

365 
	mNET_TCP_MAX_SYN_BACKLOG
=55,

366 
	mNET_IPV4_LOCAL_PORT_RANGE
=56,

367 
	mNET_IPV4_ICMP_ECHO_IGNORE_ALL
=57,

368 
	mNET_IPV4_ICMP_ECHO_IGNORE_BROADCASTS
=58,

369 
	mNET_IPV4_ICMP_SOURCEQUENCH_RATE
=59,

370 
	mNET_IPV4_ICMP_DESTUNREACH_RATE
=60,

371 
	mNET_IPV4_ICMP_TIMEEXCEED_RATE
=61,

372 
	mNET_IPV4_ICMP_PARAMPROB_RATE
=62,

373 
	mNET_IPV4_ICMP_ECHOREPLY_RATE
=63,

374 
	mNET_IPV4_ICMP_IGNORE_BOGUS_ERROR_RESPONSES
=64,

375 
	mNET_IPV4_IGMP_MAX_MEMBERSHIPS
=65,

376 
	mNET_TCP_TW_RECYCLE
=66,

377 
	mNET_IPV4_ALWAYS_DEFRAG
=67,

378 
	mNET_IPV4_TCP_KEEPALIVE_INTVL
=68,

379 
	mNET_IPV4_INET_PEER_THRESHOLD
=69,

380 
	mNET_IPV4_INET_PEER_MINTTL
=70,

381 
	mNET_IPV4_INET_PEER_MAXTTL
=71,

382 
	mNET_IPV4_INET_PEER_GC_MINTIME
=72,

383 
	mNET_IPV4_INET_PEER_GC_MAXTIME
=73,

384 
	mNET_TCP_ORPHAN_RETRIES
=74,

385 
	mNET_TCP_ABORT_ON_OVERFLOW
=75,

386 
	mNET_TCP_SYNACK_RETRIES
=76,

387 
	mNET_TCP_MAX_ORPHANS
=77,

388 
	mNET_TCP_MAX_TW_BUCKETS
=78,

389 
	mNET_TCP_FACK
=79,

390 
	mNET_TCP_REORDERING
=80,

391 
	mNET_TCP_ECN
=81,

392 
	mNET_TCP_DSACK
=82,

393 
	mNET_TCP_MEM
=83,

394 
	mNET_TCP_WMEM
=84,

395 
	mNET_TCP_RMEM
=85,

396 
	mNET_TCP_APP_WIN
=86,

397 
	mNET_TCP_ADV_WIN_SCALE
=87,

398 
	mNET_IPV4_NONLOCAL_BIND
=88,

399 
	mNET_IPV4_ICMP_RATELIMIT
=89,

400 
	mNET_IPV4_ICMP_RATEMASK
=90,

401 
	mNET_TCP_TW_REUSE
=91,

402 
	mNET_TCP_FRTO
=92,

403 
	mNET_TCP_LOW_LATENCY
=93,

404 
	mNET_IPV4_IPFRAG_SECRET_INTERVAL
=94,

405 
	mNET_IPV4_IGMP_MAX_MSF
=96,

406 
	mNET_TCP_NO_METRICS_SAVE
=97,

407 
	mNET_TCP_DEFAULT_WIN_SCALE
=105,

408 
	mNET_TCP_MODERATE_RCVBUF
=106,

409 
	mNET_TCP_TSO_WIN_DIVISOR
=107,

410 
	mNET_TCP_BIC_BETA
=108,

411 
	mNET_IPV4_ICMP_ERRORS_USE_INBOUND_IFADDR
=109,

412 
	mNET_TCP_CONG_CONTROL
=110,

413 
	mNET_TCP_ABC
=111,

414 
	mNET_IPV4_IPFRAG_MAX_DIST
=112,

415 
	mNET_TCP_MTU_PROBING
=113,

416 
	mNET_TCP_BASE_MSS
=114,

417 
	mNET_IPV4_TCP_WORKAROUND_SIGNED_WINDOWS
=115,

418 
	mNET_TCP_DMA_COPYBREAK
=116,

419 
	mNET_TCP_SLOW_START_AFTER_IDLE
=117,

420 
	mNET_CIPSOV4_CACHE_ENABLE
=118,

421 
	mNET_CIPSOV4_CACHE_BUCKET_SIZE
=119,

422 
	mNET_CIPSOV4_RBM_OPTFMT
=120,

423 
	mNET_CIPSOV4_RBM_STRICTVALID
=121,

424 
	mNET_TCP_AVAIL_CONG_CONTROL
=122,

425 
	mNET_TCP_ALLOWED_CONG_CONTROL
=123,

426 
	mNET_TCP_MAX_SSTHRESH
=124,

427 
	mNET_TCP_FRTO_RESPONSE
=125,

431 
	mNET_IPV4_ROUTE_FLUSH
=1,

432 
	mNET_IPV4_ROUTE_MIN_DELAY
=2,

433 
	mNET_IPV4_ROUTE_MAX_DELAY
=3,

434 
	mNET_IPV4_ROUTE_GC_THRESH
=4,

435 
	mNET_IPV4_ROUTE_MAX_SIZE
=5,

436 
	mNET_IPV4_ROUTE_GC_MIN_INTERVAL
=6,

437 
	mNET_IPV4_ROUTE_GC_TIMEOUT
=7,

438 
	mNET_IPV4_ROUTE_GC_INTERVAL
=8,

439 
	mNET_IPV4_ROUTE_REDIRECT_LOAD
=9,

440 
	mNET_IPV4_ROUTE_REDIRECT_NUMBER
=10,

441 
	mNET_IPV4_ROUTE_REDIRECT_SILENCE
=11,

442 
	mNET_IPV4_ROUTE_ERROR_COST
=12,

443 
	mNET_IPV4_ROUTE_ERROR_BURST
=13,

444 
	mNET_IPV4_ROUTE_GC_ELASTICITY
=14,

445 
	mNET_IPV4_ROUTE_MTU_EXPIRES
=15,

446 
	mNET_IPV4_ROUTE_MIN_PMTU
=16,

447 
	mNET_IPV4_ROUTE_MIN_ADVMSS
=17,

448 
	mNET_IPV4_ROUTE_SECRET_INTERVAL
=18,

449 
	mNET_IPV4_ROUTE_GC_MIN_INTERVAL_MS
=19,

454 
	mNET_PROTO_CONF_ALL
=-2,

455 
	mNET_PROTO_CONF_DEFAULT
=-3

462 
	mNET_IPV4_CONF_FORWARDING
=1,

463 
	mNET_IPV4_CONF_MC_FORWARDING
=2,

464 
	mNET_IPV4_CONF_PROXY_ARP
=3,

465 
	mNET_IPV4_CONF_ACCEPT_REDIRECTS
=4,

466 
	mNET_IPV4_CONF_SECURE_REDIRECTS
=5,

467 
	mNET_IPV4_CONF_SEND_REDIRECTS
=6,

468 
	mNET_IPV4_CONF_SHARED_MEDIA
=7,

469 
	mNET_IPV4_CONF_RP_FILTER
=8,

470 
	mNET_IPV4_CONF_ACCEPT_SOURCE_ROUTE
=9,

471 
	mNET_IPV4_CONF_BOOTP_RELAY
=10,

472 
	mNET_IPV4_CONF_LOG_MARTIANS
=11,

473 
	mNET_IPV4_CONF_TAG
=12,

474 
	mNET_IPV4_CONF_ARPFILTER
=13,

475 
	mNET_IPV4_CONF_MEDIUM_ID
=14,

476 
	mNET_IPV4_CONF_NOXFRM
=15,

477 
	mNET_IPV4_CONF_NOPOLICY
=16,

478 
	mNET_IPV4_CONF_FORCE_IGMP_VERSION
=17,

479 
	mNET_IPV4_CONF_ARP_ANNOUNCE
=18,

480 
	mNET_IPV4_CONF_ARP_IGNORE
=19,

481 
	mNET_IPV4_CONF_PROMOTE_SECONDARIES
=20,

482 
	mNET_IPV4_CONF_ARP_ACCEPT
=21,

483 
	mNET_IPV4_CONF_ARP_NOTIFY
=22,

489 
	mNET_IPV4_NF_CONNTRACK_MAX
=1,

490 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_SYN_SENT
=2,

491 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_SYN_RECV
=3,

492 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_ESTABLISHED
=4,

493 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_FIN_WAIT
=5,

494 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_CLOSE_WAIT
=6,

495 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_LAST_ACK
=7,

496 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_TIME_WAIT
=8,

497 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_CLOSE
=9,

498 
	mNET_IPV4_NF_CONNTRACK_UDP_TIMEOUT
=10,

499 
	mNET_IPV4_NF_CONNTRACK_UDP_TIMEOUT_STREAM
=11,

500 
	mNET_IPV4_NF_CONNTRACK_ICMP_TIMEOUT
=12,

501 
	mNET_IPV4_NF_CONNTRACK_GENERIC_TIMEOUT
=13,

502 
	mNET_IPV4_NF_CONNTRACK_BUCKETS
=14,

503 
	mNET_IPV4_NF_CONNTRACK_LOG_INVALID
=15,

504 
	mNET_IPV4_NF_CONNTRACK_TCP_TIMEOUT_MAX_RETRANS
=16,

505 
	mNET_IPV4_NF_CONNTRACK_TCP_LOOSE
=17,

506 
	mNET_IPV4_NF_CONNTRACK_TCP_BE_LIBERAL
=18,

507 
	mNET_IPV4_NF_CONNTRACK_TCP_MAX_RETRANS
=19,

508 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_CLOSED
=20,

509 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_WAIT
=21,

510 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_COOKIE_ECHOED
=22,

511 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_ESTABLISHED
=23,

512 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_SENT
=24,

513 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_RECD
=25,

514 
	mNET_IPV4_NF_CONNTRACK_SCTP_TIMEOUT_SHUTDOWN_ACK_SENT
=26,

515 
	mNET_IPV4_NF_CONNTRACK_COUNT
=27,

516 
	mNET_IPV4_NF_CONNTRACK_CHECKSUM
=28,

521 
	mNET_IPV6_CONF
=16,

522 
	mNET_IPV6_NEIGH
=17,

523 
	mNET_IPV6_ROUTE
=18,

524 
	mNET_IPV6_ICMP
=19,

525 
	mNET_IPV6_BINDV6ONLY
=20,

526 
	mNET_IPV6_IP6FRAG_HIGH_THRESH
=21,

527 
	mNET_IPV6_IP6FRAG_LOW_THRESH
=22,

528 
	mNET_IPV6_IP6FRAG_TIME
=23,

529 
	mNET_IPV6_IP6FRAG_SECRET_INTERVAL
=24,

530 
	mNET_IPV6_MLD_MAX_MSF
=25,

534 
	mNET_IPV6_ROUTE_FLUSH
=1,

535 
	mNET_IPV6_ROUTE_GC_THRESH
=2,

536 
	mNET_IPV6_ROUTE_MAX_SIZE
=3,

537 
	mNET_IPV6_ROUTE_GC_MIN_INTERVAL
=4,

538 
	mNET_IPV6_ROUTE_GC_TIMEOUT
=5,

539 
	mNET_IPV6_ROUTE_GC_INTERVAL
=6,

540 
	mNET_IPV6_ROUTE_GC_ELASTICITY
=7,

541 
	mNET_IPV6_ROUTE_MTU_EXPIRES
=8,

542 
	mNET_IPV6_ROUTE_MIN_ADVMSS
=9,

543 
	mNET_IPV6_ROUTE_GC_MIN_INTERVAL_MS
=10

547 
	mNET_IPV6_FORWARDING
=1,

548 
	mNET_IPV6_HOP_LIMIT
=2,

549 
	mNET_IPV6_MTU
=3,

550 
	mNET_IPV6_ACCEPT_RA
=4,

551 
	mNET_IPV6_ACCEPT_REDIRECTS
=5,

552 
	mNET_IPV6_AUTOCONF
=6,

553 
	mNET_IPV6_DAD_TRANSMITS
=7,

554 
	mNET_IPV6_RTR_SOLICITS
=8,

555 
	mNET_IPV6_RTR_SOLICIT_INTERVAL
=9,

556 
	mNET_IPV6_RTR_SOLICIT_DELAY
=10,

557 
	mNET_IPV6_USE_TEMPADDR
=11,

558 
	mNET_IPV6_TEMP_VALID_LFT
=12,

559 
	mNET_IPV6_TEMP_PREFERED_LFT
=13,

560 
	mNET_IPV6_REGEN_MAX_RETRY
=14,

561 
	mNET_IPV6_MAX_DESYNC_FACTOR
=15,

562 
	mNET_IPV6_MAX_ADDRESSES
=16,

563 
	mNET_IPV6_FORCE_MLD_VERSION
=17,

564 
	mNET_IPV6_ACCEPT_RA_DEFRTR
=18,

565 
	mNET_IPV6_ACCEPT_RA_PINFO
=19,

566 
	mNET_IPV6_ACCEPT_RA_RTR_PREF
=20,

567 
	mNET_IPV6_RTR_PROBE_INTERVAL
=21,

568 
	mNET_IPV6_ACCEPT_RA_RT_INFO_MAX_PLEN
=22,

569 
	mNET_IPV6_PROXY_NDP
=23,

570 
	mNET_IPV6_ACCEPT_SOURCE_ROUTE
=25,

571 
	m__NET_IPV6_MAX


576 
	mNET_IPV6_ICMP_RATELIMIT
=1

581 
	mNET_NEIGH_MCAST_SOLICIT
=1,

582 
	mNET_NEIGH_UCAST_SOLICIT
=2,

583 
	mNET_NEIGH_APP_SOLICIT
=3,

584 
	mNET_NEIGH_RETRANS_TIME
=4,

585 
	mNET_NEIGH_REACHABLE_TIME
=5,

586 
	mNET_NEIGH_DELAY_PROBE_TIME
=6,

587 
	mNET_NEIGH_GC_STALE_TIME
=7,

588 
	mNET_NEIGH_UNRES_QLEN
=8,

589 
	mNET_NEIGH_PROXY_QLEN
=9,

590 
	mNET_NEIGH_ANYCAST_DELAY
=10,

591 
	mNET_NEIGH_PROXY_DELAY
=11,

592 
	mNET_NEIGH_LOCKTIME
=12,

593 
	mNET_NEIGH_GC_INTERVAL
=13,

594 
	mNET_NEIGH_GC_THRESH1
=14,

595 
	mNET_NEIGH_GC_THRESH2
=15,

596 
	mNET_NEIGH_GC_THRESH3
=16,

597 
	mNET_NEIGH_RETRANS_TIME_MS
=17,

598 
	mNET_NEIGH_REACHABLE_TIME_MS
=18,

603 
	mNET_DCCP_DEFAULT
=1,

608 
	mNET_IPX_PPROP_BROADCASTING
=1,

609 
	mNET_IPX_FORWARDING
=2

614 
	mNET_LLC2
=1,

615 
	mNET_LLC_STATION
=2,

620 
	mNET_LLC2_TIMEOUT
=1,

625 
	mNET_LLC_STATION_ACK_TIMEOUT
=1,

630 
	mNET_LLC2_ACK_TIMEOUT
=1,

631 
	mNET_LLC2_P_TIMEOUT
=2,

632 
	mNET_LLC2_REJ_TIMEOUT
=3,

633 
	mNET_LLC2_BUSY_TIMEOUT
=4,

638 
	mNET_ATALK_AARP_EXPIRY_TIME
=1,

639 
	mNET_ATALK_AARP_TICK_TIME
=2,

640 
	mNET_ATALK_AARP_RETRANSMIT_LIMIT
=3,

641 
	mNET_ATALK_AARP_RESOLVE_TIME
=4

647 
	mNET_NETROM_DEFAULT_PATH_QUALITY
=1,

648 
	mNET_NETROM_OBSOLESCENCE_COUNT_INITIALISER
=2,

649 
	mNET_NETROM_NETWORK_TTL_INITIALISER
=3,

650 
	mNET_NETROM_TRANSPORT_TIMEOUT
=4,

651 
	mNET_NETROM_TRANSPORT_MAXIMUM_TRIES
=5,

652 
	mNET_NETROM_TRANSPORT_ACKNOWLEDGE_DELAY
=6,

653 
	mNET_NETROM_TRANSPORT_BUSY_DELAY
=7,

654 
	mNET_NETROM_TRANSPORT_REQUESTED_WINDOW_SIZE
=8,

655 
	mNET_NETROM_TRANSPORT_NO_ACTIVITY_TIMEOUT
=9,

656 
	mNET_NETROM_ROUTING_CONTROL
=10,

657 
	mNET_NETROM_LINK_FAILS_COUNT
=11,

658 
	mNET_NETROM_RESET
=12

663 
	mNET_AX25_IP_DEFAULT_MODE
=1,

664 
	mNET_AX25_DEFAULT_MODE
=2,

665 
	mNET_AX25_BACKOFF_TYPE
=3,

666 
	mNET_AX25_CONNECT_MODE
=4,

667 
	mNET_AX25_STANDARD_WINDOW
=5,

668 
	mNET_AX25_EXTENDED_WINDOW
=6,

669 
	mNET_AX25_T1_TIMEOUT
=7,

670 
	mNET_AX25_T2_TIMEOUT
=8,

671 
	mNET_AX25_T3_TIMEOUT
=9,

672 
	mNET_AX25_IDLE_TIMEOUT
=10,

673 
	mNET_AX25_N2
=11,

674 
	mNET_AX25_PACLEN
=12,

675 
	mNET_AX25_PROTOCOL
=13,

676 
	mNET_AX25_DAMA_SLAVE_TIMEOUT
=14

681 
	mNET_ROSE_RESTART_REQUEST_TIMEOUT
=1,

682 
	mNET_ROSE_CALL_REQUEST_TIMEOUT
=2,

683 
	mNET_ROSE_RESET_REQUEST_TIMEOUT
=3,

684 
	mNET_ROSE_CLEAR_REQUEST_TIMEOUT
=4,

685 
	mNET_ROSE_ACK_HOLD_BACK_TIMEOUT
=5,

686 
	mNET_ROSE_ROUTING_CONTROL
=6,

687 
	mNET_ROSE_LINK_FAIL_TIMEOUT
=7,

688 
	mNET_ROSE_MAX_VCS
=8,

689 
	mNET_ROSE_WINDOW_SIZE
=9,

690 
	mNET_ROSE_NO_ACTIVITY_TIMEOUT
=10

695 
	mNET_X25_RESTART_REQUEST_TIMEOUT
=1,

696 
	mNET_X25_CALL_REQUEST_TIMEOUT
=2,

697 
	mNET_X25_RESET_REQUEST_TIMEOUT
=3,

698 
	mNET_X25_CLEAR_REQUEST_TIMEOUT
=4,

699 
	mNET_X25_ACK_HOLD_BACK_TIMEOUT
=5,

700 
	mNET_X25_FORWARD
=6

706 
	mNET_TR_RIF_TIMEOUT
=1

711 
	mNET_DECNET_NODE_TYPE
 = 1,

712 
	mNET_DECNET_NODE_ADDRESS
 = 2,

713 
	mNET_DECNET_NODE_NAME
 = 3,

714 
	mNET_DECNET_DEFAULT_DEVICE
 = 4,

715 
	mNET_DECNET_TIME_WAIT
 = 5,

716 
	mNET_DECNET_DN_COUNT
 = 6,

717 
	mNET_DECNET_DI_COUNT
 = 7,

718 
	mNET_DECNET_DR_COUNT
 = 8,

719 
	mNET_DECNET_DST_GC_INTERVAL
 = 9,

720 
	mNET_DECNET_CONF
 = 10,

721 
	mNET_DECNET_NO_FC_MAX_CWND
 = 11,

722 
	mNET_DECNET_MEM
 = 12,

723 
	mNET_DECNET_RMEM
 = 13,

724 
	mNET_DECNET_WMEM
 = 14,

725 
	mNET_DECNET_DEBUG_LEVEL
 = 255

730 
	mNET_DECNET_CONF_LOOPBACK
 = -2,

731 
	mNET_DECNET_CONF_DDCMP
 = -3,

732 
	mNET_DECNET_CONF_PPP
 = -4,

733 
	mNET_DECNET_CONF_X25
 = -5,

734 
	mNET_DECNET_CONF_GRE
 = -6,

735 
	mNET_DECNET_CONF_ETHER
 = -7

742 
	mNET_DECNET_CONF_DEV_PRIORITY
 = 1,

743 
	mNET_DECNET_CONF_DEV_T1
 = 2,

744 
	mNET_DECNET_CONF_DEV_T2
 = 3,

745 
	mNET_DECNET_CONF_DEV_T3
 = 4,

746 
	mNET_DECNET_CONF_DEV_FORWARDING
 = 5,

747 
	mNET_DECNET_CONF_DEV_BLKSIZE
 = 6,

748 
	mNET_DECNET_CONF_DEV_STATE
 = 7

753 
	mNET_SCTP_RTO_INITIAL
 = 1,

754 
	mNET_SCTP_RTO_MIN
 = 2,

755 
	mNET_SCTP_RTO_MAX
 = 3,

756 
	mNET_SCTP_RTO_ALPHA
 = 4,

757 
	mNET_SCTP_RTO_BETA
 = 5,

758 
	mNET_SCTP_VALID_COOKIE_LIFE
 = 6,

759 
	mNET_SCTP_ASSOCIATION_MAX_RETRANS
 = 7,

760 
	mNET_SCTP_PATH_MAX_RETRANS
 = 8,

761 
	mNET_SCTP_MAX_INIT_RETRANSMITS
 = 9,

762 
	mNET_SCTP_HB_INTERVAL
 = 10,

763 
	mNET_SCTP_PRESERVE_ENABLE
 = 11,

764 
	mNET_SCTP_MAX_BURST
 = 12,

765 
	mNET_SCTP_ADDIP_ENABLE
 = 13,

766 
	mNET_SCTP_PRSCTP_ENABLE
 = 14,

767 
	mNET_SCTP_SNDBUF_POLICY
 = 15,

768 
	mNET_SCTP_SACK_TIMEOUT
 = 16,

769 
	mNET_SCTP_RCVBUF_POLICY
 = 17,

774 
	mNET_BRIDGE_NF_CALL_ARPTABLES
 = 1,

775 
	mNET_BRIDGE_NF_CALL_IPTABLES
 = 2,

776 
	mNET_BRIDGE_NF_CALL_IP6TABLES
 = 3,

777 
	mNET_BRIDGE_NF_FILTER_VLAN_TAGGED
 = 4,

778 
	mNET_BRIDGE_NF_FILTER_PPPOE_TAGGED
 = 5,

783 
	mNET_IRDA_DISCOVERY
=1,

784 
	mNET_IRDA_DEVNAME
=2,

785 
	mNET_IRDA_DEBUG
=3,

786 
	mNET_IRDA_FAST_POLL
=4,

787 
	mNET_IRDA_DISCOVERY_SLOTS
=5,

788 
	mNET_IRDA_DISCOVERY_TIMEOUT
=6,

789 
	mNET_IRDA_SLOT_TIMEOUT
=7,

790 
	mNET_IRDA_MAX_BAUD_RATE
=8,

791 
	mNET_IRDA_MIN_TX_TURN_TIME
=9,

792 
	mNET_IRDA_MAX_TX_DATA_SIZE
=10,

793 
	mNET_IRDA_MAX_TX_WINDOW
=11,

794 
	mNET_IRDA_MAX_NOREPLY_TIME
=12,

795 
	mNET_IRDA_WARN_NOREPLY_TIME
=13,

796 
	mNET_IRDA_LAP_KEEPALIVE_TIME
=14,

803 
	mFS_NRINODE
=1,

804 
	mFS_STATINODE
=2,

805 
	mFS_MAXINODE
=3,

806 
	mFS_NRDQUOT
=4,

807 
	mFS_MAXDQUOT
=5,

808 
	mFS_NRFILE
=6,

809 
	mFS_MAXFILE
=7,

810 
	mFS_DENTRY
=8,

811 
	mFS_NRSUPER
=9,

812 
	mFS_MAXSUPER
=10,

813 
	mFS_OVERFLOWUID
=11,

814 
	mFS_OVERFLOWGID
=12,

815 
	mFS_LEASES
=13,

816 
	mFS_DIR_NOTIFY
=14,

817 
	mFS_LEASE_TIME
=15,

818 
	mFS_DQSTATS
=16,

819 
	mFS_XFS
=17,

820 
	mFS_AIO_NR
=18,

821 
	mFS_AIO_MAX_NR
=19,

822 
	mFS_INOTIFY
=20,

823 
	mFS_OCFS2
=988,

828 
	mFS_DQ_LOOKUPS
 = 1,

829 
	mFS_DQ_DROPS
 = 2,

830 
	mFS_DQ_READS
 = 3,

831 
	mFS_DQ_WRITES
 = 4,

832 
	mFS_DQ_CACHE_HITS
 = 5,

833 
	mFS_DQ_ALLOCATED
 = 6,

834 
	mFS_DQ_FREE
 = 7,

835 
	mFS_DQ_SYNCS
 = 8,

836 
	mFS_DQ_WARNINGS
 = 9,

843 
	mDEV_CDROM
=1,

844 
	mDEV_HWMON
=2,

845 
	mDEV_PARPORT
=3,

846 
	mDEV_RAID
=4,

847 
	mDEV_MAC_HID
=5,

848 
	mDEV_SCSI
=6,

849 
	mDEV_IPMI
=7,

854 
	mDEV_CDROM_INFO
=1,

855 
	mDEV_CDROM_AUTOCLOSE
=2,

856 
	mDEV_CDROM_AUTOEJECT
=3,

857 
	mDEV_CDROM_DEBUG
=4,

858 
	mDEV_CDROM_LOCK
=5,

859 
	mDEV_CDROM_CHECK_MEDIA
=6

864 
	mDEV_PARPORT_DEFAULT
=-3

869 
	mDEV_RAID_SPEED_LIMIT_MIN
=1,

870 
	mDEV_RAID_SPEED_LIMIT_MAX
=2

875 
	mDEV_PARPORT_DEFAULT_TIMESLICE
=1,

876 
	mDEV_PARPORT_DEFAULT_SPINTIME
=2

881 
	mDEV_PARPORT_SPINTIME
=1,

882 
	mDEV_PARPORT_BASE_ADDR
=2,

883 
	mDEV_PARPORT_IRQ
=3,

884 
	mDEV_PARPORT_DMA
=4,

885 
	mDEV_PARPORT_MODES
=5,

886 
	mDEV_PARPORT_DEVICES
=6,

887 
	mDEV_PARPORT_AUTOPROBE
=16

892 
	mDEV_PARPORT_DEVICES_ACTIVE
=-3,

897 
	mDEV_PARPORT_DEVICE_TIMESLICE
=1,

902 
	mDEV_MAC_HID_KEYBOARD_SENDS_LINUX_KEYCODES
=1,

903 
	mDEV_MAC_HID_KEYBOARD_LOCK_KEYCODES
=2,

904 
	mDEV_MAC_HID_MOUSE_BUTTON_EMULATION
=3,

905 
	mDEV_MAC_HID_MOUSE_BUTTON2_KEYCODE
=4,

906 
	mDEV_MAC_HID_MOUSE_BUTTON3_KEYCODE
=5,

907 
	mDEV_MAC_HID_ADB_MOUSE_SENDS_KEYCODES
=6

912 
	mDEV_SCSI_LOGGING_LEVEL
=1,

917 
	mDEV_IPMI_POWEROFF_POWERCYCLE
=1,

923 
	mABI_DEFHANDLER_COFF
=1,

924 
	mABI_DEFHANDLER_ELF
=2,

925 
	mABI_DEFHANDLER_LCALL7
=3,

926 
	mABI_DEFHANDLER_LIBCSO
=4,

927 
	mABI_TRACE
=5,

928 
	mABI_FAKE_UTSNAME
=6,

	@/usr/include/sys/select.h

22 #i‚de‡
_SYS_SELECT_H


23 
	#_SYS_SELECT_H
 1

	)

25 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

31 
	~<bôs/£À˘.h
>

34 
	~<bôs/sig£t.h
>

36 #i‚de‡
__sig£t_t_deföed


37 
	#__sig£t_t_deföed


	)

38 
__sig£t_t
 
	tsig£t_t
;

42 
	#__√ed_time_t


	)

43 
	#__√ed_time•ec


	)

44 
	~<time.h
>

45 
	#__√ed_timevÆ


	)

46 
	~<bôs/time.h
>

48 #i‚de‡
__su£c⁄ds_t_deföed


49 
__su£c⁄ds_t
 
	tsu£c⁄ds_t
;

50 
	#__su£c⁄ds_t_deföed


	)

55 
	t__fd_mask
;

58 #unde‡
__NFDBITS


60 
	#__NFDBITS
 (8 * (Ë (
__fd_mask
))

	)

61 
	#__FD_ELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

62 
	#__FD_MASK
(
d
Ë((
__fd_mask
Ë1 << ((dË% 
__NFDBITS
))

	)

69 #ifde‡
__USE_XOPEN


70 
__fd_mask
 
	mfds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

71 
	#__FDS_BITS
(
£t
Ë((£t)->
fds_bôs
)

	)

73 
__fd_mask
 
	m__fds_bôs
[
__FD_SETSIZE
 / 
__NFDBITS
];

74 
	#__FDS_BITS
(
£t
Ë((£t)->
__fds_bôs
)

	)

76 } 
	tfd_£t
;

79 
	#FD_SETSIZE
 
__FD_SETSIZE


	)

81 #ifde‡
__USE_MISC


83 
__fd_mask
 
	tfd_mask
;

86 
	#NFDBITS
 
__NFDBITS


	)

91 
	#FD_SET
(
fd
, 
fd£ç
Ë
	`__FD_SET
 (fd, fd£ç)

	)

92 
	#FD_CLR
(
fd
, 
fd£ç
Ë
	`__FD_CLR
 (fd, fd£ç)

	)

93 
	#FD_ISSET
(
fd
, 
fd£ç
Ë
	`__FD_ISSET
 (fd, fd£ç)

	)

94 
	#FD_ZERO
(
fd£ç
Ë
	`__FD_ZERO
 (fd£ç)

	)

97 
__BEGIN_DECLS


107 
£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

108 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

109 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

110 
timevÆ
 *
__ª°ri˘
 
__timeout
);

112 #ifde‡
__USE_XOPEN2K


119 
p£À˘
 (
__nfds
, 
fd_£t
 *
__ª°ri˘
 
__ªadfds
,

120 
fd_£t
 *
__ª°ri˘
 
__wrôefds
,

121 
fd_£t
 *
__ª°ri˘
 
__ex˚±fds
,

122 c⁄° 
time•ec
 *
__ª°ri˘
 
__timeout
,

123 c⁄° 
__sig£t_t
 *
__ª°ri˘
 
__sigmask
);

128 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__GNUC__


129 
	~<bôs/£À˘2.h
>

132 
	g__END_DECLS


	@/usr/include/sys/sysmacros.h

21 #i‚de‡
_SYS_SYSMACROS_H


22 
	#_SYS_SYSMACROS_H
 1

	)

24 
	~<„©uªs.h
>

29 #ifde‡
__GLIBC_HAVE_LONG_LONG


30 
__BEGIN_DECLS


32 
__exãnsi⁄__


33 
	$gnu_dev_maj‹
 (
__dev
)

34 
__THROW
 
__©åibuã_c⁄°__
;

35 
__exãnsi⁄__


36 
	$gnu_dev_mö‹
 (
__dev
)

37 
__THROW
 
__©åibuã_c⁄°__
;

38 
__exãnsi⁄__


39 
	$gnu_dev_makedev
 (
__maj‹
,

40 
__mö‹
)

41 
__THROW
 
__©åibuã_c⁄°__
;

43 #i‡
deföed
 
__GNUC__
 && __GNUC__ >2 && deföed 
__USE_EXTERN_INLINES


44 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

45 
	`__NTH
 (
	$gnu_dev_maj‹
 (
__dev
))

47  ((
__dev
 >> 8) & 0xfff) | (() (__dev >> 32) & ~0xfff);

48 
	}
}

50 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

51 
__NTH
 (
	$gnu_dev_mö‹
 (
__dev
))

53  (
__dev
 & 0xff) | (() (__dev >> 12) & ~0xff);

54 
	}
}

56 
__exãnsi⁄__
 
__exã∫_ölöe
 
__©åibuã_c⁄°__
 

57 
__NTH
 (
	$gnu_dev_makedev
 (
__maj‹
, 
__mö‹
))

59  ((
__mö‹
 & 0xffË| ((
__maj‹
 & 0xfff) << 8)

60 | (((Ë(
__mö‹
 & ~0xff)) << 12)

61 | (((Ë(
__maj‹
 & ~0xfff)) << 32));

62 
	}
}

64 
	g__END_DECLS


67 
	#maj‹
(
dev
Ë
	`gnu_dev_maj‹
 (dev)

	)

68 
	#mö‹
(
dev
Ë
	`gnu_dev_mö‹
 (dev)

	)

69 
	#makedev
(
maj
, 
mö
Ë
	`gnu_dev_makedev
 (maj, mö)

	)

	@/usr/include/time.h

23 #i‚def 
_TIME_H


25 #i‡(! 
deföed
 
__√ed_time_t
 && !deföed 
__√ed_˛ock_t
 && \

26 ! 
deföed
 
	g__√ed_time•ec
)

27 
	#_TIME_H
 1

	)

28 
	~<„©uªs.h
>

30 
	g__BEGIN_DECLS


34 #ifdef 
_TIME_H


36 
	#__√ed_size_t


	)

37 
	#__√ed_NULL


	)

38 
	~<°ddef.h
>

42 
	~<bôs/time.h
>

45 #i‡!
deföed
 
__STRICT_ANSI__
 && !deföed 
__USE_XOPEN2K


46 #i‚de‡
CLK_TCK


47 
	#CLK_TCK
 
CLOCKS_PER_SEC


	)

53 #i‡!
deföed
 
__˛ock_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_˛ock_t
)

54 
	#__˛ock_t_deföed
 1

	)

56 
	~<bôs/ty≥s.h
>

58 
__BEGIN_NAMESPACE_STD


60 
__˛ock_t
 
	t˛ock_t
;

61 
	g__END_NAMESPACE_STD


62 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


63 
	$__USING_NAMESPACE_STD
(
˛ock_t
)

67 #unde‡
__√ed_˛ock_t


69 #i‡!
deföed
 
__time_t_deföed
 && (deföed 
_TIME_H
 || deföed 
__√ed_time_t
)

70 
	#__time_t_deföed
 1

	)

72 
	~<bôs/ty≥s.h
>

74 
__BEGIN_NAMESPACE_STD


76 
__time_t
 
	ttime_t
;

77 
__END_NAMESPACE_STD


78 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC
 || deföed 
__USE_SVID


79 
	$__USING_NAMESPACE_STD
(
time_t
)

83 #unde‡
__√ed_time_t


85 #i‡!
deföed
 
__˛ockid_t_deföed
 && \

86 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_˛ockid_t
)

87 
	#__˛ockid_t_deföed
 1

	)

89 
	~<bôs/ty≥s.h
>

92 
__˛ockid_t
 
	t˛ockid_t
;

95 #unde‡
__˛ockid_time_t


97 #i‡!
deföed
 
__timî_t_deföed
 && \

98 ((
deföed
 
_TIME_H
 && deföed 
__USE_POSIX199309
Ë|| deföed 
__√ed_timî_t
)

99 
	#__timî_t_deföed
 1

	)

101 
	~<bôs/ty≥s.h
>

104 
__timî_t
 
	ttimî_t
;

107 #unde‡
__√ed_timî_t


110 #i‡!
deföed
 
__time•ec_deföed
 && \

111 ((
deföed
 
_TIME_H
 && \

112 (
deföed
 
__USE_POSIX199309
 || deföed 
__USE_MISC
)) || \

113 
deföed
 
__√ed_time•ec
)

114 
	#__time•ec_deföed
 1

	)

116 
	~<bôs/ty≥s.h
>

120 
	stime•ec


122 
__time_t
 
tv_£c
;

123 
tv_n£c
;

127 #unde‡
__√ed_time•ec


130 #ifdef 
_TIME_H


131 
__BEGIN_NAMESPACE_STD


133 
	stm


135 
tm_£c
;

136 
tm_mö
;

137 
tm_hour
;

138 
tm_mday
;

139 
tm_m⁄
;

140 
tm_yór
;

141 
tm_wday
;

142 
tm_yday
;

143 
tm_isd°
;

145 #ifdef 
__USE_BSD


146 
tm_gmtoff
;

147 
__c⁄°
 *
tm_z⁄e
;

149 
__tm_gmtoff
;

150 
__c⁄°
 *
__tm_z⁄e
;

153 
__END_NAMESPACE_STD


154 #i‡
deföed
 
__USE_XOPEN
 || deföed 
__USE_POSIX
 || deföed 
__USE_MISC


155 
	$__USING_NAMESPACE_STD
(
tm
)

159 #ifde‡
__USE_POSIX199309


161 
	sôimî•ec


163 
time•ec
 
ô_öãrvÆ
;

164 
time•ec
 
ô_vÆue
;

168 
sigevít
;

172 #ifde‡
__USE_XOPEN2K


173 #i‚de‡
__pid_t_deföed


174 
__pid_t
 
	tpid_t
;

175 
	#__pid_t_deföed


	)

180 
__BEGIN_NAMESPACE_STD


183 
˛ock_t
 
	$˛ock
 (Ë
__THROW
;

186 
time_t
 
	$time
 (
time_t
 *
__timî
Ë
__THROW
;

189 
	$dif·ime
 (
time_t
 
__time1
,Åime_à
__time0
)

190 
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

193 
time_t
 
	$mktime
 (
tm
 *
__ç
Ë
__THROW
;

199 
size_t
 
	$°r·ime
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

200 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

201 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

202 
__END_NAMESPACE_STD


204 #ifde‡
__USE_XOPEN


207 *
	$°Ωtime
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

208 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
)

209 
__THROW
;

212 #ifde‡
__USE_XOPEN2K8


215 
	~<xloˇÀ.h
>

217 
size_t
 
	$°r·ime_l
 (*
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

218 
__c⁄°
 *
__ª°ri˘
 
__f‹m©
,

219 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

220 
__loˇÀ_t
 
__loc
Ë
__THROW
;

223 #ifde‡
__USE_GNU


224 *
	$°Ωtime_l
 (
__c⁄°
 *
__ª°ri˘
 
__s
,

225 
__c⁄°
 *
__ª°ri˘
 
__fmt
, 
tm
 *
__ç
,

226 
__loˇÀ_t
 
__loc
Ë
__THROW
;

230 
__BEGIN_NAMESPACE_STD


233 
tm
 *
	$gmtime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

237 
tm
 *
	$loˇ…ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

238 
__END_NAMESPACE_STD


240 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


243 
tm
 *
	$gmtime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

244 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

248 
tm
 *
	$loˇ…ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

249 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

252 
__BEGIN_NAMESPACE_STD


255 *
	$as˘ime
 (
__c⁄°
 
tm
 *
__ç
Ë
__THROW
;

258 *
	$˘ime
 (
__c⁄°
 
time_t
 *
__timî
Ë
__THROW
;

259 
__END_NAMESPACE_STD


261 #i‡
deföed
 
__USE_POSIX
 || deföed 
__USE_MISC


266 *
	$as˘ime_r
 (
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

267 *
__ª°ri˘
 
__buf
Ë
__THROW
;

270 *
	$˘ime_r
 (
__c⁄°
 
time_t
 *
__ª°ri˘
 
__timî
,

271 *
__ª°ri˘
 
__buf
Ë
__THROW
;

276 *
__tz«me
[2];

277 
__daylight
;

278 
__timez⁄e
;

281 #ifdef 
__USE_POSIX


283 *
tz«me
[2];

287 
	$tz£t
 (Ë
__THROW
;

290 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_XOPEN


291 
daylight
;

292 
timez⁄e
;

295 #ifde‡
__USE_SVID


298 
	$°ime
 (
__c⁄°
 
time_t
 *
__whí
Ë
__THROW
;

304 
	#__i¶óp
(
yór
) \

305 ((
yór
Ë% 4 =0 && ((yórË% 100 !0 || (yórË% 400 =0))

	)

308 #ifde‡
__USE_MISC


313 
time_t
 
	$timegm
 (
tm
 *
__ç
Ë
__THROW
;

316 
time_t
 
	$timñoˇl
 (
tm
 *
__ç
Ë
__THROW
;

319 
	$dysize
 (
__yór
Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

323 #ifde‡
__USE_POSIX199309


328 
	`«no¶ìp
 (
__c⁄°
 
time•ec
 *
__ªque°ed_time
,

329 
time•ec
 *
__ªmaöög
);

333 
	$˛ock_gëªs
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ªs
Ë
__THROW
;

336 
	$˛ock_gëtime
 (
˛ockid_t
 
__˛ock_id
, 
time•ec
 *
__ç
Ë
__THROW
;

339 
	$˛ock_£âime
 (
˛ockid_t
 
__˛ock_id
, 
__c⁄°
 
time•ec
 *
__ç
)

340 
__THROW
;

342 #ifde‡
__USE_XOPEN2K


347 
	`˛ock_«no¶ìp
 (
˛ockid_t
 
__˛ock_id
, 
__Êags
,

348 
__c⁄°
 
time•ec
 *
__ªq
,

349 
time•ec
 *
__ªm
);

352 
	$˛ock_gë˝u˛ockid
 (
pid_t
 
__pid
, 
˛ockid_t
 *
__˛ock_id
Ë
__THROW
;

357 
	$timî_¸óã
 (
˛ockid_t
 
__˛ock_id
,

358 
sigevít
 *
__ª°ri˘
 
__evp
,

359 
timî_t
 *
__ª°ri˘
 
__timîid
Ë
__THROW
;

362 
	$timî_dñëe
 (
timî_t
 
__timîid
Ë
__THROW
;

365 
	$timî_£âime
 (
timî_t
 
__timîid
, 
__Êags
,

366 
__c⁄°
 
ôimî•ec
 *
__ª°ri˘
 
__vÆue
,

367 
ôimî•ec
 *
__ª°ri˘
 
__ovÆue
Ë
__THROW
;

370 
	$timî_gëtime
 (
timî_t
 
__timîid
, 
ôimî•ec
 *
__vÆue
)

371 
__THROW
;

374 
	$timî_gëovîrun
 (
timî_t
 
__timîid
Ë
__THROW
;

378 #ifde‡
__USE_XOPEN_EXTENDED


390 
gëd©e_îr
;

399 
tm
 *
	`gëd©e
 (
__c⁄°
 *
__°rög
);

402 #ifde‡
__USE_GNU


413 
	`gëd©e_r
 (
__c⁄°
 *
__ª°ri˘
 
__°rög
,

414 
tm
 *
__ª°ri˘
 
__ªsbuÂ
);

417 
__END_DECLS


	@/usr/include/xlocale.h

21 #i‚de‡
_XLOCALE_H


22 
	#_XLOCALE_H
 1

	)

28 
	s__loˇÀ_°ru˘


31 
__loˇÀ_d©a
 *
	m__loˇÀs
[13];

34 c⁄° *
	m__˘y≥_b
;

35 c⁄° *
	m__˘y≥_tﬁowî
;

36 c⁄° *
	m__˘y≥_touµî
;

39 c⁄° *
	m__«mes
[13];

40 } *
	t__loˇÀ_t
;

43 
__loˇÀ_t
 
	tloˇÀ_t
;

	@/usr/include/_G_config.h

4 #i‚de‡
_G_c⁄fig_h


5 
	#_G_c⁄fig_h
 1

	)

9 
	~<bôs/ty≥s.h
>

10 
	#__√ed_size_t


	)

11 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


12 
	#__√ed_wch¨_t


	)

14 
	#__√ed_NULL


	)

15 
	~<°ddef.h
>

16 
	#__√ed_mb°©e_t


	)

17 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


18 
	#__√ed_wöt_t


	)

20 
	~<wch¨.h
>

21 
	#_G_size_t
 
size_t


	)

24 
__off_t
 
	m__pos
;

25 
__mb°©e_t
 
	m__°©e
;

26 } 
	t_G_Âos_t
;

29 
__off64_t
 
	m__pos
;

30 
__mb°©e_t
 
	m__°©e
;

31 } 
	t_G_Âos64_t
;

32 
	#_G_ssize_t
 
__ssize_t


	)

33 
	#_G_off_t
 
__off_t


	)

34 
	#_G_off64_t
 
__off64_t


	)

35 
	#_G_pid_t
 
__pid_t


	)

36 
	#_G_uid_t
 
__uid_t


	)

37 
	#_G_wch¨_t
 
wch¨_t


	)

38 
	#_G_wöt_t
 
wöt_t


	)

39 
	#_G_°©64
 
°©64


	)

40 #i‡
deföed
 
_LIBC
 || deföed 
_GLIBCPP_USE_WCHAR_T


41 
	~<gc⁄v.h
>

44 
__gc⁄v_öfo
 
	m__cd
;

47 
__gc⁄v_öfo
 
	m__cd
;

48 
__gc⁄v_°ï_d©a
 
	m__d©a
;

49 } 
	m__comböed
;

50 } 
	t_G_ic⁄v_t
;

53 
	t_G_öt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

54 
	t_G_öt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

55 
	t_G_uöt16_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__HI__
)));

56 
	t_G_uöt32_t
 
	t__©åibuã__
 ((
	t__mode__
 (
	t__SI__
)));

58 
	#_G_HAVE_BOOL
 1

	)

62 
	#_G_HAVE_ATEXIT
 1

	)

63 
	#_G_HAVE_SYS_CDEFS
 1

	)

64 
	#_G_HAVE_SYS_WAIT
 1

	)

65 
	#_G_NEED_STDARG_H
 1

	)

66 
	#_G_va_li°
 
__gnuc_va_li°


	)

68 
	#_G_HAVE_PRINTF_FP
 1

	)

69 
	#_G_HAVE_MMAP
 1

	)

70 
	#_G_HAVE_MREMAP
 1

	)

71 
	#_G_HAVE_LONG_DOUBLE_IO
 1

	)

72 
	#_G_HAVE_IO_FILE_OPEN
 1

	)

73 
	#_G_HAVE_IO_GETLINE_INFO
 1

	)

75 
	#_G_IO_IO_FILE_VERSION
 0x20001

	)

77 
	#_G_OPEN64
 
__›í64


	)

78 
	#_G_LSEEK64
 
__l£ek64


	)

79 
	#_G_MMAP64
 
__mm≠64


	)

80 
	#_G_FSTAT64
(
fd
,
buf
Ë
	`__fx°©64
 (
_STAT_VER
, fd, buf)

	)

83 
	#_G_HAVE_ST_BLKSIZE
 
	`deföed
 (
_STATBUF_ST_BLKSIZE
)

	)

85 
	#_G_BUFSIZ
 8192

	)

88 
	#_G_NAMES_HAVE_UNDERSCORE
 0

	)

89 
	#_G_VTABLE_LABEL_HAS_LENGTH
 1

	)

90 
	#_G_USING_THUNKS
 1

	)

91 
	#_G_VTABLE_LABEL_PREFIX
 "__vt_"

	)

92 
	#_G_VTABLE_LABEL_PREFIX_ID
 
__vt_


	)

95 #i‡
deföed
 
__˝lu•lus
 || deföed 
__STDC__


96 
	#_G_ARGS
(
ARGLIST
Ë
	)
ARGLIST

98 
	#_G_ARGS
(
ARGLIST
Ë()

	)

	@/usr/include/bits/byteswap.h

21 #i‡!
deföed
 
_BYTESWAP_H
 && !deföed 
_NETINET_IN_H
 && !deföed 
_ENDIAN_H


25 #i‚de‡
_BITS_BYTESWAP_H


26 
	#_BITS_BYTESWAP_H
 1

	)

28 
	~<bôs/w‹dsize.h
>

31 
	#__bsw≠_c⁄°™t_16
(
x
) \

32 ((Ë((((
x
Ë>> 8Ë& 0xffË| (((xË& 0xffË<< 8)))

	)

34 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

35 
	#__bsw≠_16
(
x
) \

36 (
__exãnsi⁄__
 \

37 ({ 
__v
, 
__x
 = (Ë(
x
); \

38 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

39 
__v
 = 
	`__bsw≠_c⁄°™t_16
 (
__x
); \

41 
	`__asm__
 ("rorw $8, %w0" \

42 : "Ù" (
__v
) \

43 : "0" (
__x
) \

45 
__v
; }))

	)

48 
	#__bsw≠_16
(
x
) \

49 (
__exãnsi⁄__
 \

50 ({ 
__x
 = (Ë(
x
); \

51 
	`__bsw≠_c⁄°™t_16
 (
__x
); }))

	)

56 
	#__bsw≠_c⁄°™t_32
(
x
) \

57 ((((
x
) & 0xff000000) >> 24) | (((x) & 0x00ff0000) >> 8) | \

58 (((
x
Ë& 0x0000ff00Ë<< 8Ë| (((xË& 0x000000ffË<< 24))

	)

60 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

61 #i‡
__WORDSIZE
 =64 || (
deföed
 
__i486__
 || deföed 
__≥¡ium__
 \

62 || 
deföed
 
	g__≥¡ium¥o__
 || deföed 
	g__≥¡ium4__
 \

63 || 
deföed
 
	g__k8__
 || deföed 
	g__©hl⁄__
 \

64 || 
deföed
 
	g__k6__
 || deföed 
	g__noc⁄a__
 \

65 || 
deföed
 
	g__c‹e2__
 || deföed 
	g__geode__
 \

66 || 
deföed
 
	g__amdÁm10__
)

69 
	#__bsw≠_32
(
x
) \

70 (
__exãnsi⁄__
 \

71 ({ 
__v
, 
__x
 = (
x
); \

72 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

73 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

75 
	`__asm__
 ("bsw≠ %0" : "Ù" (
__v
Ë: "0" (
__x
)); \

76 
__v
; }))

	)

78 
	#__bsw≠_32
(
x
) \

79 (
__exãnsi⁄__
 \

80 ({ 
__v
, 
__x
 = (
x
); \

81 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

82 
__v
 = 
	`__bsw≠_c⁄°™t_32
 (
__x
); \

84 
	`__asm__
 ("rorw $8, %w0;" \

87 : "Ù" (
__v
) \

88 : "0" (
__x
) \

90 
__v
; }))

	)

93 
	#__bsw≠_32
(
x
) \

94 (
__exãnsi⁄__
 \

95 ({ 
__x
 = (
x
); 
	`__bsw≠_c⁄°™t_32
 (__x); }))

	)

99 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

101 
	#__bsw≠_c⁄°™t_64
(
x
) \

102 (
	`__exãnsi⁄__
 ((((
x
) & 0xff00000000000000ull) >> 56) \

103 | (((
x
) & 0x00ff000000000000ull) >> 40) \

104 | (((
x
) & 0x0000ff0000000000ull) >> 24) \

105 | (((
x
) & 0x000000ff00000000ull) >> 8) \

106 | (((
x
) & 0x00000000ff000000ull) << 8) \

107 | (((
x
) & 0x0000000000ff0000ull) << 24) \

108 | (((
x
) & 0x000000000000ff00ull) << 40) \

109 | (((
x
Ë& 0x00000000000000ffuŒË<< 56)))

	)

111 #i‡
__WORDSIZE
 == 64

112 
	#__bsw≠_64
(
x
) \

113 (
__exãnsi⁄__
 \

114 ({ 
__v
, 
__x
 = (
x
); \

115 i‡(
	`__buûtö_c⁄°™t_p
 (
__x
)) \

116 
__v
 = 
	`__bsw≠_c⁄°™t_64
 (
__x
); \

118 
	`__asm__
 ("bsw≠ %q0" : "Ù" (
__v
Ë: "0" (
__x
)); \

119 
__v
; }))

	)

121 
	#__bsw≠_64
(
x
) \

122 (
__exãnsi⁄__
 \

123 ({ uni⁄ { 
__exãnsi⁄__
 
__Œ
; \

124 
__l
[2]; } 
__w
, 
__r
; \

125 i‡(
	`__buûtö_c⁄°™t_p
 (
x
)) \

126 
__r
.
__Œ
 = 
	`__bsw≠_c⁄°™t_64
 (
x
); \

129 
__w
.
__Œ
 = (
x
); \

130 
__r
.
__l
[0] = 
	`__bsw≠_32
 (
__w
.__l[1]); \

131 
__r
.
__l
[1] = 
	`__bsw≠_32
 (
__w
.__l[0]); \

133 
__r
.
__Œ
; }))

	)

	@/usr/include/bits/endian.h

3 #i‚de‡
_ENDIAN_H


7 
	#__BYTE_ORDER
 
__LITTLE_ENDIAN


	)

	@/usr/include/bits/libio-ldbl.h

20 #i‚de‡
_IO_STDIO_H


24 
	$__LDBL_REDIR_DECL
 (
_IO_vfsˇnf
)

25 
	`__LDBL_REDIR_DECL
 (
_IO_vÂrötf
)

	@/usr/include/bits/select.h

19 #i‚de‡
_SYS_SELECT_H


23 
	~<bôs/w‹dsize.h
>

26 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

28 #i‡
__WORDSIZE
 == 64

29 
	#__FD_ZERO_STOS
 "°osq"

	)

31 
	#__FD_ZERO_STOS
 "°o¶"

	)

34 
	#__FD_ZERO
(
fd•
) \

36 
__d0
, 
__d1
; \

37 
__asm__
 
	`__vﬁ©ûe__
 ("˛d;Ñï; " 
__FD_ZERO_STOS
 \

38 : "=c" (
__d0
), "=D" (
__d1
) \

39 : "a" (0), "0" ( (
fd_£t
) \

40 /  (
__fd_mask
)), \

41 "1" (&
	`__FDS_BITS
 (
fd•
)[0]) \

43 } 0)

	)

49 
	#__FD_ZERO
(
£t
) \

51 
__i
; \

52 
fd_£t
 *
__¨r
 = (
£t
); \

53 
__i
 = 0; __ò<  (
fd_£t
Ë/  (
__fd_mask
); ++__i) \

54 
	`__FDS_BITS
 (
__¨r
)[
__i
] = 0; \

55 } 0)

	)

59 
	#__FD_SET
(
d
, 
£t
) \

60 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] |
	`__FD_MASK
 (d)))

	)

61 
	#__FD_CLR
(
d
, 
£t
) \

62 ((Ë(
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] &~
	`__FD_MASK
 (d)))

	)

63 
	#__FD_ISSET
(
d
, 
£t
) \

64 ((
	`__FDS_BITS
 (
£t
)[
	`__FD_ELT
 (
d
)] & 
	`__FD_MASK
 (d)Ë!0)

	)

	@/usr/include/bits/select2.h

20 #i‚de‡
_SYS_SELECT_H


25 
__fdñt_chk
 (
__d
);

26 
	$__fdñt_w¨n
 (
__d
)

27 
	`__w¨«âr
 ("bit outside of fd_set selected");

28 #unde‡
__FD_ELT


29 
	#__FD_ELT
(
d
) \

30 
__exãnsi⁄__
 \

31 ({ 
__d
 = (
d
); \

32 (
	`__buûtö_c⁄°™t_p
 (
__d
) \

33 ? (
__d
 >
__FD_SETSIZE
 \

34 ? 
	`__fdñt_w¨n
 (
__d
Ë: (__d / 
__NFDBITS
)) \

35 : 
	`__fdñt_chk
 (
__d
)); 
	}
})

	)

	@/usr/include/bits/sigset.h

21 #i‚def 
_SIGSET_H_ty≥s


22 
	#_SIGSET_H_ty≥s
 1

	)

24 
	t__sig_©omic_t
;

28 
	#_SIGSET_NWORDS
 (1024 / (8 *  ()))

	)

31 
	m__vÆ
[
_SIGSET_NWORDS
];

32 } 
	t__sig£t_t
;

43 #i‡!
deföed
 
_SIGSET_H_‚s
 && deföed 
_SIGNAL_H


44 
	#_SIGSET_H_‚s
 1

	)

46 #i‚de‡
_EXTERN_INLINE


47 
	#_EXTERN_INLINE
 
__exã∫_ölöe


	)

51 
	#__sigmask
(
sig
) \

52 (((Ë1Ë<< (((
sig
Ë- 1Ë% (8 *  ())))

	)

55 
	#__sigw‹d
(
sig
Ë(((sigË- 1Ë/ (8 *  ()))

	)

57 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

58 
	#__sigem±y£t
(
£t
) \

59 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

60 
sig£t_t
 *
__£t
 = (
£t
); \

61 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = 0; \

62 0; }))

	)

63 
	#__sigfûl£t
(
£t
) \

64 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

65 
sig£t_t
 *
__£t
 = (
£t
); \

66 --
__˙t
 >0Ë
__£t
->
__vÆ
[__cnt] = ~0UL; \

67 0; }))

	)

69 #ifde‡
__USE_GNU


73 
	#__sigi£m±y£t
(
£t
) \

74 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

75 c⁄° 
sig£t_t
 *
__£t
 = (
£t
); \

76 
__ªt
 = 
__£t
->
__vÆ
[--
__˙t
]; \

77 !
__ªt
 && --
__˙t
 >= 0) \

78 
__ªt
 = 
__£t
->
__vÆ
[
__˙t
]; \

79 
__ªt
 =0; }))

	)

80 
	#__sig™d£t
(
de°
, 
À·
, 
right
) \

81 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

82 
sig£t_t
 *
__de°
 = (
de°
); \

83 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

84 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

85 --
__˙t
 >= 0) \

86 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

87 & 
__right
->
__vÆ
[
__˙t
]); \

88 0; }))

	)

89 
	#__sig‹£t
(
de°
, 
À·
, 
right
) \

90 (
	`__exãnsi⁄__
 ({ 
__˙t
 = 
_SIGSET_NWORDS
; \

91 
sig£t_t
 *
__de°
 = (
de°
); \

92 c⁄° 
sig£t_t
 *
__À·
 = (
À·
); \

93 c⁄° 
sig£t_t
 *
__right
 = (
right
); \

94 --
__˙t
 >= 0) \

95 
__de°
->
__vÆ
[
__˙t
] = (
__À·
->__val[__cnt] \

96 | 
__right
->
__vÆ
[
__˙t
]); \

97 0; }))

	)

104 
__sigismembî
 (
__c⁄°
 
__sig£t_t
 *, );

105 
__sigadd£t
 (
__sig£t_t
 *, );

106 
__sigdñ£t
 (
__sig£t_t
 *, );

108 #ifde‡
__USE_EXTERN_INLINES


109 
	#__SIGSETFN
(
NAME
, 
BODY
, 
CONST
) \

110 
_EXTERN_INLINE
 \

111 
	`NAME
 (
CONST
 
__sig£t_t
 *
__£t
, 
__sig
) \

113 
__mask
 = 
	`__sigmask
 (
__sig
); \

114 
__w‹d
 = 
	`__sigw‹d
 (
__sig
); \

115  
BODY
; \

116 }

	)

118 
__SIGSETFN
 (
__sigismembî
, (
__£t
->
__vÆ
[
__w‹d
] & 
__mask
Ë? 1 : 0, 
__c⁄°
)

119 
__SIGSETFN
 (
__sigadd£t
, ((
__£t
->
__vÆ
[
__w‹d
] |
__mask
), 0), )

120 
__SIGSETFN
 (
__sigdñ£t
, ((
__£t
->
__vÆ
[
__w‹d
] &~
__mask
), 0), )

122 #unde‡
__SIGSETFN


	@/usr/include/bits/stdio-lock.h

20 #i‚de‡
_BITS_STDIO_LOCK_H


21 
	#_BITS_STDIO_LOCK_H
 1

	)

23 
	~<bôs/libc-lock.h
>

25 
	$__libc_lock_deföe_ªcursive
 (, 
_IO_lock_t
)

28 #ifde‡
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


29 
	t_IO_lock_öôülizî
 
	t_LIBC_LOCK_RECURSIVE_INITIALIZER


	)

30 #ñi‡
	t_IO_MTSAFE_IO


31 #îr‹ 
	tlibio
 
	t√eds
 
	tªcursive
 
	tmuãxes
 
	t_IO_MTSAFE_IO


34 
	t_IO_lock_öô
(
	t_«me
Ë
	t__libc_lock_öô_ªcursive
 (_«me)

	)

35 
	t_IO_lock_föi
(
	t_«me
Ë
	t__libc_lock_föi_ªcursive
 (_«me)

	)

36 
	t_IO_lock_lock
(
	t_«me
Ë
	t__libc_lock_lock_ªcursive
 (_«me)

	)

37 
	t_IO_lock_åylock
(
	t_«me
Ë
	t__libc_lock_åylock_ªcursive
 (_«me)

	)

38 
	t_IO_lock_u∆ock
(
	t_«me
Ë
	t__libc_lock_u∆ock_ªcursive
 (_«me)

	)

41 
	t_IO_˛ónup_ªgi⁄_°¨t
(
	t_f˘
, 
	t_Â
) \

42 
	t__libc_˛ónup_ªgi⁄_°¨t
 (((
	t_Â
)->
	t_Êags
 & 
	t_IO_USER_LOCK
Ë=0, 
	t_f˘
, _Â)

	)

43 
	t_IO_˛ónup_ªgi⁄_°¨t_nﬂrg
(
	t_f˘
) \

44 
	t__libc_˛ónup_ªgi⁄_°¨t
 (1, 
	t_f˘
, 
	tNULL
)

	)

45 
	t_IO_˛ónup_ªgi⁄_íd
(
	t_doô
) \

46 
	t__libc_˛ónup_ªgi⁄_íd
 (
	t_doô
)

	)

48 #i‡
	tdeföed
 
	t_LIBC
 && !deföed 
	tNOT_IN_libc


49 
	t_IO_acquúe_lock
(
	t_Â
) \

50 
	t_IO_˛ónup_ªgi⁄_°¨t
 (((*Ë(*)Ë
	t_IO_fu∆ockfûe
, (
	t_Â
)); \

51 
	`_IO_Êockfûe
 (
_Â
)

	)

53 
	#_IO_ªÀa£_lock
(
_Â
) \

54 
	`_IO_fu∆ockfûe
 (
_Â
); \

55 
	`_IO_˛ónup_ªgi⁄_íd
 (0)

	)

	@/usr/include/bits/timex.h

19 #i‚def 
_BITS_TIMEX_H


20 
	#_BITS_TIMEX_H
 1

	)

24 
	stimex


26 
	mmodes
;

27 
	moff£t
;

28 
	m‰eq
;

29 
	mmaxîr‹
;

30 
	me°îr‹
;

31 
	m°©us
;

32 
	mc⁄°™t
;

33 
	m¥ecisi⁄
;

34 
	mtﬁî™˚
;

35 
timevÆ
 
	mtime
;

36 
	mtick
;

38 
	mµs‰eq
;

39 
	mjôãr
;

40 
	mshi·
;

41 
	m°abû
;

42 
	mjô˙t
;

43 
	mˇl˙t
;

44 
	mîr˙t
;

45 
	m°b˙t
;

47 
	mèi
;

56 
	#ADJ_OFFSET
 0x0001

	)

57 
	#ADJ_FREQUENCY
 0x0002

	)

58 
	#ADJ_MAXERROR
 0x0004

	)

59 
	#ADJ_ESTERROR
 0x0008

	)

60 
	#ADJ_STATUS
 0x0010

	)

61 
	#ADJ_TIMECONST
 0x0020

	)

62 
	#ADJ_TAI
 0x0080

	)

63 
	#ADJ_MICRO
 0x1000

	)

64 
	#ADJ_NANO
 0x2000

	)

65 
	#ADJ_TICK
 0x4000

	)

66 
	#ADJ_OFFSET_SINGLESHOT
 0x8001

	)

67 
	#ADJ_OFFSET_SS_READ
 0xa001

	)

70 
	#MOD_OFFSET
 
ADJ_OFFSET


	)

71 
	#MOD_FREQUENCY
 
ADJ_FREQUENCY


	)

72 
	#MOD_MAXERROR
 
ADJ_MAXERROR


	)

73 
	#MOD_ESTERROR
 
ADJ_ESTERROR


	)

74 
	#MOD_STATUS
 
ADJ_STATUS


	)

75 
	#MOD_TIMECONST
 
ADJ_TIMECONST


	)

76 
	#MOD_CLKB
 
ADJ_TICK


	)

77 
	#MOD_CLKA
 
ADJ_OFFSET_SINGLESHOT


	)

78 
	#MOD_TAI
 
ADJ_TAI


	)

79 
	#MOD_MICRO
 
ADJ_MICRO


	)

80 
	#MOD_NANO
 
ADJ_NANO


	)

84 
	#STA_PLL
 0x0001

	)

85 
	#STA_PPSFREQ
 0x0002

	)

86 
	#STA_PPSTIME
 0x0004

	)

87 
	#STA_FLL
 0x0008

	)

89 
	#STA_INS
 0x0010

	)

90 
	#STA_DEL
 0x0020

	)

91 
	#STA_UNSYNC
 0x0040

	)

92 
	#STA_FREQHOLD
 0x0080

	)

94 
	#STA_PPSSIGNAL
 0x0100

	)

95 
	#STA_PPSJITTER
 0x0200

	)

96 
	#STA_PPSWANDER
 0x0400

	)

97 
	#STA_PPSERROR
 0x0800

	)

99 
	#STA_CLOCKERR
 0x1000

	)

100 
	#STA_NANO
 0x2000

	)

101 
	#STA_MODE
 0x4000

	)

102 
	#STA_CLK
 0x8000

	)

105 
	#STA_RONLY
 (
STA_PPSSIGNAL
 | 
STA_PPSJITTER
 | 
STA_PPSWANDER
 | \

106 
STA_PPSERROR
 | 
STA_CLOCKERR
 | 
STA_NANO
 | 
STA_MODE
 | 
STA_CLK
)

	)

	@/usr/include/bits/typesizes.h

20 #i‚de‡
_BITS_TYPES_H


24 #i‚def 
_BITS_TYPESIZES_H


25 
	#_BITS_TYPESIZES_H
 1

	)

30 
	#__DEV_T_TYPE
 
__UQUAD_TYPE


	)

31 
	#__UID_T_TYPE
 
__U32_TYPE


	)

32 
	#__GID_T_TYPE
 
__U32_TYPE


	)

33 
	#__INO_T_TYPE
 
__ULONGWORD_TYPE


	)

34 
	#__INO64_T_TYPE
 
__UQUAD_TYPE


	)

35 
	#__MODE_T_TYPE
 
__U32_TYPE


	)

36 
	#__NLINK_T_TYPE
 
__UWORD_TYPE


	)

37 
	#__OFF_T_TYPE
 
__SLONGWORD_TYPE


	)

38 
	#__OFF64_T_TYPE
 
__SQUAD_TYPE


	)

39 
	#__PID_T_TYPE
 
__S32_TYPE


	)

40 
	#__RLIM_T_TYPE
 
__ULONGWORD_TYPE


	)

41 
	#__RLIM64_T_TYPE
 
__UQUAD_TYPE


	)

42 
	#__BLKCNT_T_TYPE
 
__SLONGWORD_TYPE


	)

43 
	#__BLKCNT64_T_TYPE
 
__SQUAD_TYPE


	)

44 
	#__FSBLKCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

45 
	#__FSBLKCNT64_T_TYPE
 
__UQUAD_TYPE


	)

46 
	#__FSFILCNT_T_TYPE
 
__ULONGWORD_TYPE


	)

47 
	#__FSFILCNT64_T_TYPE
 
__UQUAD_TYPE


	)

48 
	#__ID_T_TYPE
 
__U32_TYPE


	)

49 
	#__CLOCK_T_TYPE
 
__SLONGWORD_TYPE


	)

50 
	#__TIME_T_TYPE
 
__SLONGWORD_TYPE


	)

51 
	#__USECONDS_T_TYPE
 
__U32_TYPE


	)

52 
	#__SUSECONDS_T_TYPE
 
__SLONGWORD_TYPE


	)

53 
	#__DADDR_T_TYPE
 
__S32_TYPE


	)

54 
	#__SWBLK_T_TYPE
 
__SLONGWORD_TYPE


	)

55 
	#__KEY_T_TYPE
 
__S32_TYPE


	)

56 
	#__CLOCKID_T_TYPE
 
__S32_TYPE


	)

57 
	#__TIMER_T_TYPE
 *

	)

58 
	#__BLKSIZE_T_TYPE
 
__SLONGWORD_TYPE


	)

59 
	#__FSID_T_TYPE
 såu˘ { 
__vÆ
[2]; }

	)

60 
	#__SSIZE_T_TYPE
 
__SWORD_TYPE


	)

63 
	#__FD_SETSIZE
 1024

	)

	@/usr/include/bits/uio.h

19 #i‡!
deföed
 
_SYS_UIO_H
 && !deföed 
_FCNTL_H


23 #i‚de‡
_BITS_UIO_H


24 
	#_BITS_UIO_H
 1

	)

26 
	~<sys/ty≥s.h
>

40 
	#UIO_MAXIOV
 1024

	)

44 
	siovec


46 *
	miov_ba£
;

47 
size_t
 
	miov_Àn
;

52 #i‡
deföed
 
_SYS_UIO_H
 && !deföed 
_BITS_UIO_H_FOR_SYS_UIO_H


53 
	#_BITS_UIO_H_FOR_SYS_UIO_H
 1

	)

55 
__BEGIN_DECLS


58 
ssize_t
 
	$¥o˚ss_vm_ªadv
 (
pid_t
 
__pid
, 
__c⁄°
 
iovec
 *
__lvec
,

59 
__liov˙t
,

60 
__c⁄°
 
iovec
 *
__rvec
,

61 
__riov˙t
,

62 
__Êags
)

63 
__THROW
;

66 
ssize_t
 
	$¥o˚ss_vm_wrôev
 (
pid_t
 
__pid
, 
__c⁄°
 
iovec
 *
__lvec
,

67 
__liov˙t
,

68 
__c⁄°
 
iovec
 *
__rvec
,

69 
__riov˙t
,

70 
__Êags
)

71 
__THROW
;

73 
__END_DECLS


	@/usr/include/bits/wordsize.h

3 #i‡
deföed
 
__x86_64__


4 
	#__WORDSIZE
 64

	)

5 
	#__WORDSIZE_COMPAT32
 1

	)

7 
	#__WORDSIZE
 32

	)

	@/usr/include/ctype.h

24 #i‚def 
_CTYPE_H


25 
	#_CTYPE_H
 1

	)

27 
	~<„©uªs.h
>

28 
	~<bôs/ty≥s.h
>

30 
	g__BEGIN_DECLS


32 #i‚de‡
_ISbô


41 
	~<ídün.h
>

42 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


43 
	#_ISbô
(
bô
Ë(1 << (bô))

	)

45 
	#_ISbô
(
bô
Ë((bôË< 8 ? ((1 << (bô)Ë<< 8Ë: ((1 << (bô)Ë>> 8))

	)

50 
	m_ISuµî
 = 
_ISbô
 (0),

51 
	m_ISlowî
 = 
_ISbô
 (1),

52 
	m_ISÆpha
 = 
_ISbô
 (2),

53 
	m_ISdigô
 = 
_ISbô
 (3),

54 
	m_ISxdigô
 = 
_ISbô
 (4),

55 
	m_IS•a˚
 = 
_ISbô
 (5),

56 
	m_IS¥öt
 = 
_ISbô
 (6),

57 
	m_ISgøph
 = 
_ISbô
 (7),

58 
	m_ISbœnk
 = 
_ISbô
 (8),

59 
	m_IS˙ål
 = 
_ISbô
 (9),

60 
	m_ISpun˘
 = 
_ISbô
 (10),

61 
	m_ISÆnum
 = 
_ISbô
 (11)

81 
__c⁄°
 **
	$__˘y≥_b_loc
 ()

82 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

83 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_tﬁowî_loc
 ()

84 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

85 
__c⁄°
 
__öt32_t
 **
	$__˘y≥_touµî_loc
 ()

86 
__THROW
 
	`__©åibuã__
 ((
__c⁄°
));

89 #i‚de‡
__˝lu•lus


90 
	#__is˘y≥
(
c
, 
ty≥
) \

91 ((*
	`__˘y≥_b_loc
 ())[(Ë(
c
)] & (Ë
ty≥
)

	)

92 #ñi‡
deföed
 
__USE_EXTERN_INLINES


93 
	#__is˘y≥_f
(
ty≥
) \

94 
__exã∫_ölöe
 \

95 
is
##
	`ty≥
 (
__c
Ë
__THROW
 \

97  (*
	`__˘y≥_b_loc
 ())[(Ë(
__c
)] & (Ë
_IS
##
ty≥
; \

98 
	}

	)
}

101 
	#__ißscii
(
c
Ë(((cË& ~0x7fË=0Ë

	)

102 
	#__tﬂscii
(
c
Ë((cË& 0x7fË

	)

104 
	#__ex˘y≥
(
«me
Ë
	`«me
 (Ë
__THROW


	)

106 
__BEGIN_NAMESPACE_STD


112 
__ex˘y≥
 (
iß um
);

113 
__ex˘y≥
 (
ißÕha
);

114 
__ex˘y≥
 (
is˙ål
);

115 
__ex˘y≥
 (
isdigô
);

116 
__ex˘y≥
 (
i¶owî
);

117 
__ex˘y≥
 (
isgøph
);

118 
__ex˘y≥
 (
i•röt
);

119 
__ex˘y≥
 (
i•un˘
);

120 
__ex˘y≥
 (
is•a˚
);

121 
__ex˘y≥
 (
isuµî
);

122 
__ex˘y≥
 (
isxdigô
);

126 
	$tﬁowî
 (
__c
Ë
__THROW
;

129 
	$touµî
 (
__c
Ë
__THROW
;

131 
__END_NAMESPACE_STD


135 #ifdef 
__USE_ISOC99


136 
__BEGIN_NAMESPACE_C99


138 
	`__ex˘y≥
 (
isbœnk
);

140 
__END_NAMESPACE_C99


143 #ifde‡
__USE_GNU


145 
	$is˘y≥
 (
__c
, 
__mask
Ë
__THROW
;

148 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


152 
	$ißscii
 (
__c
Ë
__THROW
;

156 
	$tﬂscii
 (
__c
Ë
__THROW
;

160 
	`__ex˘y≥
 (
_touµî
);

161 
	`__ex˘y≥
 (
_tﬁowî
);

165 
	#__tobody
(
c
, 
f
, 
a
, 
¨gs
) \

166 (
__exãnsi⁄__
 \

167 ({ 
__ªs
; \

168 i‡( (
c
) > 1) \

170 i‡(
	`__buûtö_c⁄°™t_p
 (
c
)) \

172 
__c
 = (
c
); \

173 
__ªs
 = 
__c
 < -128 || __¯> 255 ? __¯: (
a
)[__c]; \

176 
__ªs
 = 
f
 
¨gs
; \

179 
__ªs
 = (
a
)[(Ë(
c
)]; \

180 
__ªs
; 
	}
}))

	)

182 #i‡!
deföed
 
__NO_CTYPE


183 #ifde‡
__is˘y≥_f


184 
	$__is˘y≥_f
 (
Ænum
)

185 
	$__is˘y≥_f
 (
Æpha
)

186 
	$__is˘y≥_f
 (
˙ål
)

187 
	$__is˘y≥_f
 (
digô
)

188 
	$__is˘y≥_f
 (
lowî
)

189 
	$__is˘y≥_f
 (
gøph
)

190 
	$__is˘y≥_f
 (
¥öt
)

191 
	$__is˘y≥_f
 (
pun˘
)

192 
	$__is˘y≥_f
 (
•a˚
)

193 
	$__is˘y≥_f
 (
uµî
)

194 
	$__is˘y≥_f
 (
xdigô
)

195 #ifde‡
__USE_ISOC99


196 
	$__is˘y≥_f
 (
bœnk
)

198 #ñi‡
deföed
 
__is˘y≥


199 
	#iß um
(
c
Ë
	`__is˘y≥
((c), 
_ISÆnum
)

	)

200 
	#ißÕha
(
c
Ë
	`__is˘y≥
((c), 
_ISÆpha
)

	)

201 
	#is˙ål
(
c
Ë
	`__is˘y≥
((c), 
_IS˙ål
)

	)

202 
	#isdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISdigô
)

	)

203 
	#i¶owî
(
c
Ë
	`__is˘y≥
((c), 
_ISlowî
)

	)

204 
	#isgøph
(
c
Ë
	`__is˘y≥
((c), 
_ISgøph
)

	)

205 
	#i•röt
(
c
Ë
	`__is˘y≥
((c), 
_IS¥öt
)

	)

206 
	#i•un˘
(
c
Ë
	`__is˘y≥
((c), 
_ISpun˘
)

	)

207 
	#is•a˚
(
c
Ë
	`__is˘y≥
((c), 
_IS•a˚
)

	)

208 
	#isuµî
(
c
Ë
	`__is˘y≥
((c), 
_ISuµî
)

	)

209 
	#isxdigô
(
c
Ë
	`__is˘y≥
((c), 
_ISxdigô
)

	)

210 #ifde‡
__USE_ISOC99


211 
	#isbœnk
(
c
Ë
	`__is˘y≥
((c), 
_ISbœnk
)

	)

215 #ifde‡
__USE_EXTERN_INLINES


216 
__exã∫_ölöe
 

217 
	`__NTH
 (
	$tﬁowî
 (
__c
))

219  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_tﬁowî_loc
 ())[__c] : __c;

220 
	}
}

222 
__exã∫_ölöe
 

223 
__NTH
 (
	$touµî
 (
__c
))

225  
__c
 >-128 && __¯< 256 ? (*
	`__˘y≥_touµî_loc
 ())[__c] : __c;

226 
	}
}

229 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


230 
	#tﬁowî
(
c
Ë
	`__tobody
 (c, 
tﬁowî
, *
	`__˘y≥_tﬁowî_loc
 (), (c))

	)

231 
	#touµî
(
c
Ë
	`__tobody
 (c, 
touµî
, *
	`__˘y≥_touµî_loc
 (), (c))

	)

234 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC
 || deföed 
__USE_XOPEN


235 
	#ißscii
(
c
Ë
	`__ißscii
 (c)

	)

236 
	#tﬂscii
(
c
Ë
	`__tﬂscii
 (c)

	)

238 
	#_tﬁowî
(
c
Ë((Ë(*
	`__˘y≥_tﬁowî_loc
 ())[(Ë(c)])

	)

239 
	#_touµî
(
c
Ë((Ë(*
	`__˘y≥_touµî_loc
 ())[(Ë(c)])

	)

245 #ifde‡
__USE_XOPEN2K8


259 
	~<xloˇÀ.h
>

263 
	#__is˘y≥_l
(
c
, 
ty≥
, 
loˇÀ
) \

264 ((
loˇÀ
)->
__˘y≥_b
[(Ë(
c
)] & (Ë
ty≥
)

	)

266 
	#__ex˘y≥_l
(
«me
) \

267 
	`«me
 (, 
__loˇÀ_t
Ë
__THROW


	)

273 
__ex˘y≥_l
 (
iß um_l
);

274 
__ex˘y≥_l
 (
ißÕha_l
);

275 
__ex˘y≥_l
 (
is˙ål_l
);

276 
__ex˘y≥_l
 (
isdigô_l
);

277 
__ex˘y≥_l
 (
i¶owî_l
);

278 
__ex˘y≥_l
 (
isgøph_l
);

279 
__ex˘y≥_l
 (
i•röt_l
);

280 
__ex˘y≥_l
 (
i•un˘_l
);

281 
__ex˘y≥_l
 (
is•a˚_l
);

282 
__ex˘y≥_l
 (
isuµî_l
);

283 
__ex˘y≥_l
 (
isxdigô_l
);

285 
__ex˘y≥_l
 (
isbœnk_l
);

289 
	$__tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

290 
	$tﬁowî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

293 
	$__touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

294 
	$touµî_l
 (
__c
, 
__loˇÀ_t
 
__l
Ë
__THROW
;

296 #i‡
__GNUC__
 >2 && 
deföed
 
__OPTIMIZE__
 && !deföed 
__˝lu•lus


297 
	#__tﬁowî_l
(
c
, 
loˇÀ
) \

298 
	`__tobody
 (
c
, 
__tﬁowî_l
, (
loˇÀ
)->
__˘y≥_tﬁowî
, (c,ÜoˇÀ))

	)

299 
	#__touµî_l
(
c
, 
loˇÀ
) \

300 
	`__tobody
 (
c
, 
__touµî_l
, (
loˇÀ
)->
__˘y≥_touµî
, (c,ÜoˇÀ))

	)

301 
	#tﬁowî_l
(
c
, 
loˇÀ
Ë
	`__tﬁowî_l
 ((c), (loˇÀ))

	)

302 
	#touµî_l
(
c
, 
loˇÀ
Ë
	`__touµî_l
 ((c), (loˇÀ))

	)

306 #i‚de‡
__NO_CTYPE


307 
	#__iß um_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆnum
, (l))

	)

308 
	#__ißÕha_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISÆpha
, (l))

	)

309 
	#__is˙ål_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS˙ål
, (l))

	)

310 
	#__isdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISdigô
, (l))

	)

311 
	#__i¶owî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISlowî
, (l))

	)

312 
	#__isgøph_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISgøph
, (l))

	)

313 
	#__i•röt_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS¥öt
, (l))

	)

314 
	#__i•un˘_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISpun˘
, (l))

	)

315 
	#__is•a˚_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_IS•a˚
, (l))

	)

316 
	#__isuµî_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISuµî
, (l))

	)

317 
	#__isxdigô_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISxdigô
, (l))

	)

319 
	#__isbœnk_l
(
c
,
l
Ë
	`__is˘y≥_l
((c), 
_ISbœnk
, (l))

	)

321 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


322 
	#__ißscii_l
(
c
,
l
Ë(÷), 
	`__ißscii
 (c))

	)

323 
	#__tﬂscii_l
(
c
,
l
Ë(÷), 
	`__tﬂscii
 (c))

	)

326 
	#iß um_l
(
c
,
l
Ë
	`__iß um_l
 ((c), (l))

	)

327 
	#ißÕha_l
(
c
,
l
Ë
	`__ißÕha_l
 ((c), (l))

	)

328 
	#is˙ål_l
(
c
,
l
Ë
	`__is˙ål_l
 ((c), (l))

	)

329 
	#isdigô_l
(
c
,
l
Ë
	`__isdigô_l
 ((c), (l))

	)

330 
	#i¶owî_l
(
c
,
l
Ë
	`__i¶owî_l
 ((c), (l))

	)

331 
	#isgøph_l
(
c
,
l
Ë
	`__isgøph_l
 ((c), (l))

	)

332 
	#i•röt_l
(
c
,
l
Ë
	`__i•röt_l
 ((c), (l))

	)

333 
	#i•un˘_l
(
c
,
l
Ë
	`__i•un˘_l
 ((c), (l))

	)

334 
	#is•a˚_l
(
c
,
l
Ë
	`__is•a˚_l
 ((c), (l))

	)

335 
	#isuµî_l
(
c
,
l
Ë
	`__isuµî_l
 ((c), (l))

	)

336 
	#isxdigô_l
(
c
,
l
Ë
	`__isxdigô_l
 ((c), (l))

	)

338 
	#isbœnk_l
(
c
,
l
Ë
	`__isbœnk_l
 ((c), (l))

	)

340 #i‡
deföed
 
__USE_SVID
 || deföed 
__USE_MISC


341 
	#ißscii_l
(
c
,
l
Ë
	`__ißscii_l
 ((c), (l))

	)

342 
	#tﬂscii_l
(
c
,
l
Ë
	`__tﬂscii_l
 ((c), (l))

	)

349 
__END_DECLS


	@/usr/include/gnu/stubs.h

4 
	~<bôs/w‹dsize.h
>

6 #i‡
__WORDSIZE
 == 32

7 
	~<gnu/°ubs-32.h
>

8 #ñi‡
__WORDSIZE
 == 64

9 
	~<gnu/°ubs-64.h
>

	@/usr/include/linux/errno.h

1 #i‚de‡
_LINUX_ERRNO_H


2 
	#_LINUX_ERRNO_H


	)

4 
	~<asm/î∫o.h
>

	@/usr/include/linux/kernel.h

1 #i‚de‡
_LINUX_KERNEL_H


2 
	#_LINUX_KERNEL_H


	)

7 
	#__ALIGN_KERNEL
(
x
, 
a
Ë
	`__ALIGN_KERNEL_MASK
(x, (
	`ty≥of
(x))◊Ë- 1)

	)

8 
	#__ALIGN_KERNEL_MASK
(
x
, 
mask
Ë(((xË+ (mask)Ë& ~(mask))

	)

11 
	#SI_LOAD_SHIFT
 16

	)

12 
	ssysöfo
 {

13 
	mu±ime
;

14 
	mlﬂds
[3];

15 
	mtŸÆøm
;

16 
	m‰ìøm
;

17 
	msh¨edøm
;

18 
	mbuf„ºam
;

19 
	mtŸÆsw≠
;

20 
	m‰ìsw≠
;

21 
	m¥ocs
;

22 
	m∑d
;

23 
	mtŸÆhigh
;

24 
	m‰ìhigh
;

25 
	mmem_unô
;

26 
	m_f
[20-2*()-()];

	@/usr/include/linux/types.h

1 #i‚de‡
_LINUX_TYPES_H


2 
	#_LINUX_TYPES_H


	)

4 
	~<asm/ty≥s.h
>

6 #i‚de‡
__ASSEMBLY__


8 
	~<löux/posix_ty≥s.h
>

16 #ifde‡
__CHECKER__


17 
	#__bôwi£__
 
	`__©åibuã__
((
bôwi£
))

	)

19 
	#__bôwi£__


	)

21 #ifde‡
__CHECK_ENDIAN__


22 
	#__bôwi£
 
__bôwi£__


	)

24 
	#__bôwi£


	)

27 
__u16
 
	t__bôwi£
 
	t__À16
;

28 
__u16
 
	t__bôwi£
 
	t__be16
;

29 
__u32
 
	t__bôwi£
 
	t__À32
;

30 
__u32
 
	t__bôwi£
 
	t__be32
;

31 
__u64
 
	t__bôwi£
 
	t__À64
;

32 
__u64
 
	t__bôwi£
 
	t__be64
;

34 
__u16
 
	t__bôwi£
 
	t__sum16
;

35 
__u32
 
	t__bôwi£
 
	t__wsum
;

46 
	#__Æig√d_u64
 
__u64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

47 
	#__Æig√d_be64
 
__be64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

48 
	#__Æig√d_À64
 
__À64
 
	`__©åibuã__
((
	`Æig√d
(8)))

	)

	@/usr/include/sys/cdefs.h

20 #i‚def 
_SYS_CDEFS_H


21 
	#_SYS_CDEFS_H
 1

	)

24 #i‚de‡
_FEATURES_H


25 
	~<„©uªs.h
>

31 #i‡
deföed
 
__GNUC__
 && !deföed 
__STDC__


36 #unde‡
__P


37 #unde‡
__PMT


39 #ifde‡
__GNUC__


43 #i‡
__GNUC_PREREQ
 (4, 6Ë&& !
deföed
 
_LIBC


44 
	#__LEAF
 , 
__Àaf__


	)

45 
	#__LEAF_ATTR
 
	`__©åibuã__
 ((
__Àaf__
))

	)

47 
	#__LEAF


	)

48 
	#__LEAF_ATTR


	)

56 #i‡!
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (3, 3)

57 
	#__THROW
 
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
))

	)

58 
	#__THROWNL
 
	`__©åibuã__
 ((
__nŸhrow__
))

	)

59 
	#__NTH
(
f˘
Ë
	`__©åibuã__
 ((
__nŸhrow__
 
__LEAF
)Ë
	)
fct

61 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (2,8)

62 
	#__THROW
 
	`throw
 ()

	)

63 
	#__THROWNL
 
	`throw
 ()

	)

64 
	#__NTH
(
f˘
Ë
__LEAF_ATTR
 f˘ 
	`throw
 ()

	)

66 
	#__THROW


	)

67 
	#__THROWNL


	)

68 
	#__NTH
(
f˘
Ë
	)
fct

74 
	#__ölöe


	)

76 
	#__THROW


	)

77 
	#__THROWNL


	)

78 
	#__NTH
(
f˘
Ë
	)
fct

80 
	#__c⁄°
 c⁄°

	)

81 
	#__sig√d
 sig√d

	)

82 
	#__vﬁ©ûe
 vﬁ©ûe

	)

88 
	#__P
(
¨gs
Ë
	)
args

89 
	#__PMT
(
¨gs
Ë
	)
args

94 
	#__CONCAT
(
x
,
y
Ëx ## 
	)
y

95 
	#__STRING
(
x
Ë#x

	)

98 
	#__±r_t
 *

	)

99 
	#__l⁄g_doubÀ_t
 

	)

103 #ifdef 
__˝lu•lus


104 
	#__BEGIN_DECLS
 "C" {

	)

105 
	#__END_DECLS
 }

	)

107 
	#__BEGIN_DECLS


	)

108 
	#__END_DECLS


	)

117 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES


118 
	#__BEGIN_NAMESPACE_STD
 
«me•a˚
 
°d
 {

	)

119 
	#__END_NAMESPACE_STD
 }

	)

120 
	#__USING_NAMESPACE_STD
(
«me
Ë
usög
 
°d
::«me;

	)

121 
	#__BEGIN_NAMESPACE_C99
 
«me•a˚
 
__c99
 {

	)

122 
	#__END_NAMESPACE_C99
 }

	)

123 
	#__USING_NAMESPACE_C99
(
«me
Ë
usög
 
__c99
::«me;

	)

128 
	#__BEGIN_NAMESPACE_STD


	)

129 
	#__END_NAMESPACE_STD


	)

130 
	#__USING_NAMESPACE_STD
(
«me
)

	)

131 
	#__BEGIN_NAMESPACE_C99


	)

132 
	#__END_NAMESPACE_C99


	)

133 
	#__USING_NAMESPACE_C99
(
«me
)

	)

138 #i‚de‡
__BOUNDED_POINTERS__


139 
	#__bounded


	)

140 
	#__unbounded


	)

141 
	#__±rvÆue


	)

146 
	#__bos
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 
__USE_FORTIFY_LEVEL
 > 1)

	)

147 
	#__bos0
(
±r
Ë
	`__buûtö_obje˘_size
 (±r, 0)

	)

149 #i‡
__GNUC_PREREQ
 (4,3) \

150 || (
deföed
 
	g__GNUC_RH_RELEASE__
 && 
	g__GNUC__
 == 4 \

151 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

152 && 
__GNUC_RH_RELEASE__
 >= 31)

153 
	#__w¨nde˛
(
«me
, 
msg
) \

154 
	`«me
 (Ë
	`__©åibuã__
((
	`__w¨nög__
 (
msg
)))

	)

155 
	#__w¨«âr
(
msg
Ë
	`__©åibuã__
((
	`__w¨nög__
 (msg)))

	)

156 
	#__îr‹de˛
(
«me
, 
msg
) \

157 
	`«me
 (Ë
	`__©åibuã__
((
	`__îr‹__
 (
msg
)))

	)

159 
	#__w¨nde˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

160 
	#__w¨«âr
(
msg
)

	)

161 
	#__îr‹de˛
(
«me
, 
msg
Ë
	`«me
 ()

	)

165 #i‡
__GNUC_PREREQ
 (2,97)

167 
	#__Êex¨r
 []

	)

169 #ifde‡
__GNUC__


170 
	#__Êex¨r
 [0]

	)

172 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

173 
	#__Êex¨r
 []

	)

176 
	#__Êex¨r
 [1]

	)

192 #i‡
deföed
 
__GNUC__
 && __GNUC__ >= 2

194 
	#__REDIRECT
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

195 #ifde‡
__˝lu•lus


196 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

197 
«me
 
¥Ÿo
 
__THROW
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

198 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

199 
«me
 
¥Ÿo
 
__THROWNL
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs))

	)

201 
	#__REDIRECT_NTH
(
«me
, 
¥Ÿo
, 
Æüs
) \

202 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROW


	)

203 
	#__REDIRECT_NTHNL
(
«me
, 
¥Ÿo
, 
Æüs
) \

204 
«me
 
¥Ÿo
 
	`__asm__
 (
	`__ASMNAME
 (#Æüs)Ë
__THROWNL


	)

206 
	#__ASMNAME
(
˙ame
Ë
	`__ASMNAME2
 (
__USER_LABEL_PREFIX__
, c«me)

	)

207 
	#__ASMNAME2
(
¥efix
, 
˙ame
Ë
	`__STRING
 (¥efixË
	)
cname

220 #i‡!
deföed
 
__GNUC__
 || __GNUC__ < 2

221 
	#__©åibuã__
(
xyz
Ë

	)

227 #i‡
__GNUC_PREREQ
 (2,96)

228 
	#__©åibuã_mÆloc__
 
	`__©åibuã__
 ((
__mÆloc__
))

	)

230 
	#__©åibuã_mÆloc__


	)

236 #i‡
__GNUC_PREREQ
 (2,96)

237 
	#__©åibuã_puª__
 
	`__©åibuã__
 ((
__puª__
))

	)

239 
	#__©åibuã_puª__


	)

243 #i‡
__GNUC_PREREQ
 (2,5)

244 
	#__©åibuã_c⁄°__
 
	`__©åibuã__
 ((
__c⁄°__
))

	)

246 
	#__©åibuã_c⁄°__


	)

252 #i‡
__GNUC_PREREQ
 (3,1)

253 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__u£d__
))

	)

254 
	#__©åibuã_noölöe__
 
	`__©åibuã__
 ((
__noölöe__
))

	)

256 
	#__©åibuã_u£d__
 
	`__©åibuã__
 ((
__unu£d__
))

	)

257 
	#__©åibuã_noölöe__


	)

261 #i‡
__GNUC_PREREQ
 (3,2)

262 
	#__©åibuã_dïªˇãd__
 
	`__©åibuã__
 ((
__dïªˇãd__
))

	)

264 
	#__©åibuã_dïªˇãd__


	)

273 #i‡
__GNUC_PREREQ
 (2,8)

274 
	#__©åibuã_f‹m©_¨g__
(
x
Ë
	`__©åibuã__
 ((
	`__f‹m©_¨g__
 (x)))

	)

276 
	#__©åibuã_f‹m©_¨g__
(
x
Ë

	)

283 #i‡
__GNUC_PREREQ
 (2,97)

284 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
) \

285 
	`__©åibuã__
 ((
	`__f‹m©__
 (
__°rfm⁄__
, 
a
, 
b
)))

	)

287 
	#__©åibuã_f‹m©_°rfm⁄__
(
a
,
b
Ë

	)

292 #i‡
__GNUC_PREREQ
 (3,3)

293 
	#__n⁄nuŒ
(
∑øms
Ë
	`__©åibuã__
 ((
__n⁄nuŒ__
Ö¨ams))

	)

295 
	#__n⁄nuŒ
(
∑øms
)

	)

300 #i‡
__GNUC_PREREQ
 (3,4)

301 
	#__©åibuã_w¨n_unu£d_ªsu…__
 \

302 
	`__©åibuã__
 ((
__w¨n_unu£d_ªsu…__
))

	)

303 #i‡
__USE_FORTIFY_LEVEL
 > 0

304 
	#__wur
 
__©åibuã_w¨n_unu£d_ªsu…__


	)

307 
	#__©åibuã_w¨n_unu£d_ªsu…__


	)

309 #i‚de‡
__wur


310 
	#__wur


	)

314 #i‡
__GNUC_PREREQ
 (3,2)

315 
	#__Æways_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__Æways_ölöe__
))

	)

317 
	#__Æways_ölöe
 
__ölöe


	)

322 #i‡!
deföed
 
__˝lu•lus
 || 
__GNUC_PREREQ
 (4,3) \

323 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

324 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

325 && 
__GNUC_RH_RELEASE__
 >= 31)

326 #i‡
deföed
 
__GNUC_STDC_INLINE__
 || deföed 
__˝lu•lus


327 
	#__exã∫_ölöe
 
__ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

328 #i‡
__GNUC_PREREQ
 (4,3) \

329 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

330 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

331 && 
__GNUC_RH_RELEASE__
 >= 31)

332 
	#__exã∫_Æways_ölöe
 \

333 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
, 
__¨tificül__
))

	)

335 
	#__exã∫_Æways_ölöe
 \

336 
__Æways_ölöe
 
	`__©åibuã__
 ((
__gnu_ölöe__
))

	)

339 
	#__exã∫_ölöe
 
__ölöe


	)

340 #i‡
__GNUC_PREREQ
 (4,3)

341 
	#__exã∫_Æways_ölöe
 \

342 
__Æways_ölöe
 
	`__©åibuã__
 ((
__¨tificül__
))

	)

344 
	#__exã∫_Æways_ölöe
 
__Æways_ölöe


	)

351 #i‡
__GNUC_PREREQ
 (4,3) \

352 || (
deföed
 
__GNUC_RH_RELEASE__
 && 
__GNUC__
 == 4 \

353 && 
__GNUC_MINOR__
 =1 && 
__GNUC_PATCHLEVEL__
 == 2 \

354 && 
__GNUC_RH_RELEASE__
 >= 31)

355 
	#__va_¨g_∑ck
(Ë
	`__buûtö_va_¨g_∑ck
 ()

	)

356 
	#__va_¨g_∑ck_Àn
(Ë
	`__buûtö_va_¨g_∑ck_Àn
 ()

	)

363 #i‡!
__GNUC_PREREQ
 (2,8)

364 
	#__exãnsi⁄__


	)

368 #i‡!
__GNUC_PREREQ
 (2,92)

369 
	#__ª°ri˘


	)

375 #i‡
__GNUC_PREREQ
 (3,1Ë&& !
deföed
 
__GNUG__


376 
	#__ª°ri˘_¨r
 
__ª°ri˘


	)

378 #ifde‡
__GNUC__


379 
	#__ª°ri˘_¨r


	)

381 #i‡
deföed
 
__STDC_VERSION__
 && __STDC_VERSION__ >= 199901L

382 
	#__ª°ri˘_¨r
 
ª°ri˘


	)

385 
	#__ª°ri˘_¨r


	)

390 
	~<bôs/w‹dsize.h
>

392 #i‡
deföed
 
__LONG_DOUBLE_MATH_OPTIONAL
 && deföed 
__NO_LONG_DOUBLE_MATH


393 
	#__LDBL_COMPAT
 1

	)

394 #ifde‡
__REDIRECT


395 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

396 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
) \

397 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

398 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT_NTH
 («me,ÖrŸo,álüs)

	)

399 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
) \

400 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##«me)

	)

401 
	#__LDBL_REDIR1_DECL
(
«me
, 
Æüs
) \

402 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 (#Æüs));

	)

403 
	#__LDBL_REDIR_DECL
(
«me
) \

404 
	`__ty≥of
 (
«me
Ë«mê
	`__asm
 (
	`__ASMNAME
 ("__∆dbl_" #«me));

	)

405 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

406 
	`__LDBL_REDIR1
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

407 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

408 
	`__LDBL_REDIR1_NTH
 (
«me
, 
¥Ÿo
, 
__∆dbl_
##
Æüs
)

	)

411 #i‡!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT


412 
	#__LDBL_REDIR1
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê
	)
proto

413 
	#__LDBL_REDIR
(
«me
, 
¥Ÿo
Ë«mê
	)
proto

414 
	#__LDBL_REDIR1_NTH
(
«me
, 
¥Ÿo
, 
Æüs
Ë«mê¥Ÿÿ
__THROW


	)

415 
	#__LDBL_REDIR_NTH
(
«me
, 
¥Ÿo
Ë«mê¥Ÿÿ
__THROW


	)

416 
	#__LDBL_REDIR_DECL
(
«me
)

	)

417 #ifde‡
__REDIRECT


418 
	#__REDIRECT_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
Ë
	`__REDIRECT
 («me,ÖrŸo,álüs)

	)

419 
	#__REDIRECT_NTH_LDBL
(
«me
, 
¥Ÿo
, 
Æüs
) \

420 
	`__REDIRECT_NTH
 (
«me
, 
¥Ÿo
, 
Æüs
)

	)

	@/usr/include/asm/errno.h

1 
	~<asm-gíîic/î∫o.h
>

	@/usr/include/asm/types.h

1 #i‚de‡
_ASM_X86_TYPES_H


2 
	#_ASM_X86_TYPES_H


	)

4 
	~<asm-gíîic/ty≥s.h
>

	@/usr/include/bits/libc-lock.h

21 #i‚de‡
_BITS_LIBC_LOCK_H


22 
	#_BITS_LIBC_LOCK_H
 1

	)

24 
	~<±hªad.h
>

27 #ifde‡
_IO_MTSAFE_IO


28 
±hªad_muãx_t
 
	t__libc_lock_t
;

29 °ru˘ { 
±hªad_muãx_t
 
	mmuãx
; } 
	t__libc_lock_ªcursive_t
;

30 #ifde‡
__USE_UNIX98


31 
±hªad_rwlock_t
 
	t__libc_rwlock_t
;

33 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

35 
__libc_lock_ªcursive_t
 
	t__πld_lock_ªcursive_t
;

37 
__libc_lock_›aque__
 
	t__libc_lock_t
;

38 
__libc_lock_ªcursive_›aque__
 
	t__libc_lock_ªcursive_t
;

39 
__libc_rwlock_›aque__
 
	t__libc_rwlock_t
;

43 
±hªad_key_t
 
	t__libc_key_t
;

52 
	#__libc_lock_deföe
(
CLASS
,
NAME
) \

53 
CLASS
 
__libc_lock_t
 
NAME
;

	)

54 
	#__libc_rwlock_deföe
(
CLASS
,
NAME
) \

55 
CLASS
 
__libc_rwlock_t
 
NAME
;

	)

56 
	#__libc_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

57 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
;

	)

58 
	#__πld_lock_deföe_ªcursive
(
CLASS
,
NAME
) \

59 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
;

	)

70 #i‡
__LT_SPINLOCK_INIT
 == 0

71 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

72 
CLASS
 
__libc_lock_t
 
NAME
;

	)

74 
	#__libc_lock_deföe_öôülized
(
CLASS
,
NAME
) \

75 
CLASS
 
__libc_lock_t
 
NAME
 = 
PTHREAD_MUTEX_INITIALIZER
;

	)

78 
	#__libc_rwlock_deföe_öôülized
(
CLASS
,
NAME
) \

79 
CLASS
 
__libc_rwlock_t
 
NAME
 = 
PTHREAD_RWLOCK_INITIALIZER
;

	)

83 
	#__libc_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

84 
CLASS
 
__libc_lock_ªcursive_t
 
NAME
 = 
_LIBC_LOCK_RECURSIVE_INITIALIZER
;

	)

85 
	#_LIBC_LOCK_RECURSIVE_INITIALIZER
 \

86 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

88 
	#__πld_lock_deföe_öôülized_ªcursive
(
CLASS
,
NAME
) \

89 
CLASS
 
__πld_lock_ªcursive_t
 
NAME
 = 
_RTLD_LOCK_RECURSIVE_INITIALIZER
;

	)

90 
	#_RTLD_LOCK_RECURSIVE_INITIALIZER
 \

91 {
PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
}

	)

93 #i‡
deföed
 
__PIC__


94 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

95 (
	`__exãnsi⁄__
 ({ 
	`__ty≥of
 (
FUNC
Ë*
_‚
 = (FUNC); \

96 
_‚
 !
NULL
 ? (*_‚Ë
ARGS
 : 
ELSE
; }))

	)

98 
	#__libc_maybe_ˇŒ
(
FUNC
, 
ARGS
, 
ELSE
) \

99 (
FUNC
 !
NULL
 ? FUNC 
ARGS
 : 
ELSE
)

	)

101 
	#__libc_maybe_ˇŒ2
(
FUNC
, 
ARGS
, 
ELSE
Ë
	`__libc_maybe_ˇŒ
 (
__
##FUNC, ARGS, ELSE)

	)

105 
	#__libc_lock_öô
(
NAME
) \

106 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_öô
, (&(
NAME
), 
NULL
), 0))

	)

107 
	#__libc_rwlock_öô
(
NAME
) \

108 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_öô
, (&(
NAME
), 
NULL
), 0));

	)

111 
	#__libc_lock_öô_ªcursive
(
NAME
) \

113 i‡(
__±hªad_muãx_öô
 !
NULL
) \

115 
±hªad_muãx©å_t
 
__©å
; \

116 
	`__±hªad_muãx©å_öô
 (&
__©å
); \

117 
	`__±hªad_muãx©å_£ây≥
 (&
__©å
, 
PTHREAD_MUTEX_RECURSIVE_NP
); \

118 
	`__±hªad_muãx_öô
 (&(
NAME
).
muãx
, &
__©å
); \

119 
	`__±hªad_muãx©å_de°roy
 (&
__©å
); \

121 } 0);

	)

122 
	#__πld_lock_öô_ªcursive
(
NAME
) \

123 
	`__libc_lock_öô_ªcursive
 (
NAME
)

	)

128 
	#__libc_lock_föi
(
NAME
) \

129 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_de°roy
, (&(
NAME
)), 0));

	)

130 
	#__libc_rwlock_föi
(
NAME
) \

131 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_de°roy
, (&(
NAME
)), 0));

	)

134 
	#__libc_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi
 ((NAME).
muãx
)

	)

135 
	#__πld_lock_föi_ªcursive
(
NAME
Ë
	`__libc_lock_föi_ªcursive
 (NAME)

	)

138 
	#__libc_lock_lock
(
NAME
) \

139 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_lock
, (&(
NAME
)), 0));

	)

140 
	#__libc_rwlock_rdlock
(
NAME
) \

141 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_rdlock
, (&(
NAME
)), 0));

	)

142 
	#__libc_rwlock_wæock
(
NAME
) \

143 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_wæock
, (&(
NAME
)), 0));

	)

146 
	#__libc_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock
 ((NAME).
muãx
)

	)

149 
	#__libc_lock_åylock
(
NAME
) \

150 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_åylock
, (&(
NAME
)), 0))

	)

151 
	#__libc_rwlock_åyrdlock
(
NAME
) \

152 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åyrdlock
, (&(
NAME
)), 0))

	)

153 
	#__libc_rwlock_åywæock
(
NAME
) \

154 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_åywæock
, (&(
NAME
)), 0))

	)

157 
	#__libc_lock_åylock_ªcursive
(
NAME
Ë
	`__libc_lock_åylock
 ((NAME).
muãx
)

	)

158 
	#__πld_lock_åylock_ªcursive
(
NAME
) \

159 
	`__libc_lock_åylock_ªcursive
 (
NAME
)

	)

162 
	#__libc_lock_u∆ock
(
NAME
) \

163 (
	`__libc_maybe_ˇŒ2
 (
±hªad_muãx_u∆ock
, (&(
NAME
)), 0));

	)

164 
	#__libc_rwlock_u∆ock
(
NAME
) \

165 (
	`__libc_maybe_ˇŒ
 (
__±hªad_rwlock_u∆ock
, (&(
NAME
)), 0));

	)

168 
	#__libc_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock
 ((NAME).
muãx
)

	)

170 
	#__πld_lock_lock_ªcursive
(
NAME
Ë
	`__libc_lock_lock_ªcursive
 (NAME)

	)

171 
	#__πld_lock_u∆ock_ªcursive
(
NAME
Ë
	`__libc_lock_u∆ock_ªcursive
 (NAME)

	)

174 #i‡
PTHREAD_ONCE_INIT
 == 0

177 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

178 
CLASS
 
±hªad_⁄˚_t
 
NAME


	)

180 
	#__libc_⁄˚_deföe
(
CLASS
, 
NAME
) \

181 
CLASS
 
±hªad_⁄˚_t
 
NAME
 = 
PTHREAD_ONCE_INIT


	)

185 
	#__libc_⁄˚
(
ONCE_CONTROL
, 
INIT_FUNCTION
) \

187 i‡(
__±hªad_⁄˚
 !
NULL
) \

188 
	`__±hªad_⁄˚
 (&(
ONCE_CONTROL
), (
INIT_FUNCTION
)); \

189 i‡((
ONCE_CONTROL
Ë=
PTHREAD_ONCE_INIT
) { \

190 
	`INIT_FUNCTION
 (); \

191 (
ONCE_CONTROL
) = 2; \

193 } 0)

	)

197 
	#__libc_˛ónup_ªgi⁄_°¨t
(
DOIT
, 
FCT
, 
ARG
) \

198 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

199 
_avaû
 = (
DOIT
Ë&& 
_±hªad_˛ónup_push_de„r
 !
NULL
; \

200 i‡(
_avaû
) { \

201 
	`_±hªad_˛ónup_push_de„r
 (&
_buf„r
, (
FCT
), (
ARG
)); \

202 }

	)

205 
	#__libc_˛ónup_ªgi⁄_íd
(
DOIT
) \

206 i‡(
_avaû
) { \

207 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

209 }

	)

212 
	#__libc_˛ónup_íd
(
DOIT
) \

213 i‡(
_avaû
) { \

214 
	`_±hªad_˛ónup_p›_ª°‹e
 (&
_buf„r
, (
DOIT
)); \

215 }

	)

217 
	#__libc_˛ónup_push
(
f˘
, 
¨g
) \

218 { 
_±hªad_˛ónup_buf„r
 
_buf„r
; \

219 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_push
, (&
_buf„r
, (
f˘
), (
¨g
)), 0)

	)

221 
	#__libc_˛ónup_p›
(
execuã
) \

222 
	`__libc_maybe_ˇŒ
 (
_±hªad_˛ónup_p›
, (&
_buf„r
, 
execuã
), 0); \

223 }

	)

226 
	#__libc_key_¸óã
(
KEY
, 
DESTRUCTOR
) \

227 (
	`__libc_maybe_ˇŒ
 (
__±hªad_key_¸óã
, (
KEY
, 
DESTRUCTOR
), 1))

	)

230 
	#__libc_gë•ecific
(
KEY
) \

231 (
	`__libc_maybe_ˇŒ
 (
__±hªad_gë•ecific
, (
KEY
), 
NULL
))

	)

234 
	#__libc_£t•ecific
(
KEY
, 
VALUE
) \

235 (
	`__libc_maybe_ˇŒ
 (
__±hªad_£t•ecific
, (
KEY
, 
VALUE
), 0))

	)

239 
	#__libc_©f‹k
(
PREPARE
, 
PARENT
, 
CHILD
) \

240 (
	`__libc_maybe_ˇŒ
 (
__±hªad_©f‹k
, (
PREPARE
, 
PARENT
, 
CHILD
), 0))

	)

242 
__BEGIN_DECLS


244 
_±hªad_˛ónup_push_de„r
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

245 (*
__routöe
) (*),

246 *
__¨g
Ë
__THROW
;

248 
	$_±hªad_˛ónup_p›_ª°‹e
 (
_±hªad_˛ónup_buf„r
 *
__buf„r
,

249 
__execuã
Ë
__THROW
;

255 
	`__±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

256 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx_©å
);

258 
	`__±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
);

260 
	`__±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
);

262 
	`__±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
);

264 
	`__±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
);

266 
	`__±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
);

268 
	`__±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
);

270 
	`__±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
,

271 
__köd
);

273 #ifde‡
__USE_UNIX98


274 
	`__±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__rwlock
,

275 
__c⁄°
 
±hªad_rwlock©å_t
 *
__©å
);

277 
	`__±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
);

279 
	`__±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

281 
	`__±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
);

283 
	`__±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
);

285 
	`__±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
);

287 
	`__±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
);

290 
	`__±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

291 (*
__de°r_fun˘i⁄
) (*));

293 
	`__±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

294 
__c⁄°
 *
__poöãr
);

296 *
	`__±hªad_gë•ecific
 (
±hªad_key_t
 
__key
);

298 
	`__±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

299 (*
__öô_routöe
) ());

301 
	`__±hªad_©f‹k
 ((*
__¥ï¨e
) (),

302 (*
__∑ª¡
) (),

303 (*
__chûd
) ());

305 
__END_DECLS


309 #i‚de‡
__NO_WEAK_PTHREAD_ALIASES


310 #¥agm®
wók
 
__±hªad_muãx_öô


311 #¥agm®
wók
 
__±hªad_muãx_de°roy


312 #¥agm®
wók
 
__±hªad_muãx_lock


313 #¥agm®
wók
 
__±hªad_muãx_åylock


314 #¥agm®
wók
 
__±hªad_muãx_u∆ock


315 #¥agm®
wók
 
__±hªad_muãx©å_öô


316 #¥agm®
wók
 
__±hªad_muãx©å_de°roy


317 #¥agm®
wók
 
__±hªad_muãx©å_£ây≥


318 #¥agm®
wók
 
__±hªad_rwlock_de°roy


319 #¥agm®
wók
 
__±hªad_rwlock_rdlock


320 #¥agm®
wók
 
__±hªad_rwlock_åyrdlock


321 #¥agm®
wók
 
__±hªad_rwlock_wæock


322 #¥agm®
wók
 
__±hªad_rwlock_åywæock


323 #¥agm®
wók
 
__±hªad_rwlock_u∆ock


324 #¥agm®
wók
 
__±hªad_key_¸óã


325 #¥agm®
wók
 
__±hªad_£t•ecific


326 #¥agm®
wók
 
__±hªad_gë•ecific


327 #¥agm®
wók
 
__±hªad_⁄˚


328 #¥agm®
wók
 
__±hªad_öôülize


329 #¥agm®
wók
 
__±hªad_©f‹k


330 #¥agm®
wók
 
_±hªad_˛ónup_push_de„r


331 #¥agm®
wók
 
_±hªad_˛ónup_p›_ª°‹e


332 #¥agm®
wók
 
_±hªad_˛ónup_push


333 #¥agm®
wók
 
_±hªad_˛ónup_p›


338 
	#__libc_muãx_u∆ock
 
__±hªad_muãx_u∆ock


	)

	@/usr/include/gconv.h

23 #i‚de‡
_GCONV_H


24 
	#_GCONV_H
 1

	)

26 
	~<„©uªs.h
>

27 
	#__√ed_mb°©e_t


	)

28 
	#__√ed_wöt_t


	)

29 
	~<wch¨.h
>

30 
	#__√ed_size_t


	)

31 
	#__√ed_wch¨_t


	)

32 
	~<°ddef.h
>

35 
	#__UNKNOWN_10646_CHAR
 ((
wch¨_t
Ë0xfffd)

	)

40 
	m__GCONV_OK
 = 0,

41 
	m__GCONV_NOCONV
,

42 
	m__GCONV_NODB
,

43 
	m__GCONV_NOMEM
,

45 
	m__GCONV_EMPTY_INPUT
,

46 
	m__GCONV_FULL_OUTPUT
,

47 
	m__GCONV_ILLEGAL_INPUT
,

48 
	m__GCONV_INCOMPLETE_INPUT
,

50 
	m__GCONV_ILLEGAL_DESCRIPTOR
,

51 
	m__GCONV_INTERNAL_ERROR


58 
	m__GCONV_IS_LAST
 = 0x0001,

59 
	m__GCONV_IGNORE_ERRORS
 = 0x0002,

60 
	m__GCONV_SWAP
 = 0x0004

65 
	g__gc⁄v_°ï
;

66 
	g__gc⁄v_°ï_d©a
;

67 
	g__gc⁄v_lﬂded_obje˘
;

68 
	g__gc⁄v_å™s_d©a
;

72 (*
	t__gc⁄v_f˘
Ë(
	t__gc⁄v_°ï
 *, 
	t__gc⁄v_°ï_d©a
 *,

73 
	t__c⁄°
 **, __const *,

74 **, 
	tsize_t
 *, , );

77 
	$wöt_t
 (*
	t__gc⁄v_btowc_f˘
Ë(
	t__gc⁄v_°ï
 *, );

80 (*
	t__gc⁄v_öô_f˘
Ë(
	t__gc⁄v_°ï
 *);

81 (*
	t__gc⁄v_íd_f˘
Ë(
	t__gc⁄v_°ï
 *);

85 (*
	t__gc⁄v_å™s_f˘
Ë(
	t__gc⁄v_°ï
 *,

86 
	t__gc⁄v_°ï_d©a
 *, *,

87 
	t__c⁄°
 *,

88 
	t__c⁄°
 **,

89 
	t__c⁄°
 *, **,

90 
	tsize_t
 *);

93 (*
	t__gc⁄v_å™s_c⁄ãxt_f˘
Ë(*, 
	t__c⁄°
 *,

94 
	t__c⁄°
 *,

98 (*
	t__gc⁄v_å™s_quîy_f˘
Ë(
	t__c⁄°
 *, __const ***,

99 
	tsize_t
 *);

102 (*
	t__gc⁄v_å™s_öô_f˘
) (**, const *);

103 (*
	t__gc⁄v_å™s_íd_f˘
) (*);

105 
	s__gc⁄v_å™s_d©a


108 
__gc⁄v_å™s_f˘
 
__å™s_f˘
;

109 
__gc⁄v_å™s_c⁄ãxt_f˘
 
__å™s_c⁄ãxt_f˘
;

110 
__gc⁄v_å™s_íd_f˘
 
__å™s_íd_f˘
;

111 *
__d©a
;

112 
__gc⁄v_å™s_d©a
 *
__√xt
;

117 
	s__gc⁄v_°ï


119 
__gc⁄v_lﬂded_obje˘
 *
__shlib_h™dÀ
;

120 
__c⁄°
 *
__mod«me
;

122 
__cou¡î
;

124 *
__‰om_«me
;

125 *
__to_«me
;

127 
__gc⁄v_f˘
 
__f˘
;

128 
__gc⁄v_btowc_f˘
 
__btowc_f˘
;

129 
__gc⁄v_öô_f˘
 
__öô_f˘
;

130 
__gc⁄v_íd_f˘
 
__íd_f˘
;

134 
__mö_√eded_‰om
;

135 
__max_√eded_‰om
;

136 
__mö_√eded_to
;

137 
__max_√eded_to
;

140 
__°©eful
;

142 *
__d©a
;

147 
	s__gc⁄v_°ï_d©a


149 *
__outbuf
;

150 *
__outbu„nd
;

154 
__Êags
;

158 
__övoˇti⁄_cou¡î
;

162 
__öã∫Æ_u£
;

164 
__mb°©e_t
 *
__°©ï
;

165 
__mb°©e_t
 
__°©e
;

169 
__gc⁄v_å™s_d©a
 *
__å™s
;

174 
	s__gc⁄v_öfo


176 
size_t
 
__n°ïs
;

177 
__gc⁄v_°ï
 *
__°ïs
;

178 
__exãnsi⁄__
 
__gc⁄v_°ï_d©a
 
__d©a
 
__Êex¨r
;

179 } *
	t__gc⁄v_t
;

	@/usr/include/gnu/stubs-64.h

6 #ifde‡
_LIBC


7 #îr‹ 
Aµliˇti⁄s
 
may
 
nŸ
 
deföe
 
the
 
ma¸o
 
_LIBC


10 
	#__°ub_bdÊush


	)

11 
	#__°ub_chÊags


	)

12 
	#__°ub_Áâach


	)

13 
	#__°ub_fchÊags


	)

14 
	#__°ub_fdëach


	)

15 
	#__°ub_gëmsg


	)

16 
	#__°ub_gây


	)

17 
	#__°ub_lchmod


	)

18 
	#__°ub_putmsg


	)

19 
	#__°ub_ªvoke


	)

20 
	#__°ub_£éogö


	)

21 
	#__°ub_sigªtu∫


	)

22 
	#__°ub_s°k


	)

23 
	#__°ub_°ty


	)

	@/usr/include/linux/posix_types.h

1 #i‚de‡
_LINUX_POSIX_TYPES_H


2 
	#_LINUX_POSIX_TYPES_H


	)

4 
	~<löux/°ddef.h
>

21 #unde‡
__NFDBITS


22 
	#__NFDBITS
 (8 * ())

	)

24 #unde‡
__FD_SETSIZE


25 
	#__FD_SETSIZE
 1024

	)

27 #unde‡
__FDSET_LONGS


28 
	#__FDSET_LONGS
 (
__FD_SETSIZE
/
__NFDBITS
)

	)

30 #unde‡
__FDELT


31 
	#__FDELT
(
d
Ë((dË/ 
__NFDBITS
)

	)

33 #unde‡
__FDMASK


34 
	#__FDMASK
(
d
Ë(1UL << ((dË% 
__NFDBITS
))

	)

37 
	mfds_bôs
 [
__FDSET_LONGS
];

38 } 
	t__kî√l_fd_£t
;

41 (*
	t__kî√l_sigh™dÀr_t
)();

44 
	t__kî√l_key_t
;

45 
	t__kî√l_mqd_t
;

47 
	~<asm/posix_ty≥s.h
>

	@/usr/include/wchar.h

24 #i‚de‡
_WCHAR_H


26 #i‡!
deföed
 
__√ed_mb°©e_t
 && !deföed 
__√ed_wöt_t


27 
	#_WCHAR_H
 1

	)

28 
	~<„©uªs.h
>

31 #ifde‡
_WCHAR_H


33 
	#__√ed___FILE


	)

34 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


35 
	#__√ed_FILE


	)

37 
	~<°dio.h
>

39 
	#__√ed___va_li°


	)

40 
	~<°d¨g.h
>

42 
	~<bôs/wch¨.h
>

45 
	#__√ed_size_t


	)

46 
	#__√ed_wch¨_t


	)

47 
	#__√ed_NULL


	)

49 #i‡
deföed
 
_WCHAR_H
 || deföed 
__√ed_wöt_t
 || !deföed 
__WINT_TYPE__


50 #unde‡
__√ed_wöt_t


51 
	#__√ed_wöt_t


	)

52 
	~<°ddef.h
>

56 #i‚de‡
_WINT_T


61 
	#_WINT_T


	)

62 
	twöt_t
;

66 #i‡
deföed
 
__˝lu•lus
 && deföed 
_GLIBCPP_USE_NAMESPACES
 \

67 && 
deföed
 
__WINT_TYPE__


68 
__BEGIN_NAMESPACE_STD


69 
__WINT_TYPE__
 
	twöt_t
;

70 
	g__END_NAMESPACE_STD


75 #i‡
deföed
 
__˝lu•lus
 && 
__GNUC_PREREQ
 (4, 4)

76 
	#__CORRECT_ISO_CPP_WCHAR_H_PROTO


	)

80 #i‡(
deföed
 
_WCHAR_H
 || deföed 
__√ed_mb°©e_t
Ë&& !deföed 
__mb°©e_t_deföed


81 
	#__mb°©e_t_deföed
 1

	)

85 
	m__cou¡
;

88 #ifde‡
__WINT_TYPE__


89 
__WINT_TYPE__
 
	m__wch
;

91 
wöt_t
 
	m__wch
;

93 
	m__wchb
[4];

94 } 
	m__vÆue
;

95 } 
	t__mb°©e_t
;

97 #unde‡
__√ed_mb°©e_t


102 #ifde‡
_WCHAR_H


104 
__BEGIN_NAMESPACE_C99


106 
__mb°©e_t
 
	tmb°©e_t
;

107 
	g__END_NAMESPACE_C99


108 #ifde‡
__USE_GNU


109 
	$__USING_NAMESPACE_C99
(
mb°©e_t
)

112 #i‚de‡
WCHAR_MIN


114 
	#WCHAR_MIN
 
__WCHAR_MIN


	)

115 
	#WCHAR_MAX
 
__WCHAR_MAX


	)

118 #i‚de‡
WEOF


119 
	#WEOF
 (0xffffffffu)

	)

124 #i‡
deföed
 
__USE_XOPEN
 && !deföed 
__USE_UNIX98


125 
	~<w˘y≥.h
>

129 
__BEGIN_DECLS


131 
__BEGIN_NAMESPACE_STD


134 
tm
;

135 
__END_NAMESPACE_STD


139 
	$__USING_NAMESPACE_STD
(
tm
)

142 
__BEGIN_NAMESPACE_STD


144 
wch¨_t
 *
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

145 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

147 
wch¨_t
 *
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

148 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

149 
__THROW
;

152 
wch¨_t
 *
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

153 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

155 
wch¨_t
 *
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

156 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

157 
__THROW
;

160 
	$wcscmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
)

161 
__THROW
 
__©åibuã_puª__
;

163 
	$wc¢cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

164 
__THROW
 
__©åibuã_puª__
;

165 
__END_NAMESPACE_STD


167 #ifde‡
__USE_XOPEN2K8


169 
	$wcsˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

172 
	$wc¢ˇ£cmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

173 
size_t
 
__n
Ë
__THROW
;

177 
	~<xloˇÀ.h
>

179 
	$wcsˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

180 
__loˇÀ_t
 
__loc
Ë
__THROW
;

182 
	$wc¢ˇ£cmp_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

183 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

186 
__BEGIN_NAMESPACE_STD


189 
	$wcscﬁl
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
Ë
__THROW
;

193 
size_t
 
	$wcsx‰m
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

194 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

195 
__END_NAMESPACE_STD


197 #ifde‡
__USE_XOPEN2K8


203 
	$wcscﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
,

204 
__loˇÀ_t
 
__loc
Ë
__THROW
;

209 
size_t
 
	$wcsx‰m_l
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

210 
size_t
 
__n
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

213 
wch¨_t
 *
	$wcsdup
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_mÆloc__
;

216 
__BEGIN_NAMESPACE_STD


218 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


219 "C++" 
wch¨_t
 *
	$wcschr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

220 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

221 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

222 
__THROW
 
	`__asm
 ("wcschr"Ë
__©åibuã_puª__
;

224 
wch¨_t
 *
	$wcschr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

225 
__THROW
 
__©åibuã_puª__
;

228 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


229 "C++" 
wch¨_t
 *
	$wc§chr
 (
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

230 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

231 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

232 
__THROW
 
	`__asm
 ("wc§chr"Ë
__©åibuã_puª__
;

234 
wch¨_t
 *
	$wc§chr
 (
__c⁄°
 
wch¨_t
 *
__wcs
, wch¨_à
__wc
)

235 
__THROW
 
__©åibuã_puª__
;

237 
__END_NAMESPACE_STD


239 #ifde‡
__USE_GNU


242 
wch¨_t
 *
	$wcsch∫ul
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__wc
)

243 
__THROW
 
__©åibuã_puª__
;

246 
__BEGIN_NAMESPACE_STD


249 
size_t
 
	$wcsc•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ªje˘
)

250 
__THROW
 
__©åibuã_puª__
;

253 
size_t
 
	$wcs•n
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

254 
__THROW
 
__©åibuã_puª__
;

256 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


257 "C++" 
wch¨_t
 *
	$wc•brk
 (
wch¨_t
 *
__wcs
, 
__c⁄°
 wch¨_à*
__ac˚±
)

258 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

259 "C++" 
__c⁄°
 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
,

260 
__c⁄°
 
wch¨_t
 *
__ac˚±
)

261 
__THROW
 
	`__asm
 ("wc•brk"Ë
__©åibuã_puª__
;

263 
wch¨_t
 *
	$wc•brk
 (
__c⁄°
 
wch¨_t
 *
__wcs
, __c⁄° wch¨_à*
__ac˚±
)

264 
__THROW
 
__©åibuã_puª__
;

267 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


268 "C++" 
wch¨_t
 *
	$wcs°r
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

269 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

270 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

271 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

272 
__THROW
 
	`__asm
 ("wcs°r"Ë
__©åibuã_puª__
;

274 
wch¨_t
 *
	$wcs°r
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

275 
__THROW
 
__©åibuã_puª__
;

279 
wch¨_t
 *
	$wc°ok
 (
wch¨_t
 *
__ª°ri˘
 
__s
,

280 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__dñim
,

281 
wch¨_t
 **
__ª°ri˘
 
__±r
Ë
__THROW
;

284 
size_t
 
	$wc¶í
 (
__c⁄°
 
wch¨_t
 *
__s
Ë
__THROW
 
__©åibuã_puª__
;

285 
__END_NAMESPACE_STD


287 #ifde‡
__USE_XOPEN


289 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


290 "C++" 
wch¨_t
 *
	$wcswcs
 (
wch¨_t
 *
__hay°ack
, 
__c⁄°
 wch¨_à*
__√edÀ
)

291 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

292 "C++" 
__c⁄°
 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
,

293 
__c⁄°
 
wch¨_t
 *
__√edÀ
)

294 
__THROW
 
	`__asm
 ("wcswcs"Ë
__©åibuã_puª__
;

296 
wch¨_t
 *
	$wcswcs
 (
__c⁄°
 
wch¨_t
 *
__hay°ack
, __c⁄° wch¨_à*
__√edÀ
)

297 
__THROW
 
__©åibuã_puª__
;

301 #ifde‡
__USE_XOPEN2K8


303 
size_t
 
	$wc¢Àn
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__maxÀn
)

304 
__THROW
 
__©åibuã_puª__
;

308 
__BEGIN_NAMESPACE_STD


310 #ifde‡
__CORRECT_ISO_CPP_WCHAR_H_PROTO


311 "C++" 
wch¨_t
 *
	$wmemchr
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

312 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

313 "C++" 
__c⁄°
 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
,

314 
size_t
 
__n
)

315 
__THROW
 
	`__asm
 ("wmemchr"Ë
__©åibuã_puª__
;

317 
wch¨_t
 *
	$wmemchr
 (
__c⁄°
 
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
)

318 
__THROW
 
__©åibuã_puª__
;

322 
	$wmemcmp
 (
__c⁄°
 
wch¨_t
 *
__s1
, __c⁄° wch¨_à*
__s2
, 
size_t
 
__n
)

323 
__THROW
 
__©åibuã_puª__
;

326 
wch¨_t
 *
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

327 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
Ë
__THROW
;

331 
wch¨_t
 *
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
)

332 
__THROW
;

335 
wch¨_t
 *
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
Ë
__THROW
;

336 
__END_NAMESPACE_STD


338 #ifde‡
__USE_GNU


341 
wch¨_t
 *
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

342 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
)

343 
__THROW
;

347 
__BEGIN_NAMESPACE_STD


350 
wöt_t
 
	$btowc
 (
__c
Ë
__THROW
;

354 
	$w˘ob
 (
wöt_t
 
__c
Ë
__THROW
;

358 
	$mbsöô
 (
__c⁄°
 
mb°©e_t
 *
__ps
Ë
__THROW
 
__©åibuã_puª__
;

362 
size_t
 
	$mbπowc
 (
wch¨_t
 *
__ª°ri˘
 
__pwc
,

363 
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

364 
mb°©e_t
 *
__p
Ë
__THROW
;

367 
size_t
 
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wc
,

368 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

371 
size_t
 
	$__mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

372 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

373 
size_t
 
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

374 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

375 
__END_NAMESPACE_STD


377 #ifde‡
__USE_EXTERN_INLINES


383 
wöt_t
 
	$__btowc_Æüs
 (
__c
Ë
	`__asm
 ("btowc");

384 
__exã∫_ölöe
 
wöt_t


385 
	`__NTH
 (
	$btowc
 (
__c
))

386 {  (
	`__buûtö_c⁄°™t_p
 (
__c
) && __c >= '\0' && __c <= '\x7f'

387 ? (
wöt_t
Ë
__c
 : 
	`__btowc_Æüs
 (__c)); 
	}
}

389 
	$__w˘ob_Æüs
 (
wöt_t
 
__c
Ë
	`__asm
 ("wctob");

390 
__exã∫_ölöe
 

391 
	`__NTH
 (
	$w˘ob
 (
wöt_t
 
__wc
))

392 {  (
	`__buûtö_c⁄°™t_p
 (
__wc
Ë&& __w¯>
L
'\0' && __wc <= L'\x7f'

393 ? (Ë
__wc
 : 
	`__w˘ob_Æüs
 (__wc)); 
	}
}

395 
__exã∫_ölöe
 
size_t


396 
__NTH
 (
	$mbæí
 (
__c⁄°
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

397 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

398 {  (
__ps
 !
NULL


399 ? 
	`mbπowc
 (
NULL
, 
__s
, 
__n
, 
__ps
Ë: 
	`__mbæí
 (__s, __n, NULL)); 
	}
}

402 
__BEGIN_NAMESPACE_STD


405 
size_t
 
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

406 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

407 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

411 
size_t
 
	$wc§tombs
 (*
__ª°ri˘
 
__d°
,

412 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
, 
size_t
 
__Àn
,

413 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

414 
__END_NAMESPACE_STD


417 #ifdef 
__USE_XOPEN2K8


420 
size_t
 
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

421 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

422 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

426 
size_t
 
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
,

427 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

428 
size_t
 
__nwc
, size_à
__Àn
,

429 
mb°©e_t
 *
__ª°ri˘
 
__ps
Ë
__THROW
;

434 #ifde‡
__USE_XOPEN


436 
	$wcwidth
 (
wch¨_t
 
__c
Ë
__THROW
;

440 
	$wcswidth
 (
__c⁄°
 
wch¨_t
 *
__s
, 
size_t
 
__n
Ë
__THROW
;

444 
__BEGIN_NAMESPACE_STD


447 
	$wc°od
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

448 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

449 
__END_NAMESPACE_STD


451 #ifde‡
__USE_ISOC99


452 
__BEGIN_NAMESPACE_C99


454 
	$wc°of
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

455 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

456 
	$wc°ﬁd
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

457 
wch¨_t
 **
__ª°ri˘
 
__íd±r
Ë
__THROW
;

458 
__END_NAMESPACE_C99


462 
__BEGIN_NAMESPACE_STD


465 
	$wc°ﬁ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

466 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
Ë
__THROW
;

470 
	$wc°oul
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

471 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

472 
__THROW
;

473 
__END_NAMESPACE_STD


475 #i‡
deföed
 
__USE_ISOC99
 || (deföed 
__GNUC__
 && deföed 
__USE_GNU
)

476 
__BEGIN_NAMESPACE_C99


479 
__exãnsi⁄__


480 
	$wc°ﬁl
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

481 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

482 
__THROW
;

486 
__exãnsi⁄__


487 
	$wc°ouŒ
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

488 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

489 
__ba£
Ë
__THROW
;

490 
__END_NAMESPACE_C99


493 #i‡
deföed
 
__GNUC__
 && deföed 
__USE_GNU


496 
__exãnsi⁄__


497 
	$wc°oq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

498 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
)

499 
__THROW
;

503 
__exãnsi⁄__


504 
	$wc°ouq
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

505 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

506 
__ba£
Ë
__THROW
;

509 #ifde‡
__USE_GNU


523 
	~<xloˇÀ.h
>

527 
	$wc°ﬁ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

528 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__ba£
,

529 
__loˇÀ_t
 
__loc
Ë
__THROW
;

531 
	$wc°oul_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

532 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

533 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

535 
__exãnsi⁄__


536 
	$wc°ﬁl_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

537 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

538 
__ba£
, 
__loˇÀ_t
 
__loc
Ë
__THROW
;

540 
__exãnsi⁄__


541 
	$wc°ouŒ_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

542 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

543 
__ba£
, 
__loˇÀ_t
 
__loc
)

544 
__THROW
;

546 
	$wc°od_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

547 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

548 
__THROW
;

550 
	$wc°of_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

551 
wch¨_t
 **
__ª°ri˘
 
__íd±r
, 
__loˇÀ_t
 
__loc
)

552 
__THROW
;

554 
	$wc°ﬁd_l
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__≈å
,

555 
wch¨_t
 **
__ª°ri˘
 
__íd±r
,

556 
__loˇÀ_t
 
__loc
Ë
__THROW
;

560 #ifde‡
__USE_XOPEN2K8


563 
wch¨_t
 *
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

564 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
Ë
__THROW
;

568 
wch¨_t
 *
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

569 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
)

570 
__THROW
;

577 
__FILE
 *
	$›í_wmem°ªam
 (
wch¨_t
 **
__buÊoc
, 
size_t
 *
__sizñoc
Ë
__THROW
;

580 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


581 
__BEGIN_NAMESPACE_STD


584 
	$fwide
 (
__FILE
 *
__Â
, 
__mode
Ë
__THROW
;

591 
	`fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

592 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

598 
	`w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

601 
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

602 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

603 
__THROW
 ;

609 
	`vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__s
,

610 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

611 
__gnuc_va_li°
 
__¨g
)

617 
	`vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

618 
__gnuc_va_li°
 
__¨g
)

622 
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

623 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

624 
__gnuc_va_li°
 
__¨g
)

625 
__THROW
 ;

632 
	`fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

633 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

639 
	`wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

642 
	$swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

643 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

644 
__THROW
 ;

646 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

647 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

648 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

649 #ifde‡
__REDIRECT


653 
	`__REDIRECT
 (
fwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__°ªam
,

654 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

655 
__isoc99_fwsˇnf
)

657 
	`__REDIRECT
 (
wsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...),

658 
__isoc99_wsˇnf
)

660 
	`__REDIRECT_NTH
 (
swsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

661 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

662 ...), 
__isoc99_swsˇnf
)

665 
	`__isoc99_fwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

666 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

667 
	`__isoc99_wsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

668 
	$__isoc99_swsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

669 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

670 
__THROW
;

671 
	#fwsˇnf
 
__isoc99_fwsˇnf


	)

672 
	#wsˇnf
 
__isoc99_wsˇnf


	)

673 
	#swsˇnf
 
__isoc99_swsˇnf


	)

677 
__END_NAMESPACE_STD


680 #ifde‡
__USE_ISOC99


681 
__BEGIN_NAMESPACE_C99


686 
	`vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

687 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

688 
__gnuc_va_li°
 
__¨g
)

694 
	`vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

695 
__gnuc_va_li°
 
__¨g
)

698 
	$vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

699 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

700 
__gnuc_va_li°
 
__¨g
)

701 
__THROW
 ;

703 #i‡!
deföed
 
__USE_GNU
 \

704 && (!
deföed
 
__LDBL_COMPAT
 || !deföed 
__REDIRECT
) \

705 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

706 #ifde‡
__REDIRECT


707 
	`__REDIRECT
 (
vfwsˇnf
, (
__FILE
 *
__ª°ri˘
 
__s
,

708 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

709 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vfwsˇnf
)

711 
	`__REDIRECT
 (
vwsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

712 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vwsˇnf
)

714 
	`__REDIRECT_NTH
 (
vswsˇnf
, (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

715 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

716 
__gnuc_va_li°
 
__¨g
), 
__isoc99_vswsˇnf
)

719 
	`__isoc99_vfwsˇnf
 (
__FILE
 *
__ª°ri˘
 
__s
,

720 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

721 
__gnuc_va_li°
 
__¨g
);

722 
	`__isoc99_vwsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

723 
__gnuc_va_li°
 
__¨g
);

724 
	$__isoc99_vswsˇnf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s
,

725 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

726 
__gnuc_va_li°
 
__¨g
Ë
__THROW
;

727 
	#vfwsˇnf
 
__isoc99_vfwsˇnf


	)

728 
	#vwsˇnf
 
__isoc99_vwsˇnf


	)

729 
	#vswsˇnf
 
__isoc99_vswsˇnf


	)

733 
__END_NAMESPACE_C99


737 
__BEGIN_NAMESPACE_STD


742 
wöt_t
 
	`fgëwc
 (
__FILE
 *
__°ªam
);

743 
wöt_t
 
	`gëwc
 (
__FILE
 *
__°ªam
);

749 
wöt_t
 
	`gëwch¨
 ();

756 
wöt_t
 
	`Âutwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

757 
wöt_t
 
	`putwc
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

763 
wöt_t
 
	`putwch¨
 (
wch¨_t
 
__wc
);

771 
wch¨_t
 *
	`fgëws
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

772 
__FILE
 *
__ª°ri˘
 
__°ªam
);

778 
	`Âutws
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

779 
__FILE
 *
__ª°ri˘
 
__°ªam
);

786 
wöt_t
 
	`ungëwc
 (wöt_à
__wc
, 
__FILE
 *
__°ªam
);

787 
__END_NAMESPACE_STD


790 #ifde‡
__USE_GNU


798 
wöt_t
 
	`gëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

799 
wöt_t
 
	`gëwch¨_u∆ocked
 ();

807 
wöt_t
 
	`fgëwc_u∆ocked
 (
__FILE
 *
__°ªam
);

815 
wöt_t
 
	`Âutwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

824 
wöt_t
 
	`putwc_u∆ocked
 (
wch¨_t
 
__wc
, 
__FILE
 *
__°ªam
);

825 
wöt_t
 
	`putwch¨_u∆ocked
 (
wch¨_t
 
__wc
);

834 
wch¨_t
 *
	`fgëws_u∆ocked
 (wch¨_à*
__ª°ri˘
 
__ws
, 
__n
,

835 
__FILE
 *
__ª°ri˘
 
__°ªam
);

843 
	`Âutws_u∆ocked
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__ws
,

844 
__FILE
 *
__ª°ri˘
 
__°ªam
);

848 
__BEGIN_NAMESPACE_C99


852 
size_t
 
	$wcs·ime
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

853 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

854 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
Ë
__THROW
;

855 
__END_NAMESPACE_C99


857 #ifde‡
__USE_GNU


858 
	~<xloˇÀ.h
>

862 
size_t
 
	$wcs·ime_l
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__maxsize
,

863 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

864 
__c⁄°
 
tm
 *
__ª°ri˘
 
__ç
,

865 
__loˇÀ_t
 
__loc
Ë
__THROW
;

874 #i‡
deföed
 
__USE_UNIX98
 && !deföed 
__USE_GNU


875 
	#__√ed_iswxxx


	)

876 
	~<w˘y≥.h
>

880 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


881 
	~<bôs/wch¨2.h
>

884 #ifde‡
__LDBL_COMPAT


885 
	~<bôs/wch¨-ldbl.h
>

888 
__END_DECLS


896 #unde‡
__√ed_mb°©e_t


897 #unde‡
__√ed_wöt_t


	@/usr/include/asm-generic/errno.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_H


2 
	#_ASM_GENERIC_ERRNO_H


	)

4 
	~<asm-gíîic/î∫o-ba£.h
>

6 
	#EDEADLK
 35

	)

7 
	#ENAMETOOLONG
 36

	)

8 
	#ENOLCK
 37

	)

9 
	#ENOSYS
 38

	)

10 
	#ENOTEMPTY
 39

	)

11 
	#ELOOP
 40

	)

12 
	#EWOULDBLOCK
 
EAGAIN


	)

13 
	#ENOMSG
 42

	)

14 
	#EIDRM
 43

	)

15 
	#ECHRNG
 44

	)

16 
	#EL2NSYNC
 45

	)

17 
	#EL3HLT
 46

	)

18 
	#EL3RST
 47

	)

19 
	#ELNRNG
 48

	)

20 
	#EUNATCH
 49

	)

21 
	#ENOCSI
 50

	)

22 
	#EL2HLT
 51

	)

23 
	#EBADE
 52

	)

24 
	#EBADR
 53

	)

25 
	#EXFULL
 54

	)

26 
	#ENOANO
 55

	)

27 
	#EBADRQC
 56

	)

28 
	#EBADSLT
 57

	)

30 
	#EDEADLOCK
 
EDEADLK


	)

32 
	#EBFONT
 59

	)

33 
	#ENOSTR
 60

	)

34 
	#ENODATA
 61

	)

35 
	#ETIME
 62

	)

36 
	#ENOSR
 63

	)

37 
	#ENONET
 64

	)

38 
	#ENOPKG
 65

	)

39 
	#EREMOTE
 66

	)

40 
	#ENOLINK
 67

	)

41 
	#EADV
 68

	)

42 
	#ESRMNT
 69

	)

43 
	#ECOMM
 70

	)

44 
	#EPROTO
 71

	)

45 
	#EMULTIHOP
 72

	)

46 
	#EDOTDOT
 73

	)

47 
	#EBADMSG
 74

	)

48 
	#EOVERFLOW
 75

	)

49 
	#ENOTUNIQ
 76

	)

50 
	#EBADFD
 77

	)

51 
	#EREMCHG
 78

	)

52 
	#ELIBACC
 79

	)

53 
	#ELIBBAD
 80

	)

54 
	#ELIBSCN
 81

	)

55 
	#ELIBMAX
 82

	)

56 
	#ELIBEXEC
 83

	)

57 
	#EILSEQ
 84

	)

58 
	#ERESTART
 85

	)

59 
	#ESTRPIPE
 86

	)

60 
	#EUSERS
 87

	)

61 
	#ENOTSOCK
 88

	)

62 
	#EDESTADDRREQ
 89

	)

63 
	#EMSGSIZE
 90

	)

64 
	#EPROTOTYPE
 91

	)

65 
	#ENOPROTOOPT
 92

	)

66 
	#EPROTONOSUPPORT
 93

	)

67 
	#ESOCKTNOSUPPORT
 94

	)

68 
	#EOPNOTSUPP
 95

	)

69 
	#EPFNOSUPPORT
 96

	)

70 
	#EAFNOSUPPORT
 97

	)

71 
	#EADDRINUSE
 98

	)

72 
	#EADDRNOTAVAIL
 99

	)

73 
	#ENETDOWN
 100

	)

74 
	#ENETUNREACH
 101

	)

75 
	#ENETRESET
 102

	)

76 
	#ECONNABORTED
 103

	)

77 
	#ECONNRESET
 104

	)

78 
	#ENOBUFS
 105

	)

79 
	#EISCONN
 106

	)

80 
	#ENOTCONN
 107

	)

81 
	#ESHUTDOWN
 108

	)

82 
	#ETOOMANYREFS
 109

	)

83 
	#ETIMEDOUT
 110

	)

84 
	#ECONNREFUSED
 111

	)

85 
	#EHOSTDOWN
 112

	)

86 
	#EHOSTUNREACH
 113

	)

87 
	#EALREADY
 114

	)

88 
	#EINPROGRESS
 115

	)

89 
	#ESTALE
 116

	)

90 
	#EUCLEAN
 117

	)

91 
	#ENOTNAM
 118

	)

92 
	#ENAVAIL
 119

	)

93 
	#EISNAM
 120

	)

94 
	#EREMOTEIO
 121

	)

95 
	#EDQUOT
 122

	)

97 
	#ENOMEDIUM
 123

	)

98 
	#EMEDIUMTYPE
 124

	)

99 
	#ECANCELED
 125

	)

100 
	#ENOKEY
 126

	)

101 
	#EKEYEXPIRED
 127

	)

102 
	#EKEYREVOKED
 128

	)

103 
	#EKEYREJECTED
 129

	)

106 
	#EOWNERDEAD
 130

	)

107 
	#ENOTRECOVERABLE
 131

	)

109 
	#ERFKILL
 132

	)

111 
	#EHWPOISON
 133

	)

	@/usr/include/asm-generic/types.h

1 #i‚de‡
_ASM_GENERIC_TYPES_H


2 
	#_ASM_GENERIC_TYPES_H


	)

7 
	~<asm-gíîic/öt-Œ64.h
>

	@/usr/include/asm/posix_types.h

1 #ifde‡
__i386__


2 
	~"posix_ty≥s_32.h
"

4 
	~"posix_ty≥s_64.h
"

	@/usr/include/bits/wchar-ldbl.h

20 #i‚de‡
_WCHAR_H


24 #i‡
deföed
 
__USE_ISOC95
 || deföed 
__USE_UNIX98


25 
__BEGIN_NAMESPACE_C99


26 
__LDBL_REDIR_DECL
 (
fw¥ötf
);

27 
__LDBL_REDIR_DECL
 (
w¥ötf
);

28 
__LDBL_REDIR_DECL
 (
sw¥ötf
);

29 
__LDBL_REDIR_DECL
 (
vfw¥ötf
);

30 
__LDBL_REDIR_DECL
 (
vw¥ötf
);

31 
__LDBL_REDIR_DECL
 (
vsw¥ötf
);

32 #i‡
deföed
 
__USE_ISOC99
 && !deföed 
__USE_GNU
 \

33 && !
deföed
 
	g__REDIRECT
 \

34 && (
deföed
 
	g__STRICT_ANSI__
 || deföed 
	g__USE_XOPEN2K
)

35 
	$__LDBL_REDIR1_DECL
 (
fwsˇnf
, 
__∆dbl___isoc99_fwsˇnf
)

36 
	$__LDBL_REDIR1_DECL
 (
wsˇnf
, 
__∆dbl___isoc99_wsˇnf
)

37 
	$__LDBL_REDIR1_DECL
 (
swsˇnf
, 
__∆dbl___isoc99_swsˇnf
)

39 
	`__LDBL_REDIR_DECL
 (
fwsˇnf
);

40 
	`__LDBL_REDIR_DECL
 (
wsˇnf
);

41 
	`__LDBL_REDIR_DECL
 (
swsˇnf
);

43 
__END_NAMESPACE_C99


46 #ifde‡
__USE_ISOC99


47 
__BEGIN_NAMESPACE_C99


48 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd
, 
wc°od
);

49 #i‡!
deföed
 
__USE_GNU
 && !deföed 
__REDIRECT
 \

50 && (
deföed
 
__STRICT_ANSI__
 || deföed 
__USE_XOPEN2K
)

51 
	$__LDBL_REDIR1_DECL
 (
vfwsˇnf
, 
__∆dbl___isoc99_vfwsˇnf
)

52 
	$__LDBL_REDIR1_DECL
 (
vwsˇnf
, 
__∆dbl___isoc99_vwsˇnf
)

53 
	$__LDBL_REDIR1_DECL
 (
vswsˇnf
, 
__∆dbl___isoc99_vswsˇnf
)

55 
	`__LDBL_REDIR_DECL
 (
vfwsˇnf
);

56 
	`__LDBL_REDIR_DECL
 (
vwsˇnf
);

57 
	`__LDBL_REDIR_DECL
 (
vswsˇnf
);

59 
__END_NAMESPACE_C99


62 #ifde‡
__USE_GNU


63 
	`__LDBL_REDIR1_DECL
 (
wc°ﬁd_l
, 
wc°od_l
);

66 #i‡
__USE_FORTIFY_LEVEL
 > 0 && 
deföed
 
__exã∫_Æways_ölöe


67 
	$__LDBL_REDIR_DECL
 (
__sw¥ötf_chk
)

68 
	$__LDBL_REDIR_DECL
 (
__vsw¥ötf_chk
)

69 #i‡
__USE_FORTIFY_LEVEL
 > 1

70 
	$__LDBL_REDIR_DECL
 (
__fw¥ötf_chk
)

71 
	$__LDBL_REDIR_DECL
 (
__w¥ötf_chk
)

72 
	$__LDBL_REDIR_DECL
 (
__vfw¥ötf_chk
)

73 
	$__LDBL_REDIR_DECL
 (
__vw¥ötf_chk
)

	@/usr/include/bits/wchar.h

20 #i‚de‡
_BITS_WCHAR_H


21 
	#_BITS_WCHAR_H
 1

	)

23 
	#__WCHAR_MIN
 (-2147483647 - 1)

	)

24 
	#__WCHAR_MAX
 (2147483647)

	)

	@/usr/include/bits/wchar2.h

20 #i‚de‡
_WCHAR_H


25 
wch¨_t
 *
	$__wmem˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

26 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

27 
size_t
 
__ns1
Ë
__THROW
;

28 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_Æüs
,

29 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

30 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
),

31 
wmem˝y
);

32 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem˝y_chk_w¨n
,

33 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

34 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

35 
size_t
 
__ns1
), 
__wmem˝y_chk
)

36 
	`__w¨«âr
 ("wmemcpy called withÜength biggerÅhan size of destination "

39 
__exã∫_Æways_ölöe
 
wch¨_t
 *

40 
	`__NTH
 (
	$wmem˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

41 
size_t
 
__n
))

43 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

45 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

46  
	`__wmem˝y_chk
 (
__s1
, 
__s2
, 
__n
,

47 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

49 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

50  
	`__wmem˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

51 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

53  
	`__wmem˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

54 
	}
}

57 
wch¨_t
 *
	$__wmemmove_chk
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

58 
size_t
 
__n
, size_à
__ns1
Ë
__THROW
;

59 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_Æüs
, (wch¨_à*
__s1
,

60 
__c⁄°
 
wch¨_t
 *
__s2
,

61 
size_t
 
__n
), 
wmemmove
);

62 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemmove_chk_w¨n
,

63 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
,

64 
size_t
 
__n
, size_à
__ns1
), 
__wmemmove_chk
)

65 
	`__w¨«âr
 ("wmemmove called withÜength biggerÅhan size of destination "

68 
__exã∫_Æways_ölöe
 
wch¨_t
 *

69 
	`__NTH
 (
	$wmemmove
 (
wch¨_t
 *
__s1
, 
__c⁄°
 wch¨_à*
__s2
, 
size_t
 
__n
))

71 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

73 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

74  
	`__wmemmove_chk
 (
__s1
, 
__s2
, 
__n
,

75 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

77 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

78  
	`__wmemmove_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

79 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

81  
	`__wmemmove_Æüs
 (
__s1
, 
__s2
, 
__n
);

82 
	}
}

85 #ifde‡
__USE_GNU


86 
wch¨_t
 *
	$__wmemp˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

87 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

88 
size_t
 
__ns1
Ë
__THROW
;

89 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_Æüs
,

90 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

91 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
,

92 
size_t
 
__n
), 
wmemp˝y
);

93 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmemp˝y_chk_w¨n
,

94 (
wch¨_t
 *
__ª°ri˘
 
__s1
,

95 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__s2
, 
size_t
 
__n
,

96 
size_t
 
__ns1
), 
__wmemp˝y_chk
)

97 
	`__w¨«âr
 ("wmempcpy called withÜength biggerÅhan size of destination "

100 
__exã∫_Æways_ölöe
 
wch¨_t
 *

101 
	`__NTH
 (
	$wmemp˝y
 (
wch¨_t
 *
__ª°ri˘
 
__s1
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__s2
,

102 
size_t
 
__n
))

104 i‡(
	`__bos0
 (
__s1
Ë!(
size_t
) -1)

106 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

107  
	`__wmemp˝y_chk
 (
__s1
, 
__s2
, 
__n
,

108 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

110 i‡(
__n
 > 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
))

111  
	`__wmemp˝y_chk_w¨n
 (
__s1
, 
__s2
, 
__n
,

112 
	`__bos0
 (
__s1
Ë/  (
wch¨_t
));

114  
	`__wmemp˝y_Æüs
 (
__s1
, 
__s2
, 
__n
);

115 
	}
}

119 
wch¨_t
 *
	$__wmem£t_chk
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

120 
size_t
 
__ns
Ë
__THROW
;

121 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_Æüs
, (wch¨_à*
__s
, wch¨_à
__c
,

122 
size_t
 
__n
), 
wmem£t
);

123 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wmem£t_chk_w¨n
,

124 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
,

125 
size_t
 
__ns
), 
__wmem£t_chk
)

126 
	`__w¨«âr
 ("wmemset called withÜength biggerÅhan size of destination "

129 
__exã∫_Æways_ölöe
 
wch¨_t
 *

130 
	`__NTH
 (
	$wmem£t
 (
wch¨_t
 *
__s
, wch¨_à
__c
, 
size_t
 
__n
))

132 i‡(
	`__bos0
 (
__s
Ë!(
size_t
) -1)

134 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

135  
	`__wmem£t_chk
 (
__s
, 
__c
, 
__n
, 
	`__bos0
 (__sË/  (
wch¨_t
));

137 i‡(
__n
 > 
	`__bos0
 (
__s
Ë/  (
wch¨_t
))

138  
	`__wmem£t_chk_w¨n
 (
__s
, 
__c
, 
__n
,

139 
	`__bos0
 (
__s
Ë/  (
wch¨_t
));

141  
	`__wmem£t_Æüs
 (
__s
, 
__c
, 
__n
);

142 
	}
}

145 
wch¨_t
 *
	$__wcs˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

146 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

147 
size_t
 
__n
Ë
__THROW
;

148 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcs˝y_Æüs
,

149 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

150 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcs˝y
);

152 
__exã∫_Æways_ölöe
 
wch¨_t
 *

153 
	`__NTH
 (
	$wcs˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

155 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

156  
	`__wcs˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

157  
	`__wcs˝y_Æüs
 (
__de°
, 
__§c
);

158 
	}
}

161 
wch¨_t
 *
	$__w˝˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

162 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

163 
size_t
 
__de°Àn
Ë
__THROW
;

164 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝˝y_Æüs
,

165 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

166 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
w˝˝y
);

168 
__exã∫_Æways_ölöe
 
wch¨_t
 *

169 
	`__NTH
 (
	$w˝˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

171 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

172  
	`__w˝˝y_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

173  
	`__w˝˝y_Æüs
 (
__de°
, 
__§c
);

174 
	}
}

177 
wch¨_t
 *
	$__wc¢˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

178 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

179 
size_t
 
__de°Àn
Ë
__THROW
;

180 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_Æüs
,

181 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

182 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

183 
size_t
 
__n
), 
wc¢˝y
);

184 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢˝y_chk_w¨n
,

185 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

186 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

187 
size_t
 
__n
, size_à
__de°Àn
), 
__wc¢˝y_chk
)

188 
	`__w¨«âr
 ("wcsncpy called withÜength biggerÅhan size of destination "

191 
__exã∫_Æways_ölöe
 
wch¨_t
 *

192 
	`__NTH
 (
	$wc¢˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

193 
size_t
 
__n
))

195 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

197 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

198  
	`__wc¢˝y_chk
 (
__de°
, 
__§c
, 
__n
,

199 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

200 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

201  
	`__wc¢˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

202 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

204  
	`__wc¢˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

205 
	}
}

208 
wch¨_t
 *
	$__w˝n˝y_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

209 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
, 
size_t
 
__n
,

210 
size_t
 
__de°Àn
Ë
__THROW
;

211 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_Æüs
,

212 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

213 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

214 
size_t
 
__n
), 
w˝n˝y
);

215 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__w˝n˝y_chk_w¨n
,

216 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

217 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

218 
size_t
 
__n
, size_à
__de°Àn
), 
__w˝n˝y_chk
)

219 
	`__w¨«âr
 ("wcpncpy called withÜength biggerÅhan size of destination "

222 
__exã∫_Æways_ölöe
 
wch¨_t
 *

223 
	`__NTH
 (
	$w˝n˝y
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

224 
size_t
 
__n
))

226 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

228 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
))

229  
	`__w˝n˝y_chk
 (
__de°
, 
__§c
, 
__n
,

230 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

231 i‡(
__n
 > 
	`__bos
 (
__de°
Ë/  (
wch¨_t
))

232  
	`__w˝n˝y_chk_w¨n
 (
__de°
, 
__§c
, 
__n
,

233 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

235  
	`__w˝n˝y_Æüs
 (
__de°
, 
__§c
, 
__n
);

236 
	}
}

239 
wch¨_t
 *
	$__wcsˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

240 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

241 
size_t
 
__de°Àn
Ë
__THROW
;

242 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wcsˇt_Æüs
,

243 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

244 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
), 
wcsˇt
);

246 
__exã∫_Æways_ölöe
 
wch¨_t
 *

247 
	`__NTH
 (
	$wcsˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
))

249 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

250  
	`__wcsˇt_chk
 (
__de°
, 
__§c
, 
	`__bos
 (__de°Ë/  (
wch¨_t
));

251  
	`__wcsˇt_Æüs
 (
__de°
, 
__§c
);

252 
	}
}

255 
wch¨_t
 *
	$__wc¢ˇt_chk
 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

256 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

257 
size_t
 
__n
, size_à
__de°Àn
Ë
__THROW
;

258 
wch¨_t
 *
	`__REDIRECT_NTH
 (
__wc¢ˇt_Æüs
,

259 (
wch¨_t
 *
__ª°ri˘
 
__de°
,

260 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__§c
,

261 
size_t
 
__n
), 
wc¢ˇt
);

263 
__exã∫_Æways_ölöe
 
wch¨_t
 *

264 
	`__NTH
 (
	$wc¢ˇt
 (
wch¨_t
 *
__ª°ri˘
 
__de°
, 
__c⁄°
 wch¨_à*__ª°ri˘ 
__§c
,

265 
size_t
 
__n
))

267 i‡(
	`__bos
 (
__de°
Ë!(
size_t
) -1)

268  
	`__wc¢ˇt_chk
 (
__de°
, 
__§c
, 
__n
,

269 
	`__bos
 (
__de°
Ë/  (
wch¨_t
));

270  
	`__wc¢ˇt_Æüs
 (
__de°
, 
__§c
, 
__n
);

271 
	}
}

274 
	$__sw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

275 
__Êag
, 
size_t
 
__s_Àn
,

276 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...)

277 
__THROW
 ;

279 
	`__REDIRECT_NTH_LDBL
 (
__sw¥ötf_Æüs
,

280 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

281 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...),

282 
sw¥ötf
);

284 #ifde‡
__va_¨g_∑ck


285 
__exã∫_Æways_ölöe
 

286 
	`__NTH
 (
	$sw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

287 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...))

289 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

290  
	`__sw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

291 
	`__bos
 (
__s
Ë/  (
wch¨_t
),

292 
__fmt
, 
	`__va_¨g_∑ck
 ());

293  
	`__sw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
	`__va_¨g_∑ck
 ());

294 
	}
}

295 #ñi‡!
deföed
 
__˝lu•lus


297 
	#sw¥ötf
(
s
, 
n
, ...) \

298 (
	`__bos
 (
s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1 \

299 ? 
	`__sw¥ötf_chk
 (
s
, 
n
, 
__USE_FORTIFY_LEVEL
 - 1, \

300 
	`__bos
 (
s
Ë/  (
wch¨_t
), 
__VA_ARGS__
) \

301 : 
	`sw¥ötf
 (
s
, 
n
, 
__VA_ARGS__
))

	)

304 
	$__vsw¥ötf_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

305 
__Êag
, 
size_t
 
__s_Àn
,

306 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

307 
__gnuc_va_li°
 
__¨g
)

308 
__THROW
 ;

310 
	`__REDIRECT_NTH_LDBL
 (
__vsw¥ötf_Æüs
,

311 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

312 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
,

313 
__gnuc_va_li°
 
__≠
), 
vsw¥ötf
);

315 
__exã∫_Æways_ölöe
 

316 
	`__NTH
 (
	$vsw¥ötf
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__n
,

317 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
))

319 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 || 
__USE_FORTIFY_LEVEL
 > 1)

320  
	`__vsw¥ötf_chk
 (
__s
, 
__n
, 
__USE_FORTIFY_LEVEL
 - 1,

321 
	`__bos
 (
__s
Ë/  (
wch¨_t
), 
__fmt
, 
__≠
);

322  
	`__vsw¥ötf_Æüs
 (
__s
, 
__n
, 
__fmt
, 
__≠
);

323 
	}
}

326 #i‡
__USE_FORTIFY_LEVEL
 > 1

328 
__fw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

329 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
, ...);

330 
__w¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

332 
__vfw¥ötf_chk
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__Êag
,

333 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

334 
__gnuc_va_li°
 
__≠
);

335 
__vw¥ötf_chk
 (
__Êag
, 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__f‹m©
,

336 
__gnuc_va_li°
 
__≠
);

338 #ifde‡
__va_¨g_∑ck


339 
__exã∫_Æways_ölöe
 

340 
	$w¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, ...)

342  
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
	`__va_¨g_∑ck
 ());

343 
	}
}

345 
__exã∫_Æways_ölöe
 

346 
	$fw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
, 
__c⁄°
 
wch¨_t
 *__ª°ri˘ 
__fmt
, ...)

348  
	`__fw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
,

349 
	`__va_¨g_∑ck
 ());

350 
	}
}

351 #ñi‡!
deföed
 
__˝lu•lus


352 
	#w¥ötf
(...) \

353 
	`__w¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

354 
	#fw¥ötf
(
°ªam
, ...) \

355 
	`__fw¥ötf_chk
 (
°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__VA_ARGS__
)

	)

358 
__exã∫_Æways_ölöe
 

359 
	$vw¥ötf
 (
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

361  
	`__vw¥ötf_chk
 (
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

362 
	}
}

364 
__exã∫_Æways_ölöe
 

365 
	$vfw¥ötf
 (
__FILE
 *
__ª°ri˘
 
__°ªam
,

366 
__c⁄°
 
wch¨_t
 *
__ª°ri˘
 
__fmt
, 
__gnuc_va_li°
 
__≠
)

368  
	`__vfw¥ötf_chk
 (
__°ªam
, 
__USE_FORTIFY_LEVEL
 - 1, 
__fmt
, 
__≠
);

369 
	}
}

373 
wch¨_t
 *
	$__fgëws_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

374 
__FILE
 *
__ª°ri˘
 
__°ªam
Ë
__wur
;

375 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_Æüs
,

376 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

377 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws
Ë
__wur
;

378 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_chk_w¨n
,

379 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

380 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
__fgëws_chk
)

381 
__wur
 
	`__w¨«âr
 ("fgetws called with bigger sizeÅhanÜength "

384 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

385 
	$fgëws
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

387 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

389 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

390  
	`__fgëws_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

391 
__n
, 
__°ªam
);

393 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

394  
	`__fgëws_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

395 
__n
, 
__°ªam
);

397  
	`__fgëws_Æüs
 (
__s
, 
__n
, 
__°ªam
);

398 
	}
}

400 #ifde‡
__USE_GNU


401 
wch¨_t
 *
	$__fgëws_u∆ocked_chk
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
,

402 
__n
, 
__FILE
 *
__ª°ri˘
 
__°ªam
)

403 
__wur
;

404 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_Æüs
,

405 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
,

406 
__FILE
 *
__ª°ri˘
 
__°ªam
), 
fgëws_u∆ocked
)

407 
__wur
;

408 
wch¨_t
 *
	`__REDIRECT
 (
__fgëws_u∆ocked_chk_w¨n
,

409 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
size_t
 
__size
, 
__n
,

410 
__FILE
 *
__ª°ri˘
 
__°ªam
),

411 
__fgëws_u∆ocked_chk
)

412 
__wur
 
	`__w¨«âr
 ("fgetws_unlocked called with bigger sizeÅhanÜength "

415 
__exã∫_Æways_ölöe
 
__wur
 
wch¨_t
 *

416 
	$fgëws_u∆ocked
 (
wch¨_t
 *
__ª°ri˘
 
__s
, 
__n
, 
__FILE
 *__ª°ri˘ 
__°ªam
)

418 i‡(
	`__bos
 (
__s
Ë!(
size_t
) -1)

420 i‡(!
	`__buûtö_c⁄°™t_p
 (
__n
) || __n <= 0)

421  
	`__fgëws_u∆ocked_chk
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

422 
__n
, 
__°ªam
);

424 i‡((
size_t
Ë
__n
 > 
	`__bos
 (
__s
Ë/  (
wch¨_t
))

425  
	`__fgëws_u∆ocked_chk_w¨n
 (
__s
, 
	`__bos
 (__sË/  (
wch¨_t
),

426 
__n
, 
__°ªam
);

428  
	`__fgëws_u∆ocked_Æüs
 (
__s
, 
__n
, 
__°ªam
);

429 
	}
}

433 
size_t
 
	$__w¸tomb_chk
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

434 
mb°©e_t
 *
__ª°ri˘
 
__p
,

435 
size_t
 
__buÊí
Ë
__THROW
 
__wur
;

436 
size_t
 
	`__REDIRECT_NTH
 (
__w¸tomb_Æüs
,

437 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

438 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
w¸tomb
Ë
__wur
;

440 
__exã∫_Æways_ölöe
 
__wur
 
size_t


441 
	`__NTH
 (
	$w¸tomb
 (*
__ª°ri˘
 
__s
, 
wch¨_t
 
__wch¨
,

442 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

447 
	#__WCHAR_MB_LEN_MAX
 16

	)

448 #i‡
deföed
 
MB_LEN_MAX
 && MB_LEN_MAX !
__WCHAR_MB_LEN_MAX


451 i‡(
	`__bos
 (
__s
Ë!(
size_t
Ë-1 && 
__WCHAR_MB_LEN_MAX
 > __bos (__s))

452  
	`__w¸tomb_chk
 (
__s
, 
__wch¨
, 
__ps
, 
	`__bos
 (__s));

453  
	`__w¸tomb_Æüs
 (
__s
, 
__wch¨
, 
__ps
);

454 
	}
}

457 
size_t
 
	$__mb§towcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

458 
__c⁄°
 **
__ª°ri˘
 
__§c
,

459 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

460 
size_t
 
__d°Àn
Ë
__THROW
;

461 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_Æüs
,

462 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

463 
__c⁄°
 **
__ª°ri˘
 
__§c
,

464 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

465 
mb§towcs
);

466 
size_t
 
	`__REDIRECT_NTH
 (
__mb§towcs_chk_w¨n
,

467 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

468 
__c⁄°
 **
__ª°ri˘
 
__§c
,

469 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

470 
size_t
 
__d°Àn
), 
__mb§towcs_chk
)

471 
	`__w¨«âr
 ("mbsrtowcs called with dst buffer smallerÅhanÜen "

474 
__exã∫_Æways_ölöe
 
size_t


475 
	`__NTH
 (
	$mb§towcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

476 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

478 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

480 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

481  
	`__mb§towcs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

482 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

484 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

485  
	`__mb§towcs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
,

486 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

488  
	`__mb§towcs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

489 
	}
}

492 
size_t
 
	$__wc§tombs_chk
 (*
__ª°ri˘
 
__d°
,

493 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

494 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

495 
size_t
 
__d°Àn
Ë
__THROW
;

496 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_Æüs
,

497 (*
__ª°ri˘
 
__d°
,

498 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

499 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

500 
wc§tombs
);

501 
size_t
 
	`__REDIRECT_NTH
 (
__wc§tombs_chk_w¨n
,

502 (*
__ª°ri˘
 
__d°
,

503 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

504 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

505 
size_t
 
__d°Àn
), 
__wc§tombs_chk
)

506 
	`__w¨«âr
 ("wcsrtombs called with dst buffer smallerÅhanÜen");

508 
__exã∫_Æways_ölöe
 
size_t


509 
	`__NTH
 (
	$wc§tombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

510 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

512 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

514 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

515  
	`__wc§tombs_chk
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

517 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

518  
	`__wc§tombs_chk_w¨n
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
, 
	`__bos
 (__dst));

520  
	`__wc§tombs_Æüs
 (
__d°
, 
__§c
, 
__Àn
, 
__ps
);

521 
	}
}

524 #ifde‡
__USE_GNU


525 
size_t
 
	$__mb¢πowcs_chk
 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

526 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

527 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

528 
size_t
 
__d°Àn
Ë
__THROW
;

529 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_Æüs
,

530 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

531 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

532 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
),

533 
mb¢πowcs
);

534 
size_t
 
	`__REDIRECT_NTH
 (
__mb¢πowcs_chk_w¨n
,

535 (
wch¨_t
 *
__ª°ri˘
 
__d°
,

536 
__c⁄°
 **
__ª°ri˘
 
__§c
, 
size_t
 
__nmc
,

537 
size_t
 
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

538 
size_t
 
__d°Àn
), 
__mb¢πowcs_chk
)

539 
	`__w¨«âr
 ("mbsnrtowcs called with dst buffer smallerÅhanÜen "

542 
__exã∫_Æways_ölöe
 
size_t


543 
	`__NTH
 (
	$mb¢πowcs
 (
wch¨_t
 *
__ª°ri˘
 
__d°
, 
__c⁄°
 **__ª°ri˘ 
__§c
,

544 
size_t
 
__nmc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

546 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

548 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

549  
	`__mb¢πowcs_chk
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

550 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

552 i‡(
__Àn
 > 
	`__bos
 (
__d°
Ë/  (
wch¨_t
))

553  
	`__mb¢πowcs_chk_w¨n
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
,

554 
	`__bos
 (
__d°
Ë/  (
wch¨_t
));

556  
	`__mb¢πowcs_Æüs
 (
__d°
, 
__§c
, 
__nmc
, 
__Àn
, 
__ps
);

557 
	}
}

560 
size_t
 
	$__wc¢πombs_chk
 (*
__ª°ri˘
 
__d°
,

561 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

562 
size_t
 
__nwc
, size_à
__Àn
,

563 
mb°©e_t
 *
__ª°ri˘
 
__ps
, 
size_t
 
__d°Àn
)

564 
__THROW
;

565 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_Æüs
,

566 (*
__ª°ri˘
 
__d°
,

567 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

568 
size_t
 
__nwc
, size_à
__Àn
,

569 
mb°©e_t
 *
__ª°ri˘
 
__ps
), 
wc¢πombs
);

570 
size_t
 
	`__REDIRECT_NTH
 (
__wc¢πombs_chk_w¨n
,

571 (*
__ª°ri˘
 
__d°
,

572 
__c⁄°
 
wch¨_t
 **
__ª°ri˘
 
__§c
,

573 
size_t
 
__nwc
, size_à
__Àn
,

574 
mb°©e_t
 *
__ª°ri˘
 
__ps
,

575 
size_t
 
__d°Àn
), 
__wc¢πombs_chk
)

576 
	`__w¨«âr
 ("wcsnrtombs called with dst buffer smallerÅhanÜen");

578 
__exã∫_Æways_ölöe
 
size_t


579 
	`__NTH
 (
	$wc¢πombs
 (*
__ª°ri˘
 
__d°
, 
__c⁄°
 
wch¨_t
 **__ª°ri˘ 
__§c
,

580 
size_t
 
__nwc
, size_à
__Àn
, 
mb°©e_t
 *
__ª°ri˘
 
__ps
))

582 i‡(
	`__bos
 (
__d°
Ë!(
size_t
) -1)

584 i‡(!
	`__buûtö_c⁄°™t_p
 (
__Àn
))

585  
	`__wc¢πombs_chk
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

586 
	`__bos
 (
__d°
));

588 i‡(
__Àn
 > 
	`__bos
 (
__d°
))

589  
	`__wc¢πombs_chk_w¨n
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
,

590 
	`__bos
 (
__d°
));

592  
	`__wc¢πombs_Æüs
 (
__d°
, 
__§c
, 
__nwc
, 
__Àn
, 
__ps
);

593 
	}
}

	@/usr/include/linux/stddef.h

1 #i‚de‡
_LINUX_STDDEF_H


2 
	#_LINUX_STDDEF_H


	)

6 #unde‡
NULL


7 #i‡
deföed
(
__˝lu•lus
)

8 
	#NULL
 0

	)

10 
	#NULL
 ((*)0)

	)

	@/usr/include/pthread.h

20 #i‚de‡
_PTHREAD_H


21 
	#_PTHREAD_H
 1

	)

23 
	~<„©uªs.h
>

24 
	~<ídün.h
>

25 
	~<sched.h
>

26 
	~<time.h
>

28 
	~<bôs/±hªadty≥s.h
>

29 
	~<bôs/£tjmp.h
>

30 
	~<bôs/w‹dsize.h
>

36 
	mPTHREAD_CREATE_JOINABLE
,

37 
	#PTHREAD_CREATE_JOINABLE
 
PTHREAD_CREATE_JOINABLE


	)

38 
	mPTHREAD_CREATE_DETACHED


39 
	#PTHREAD_CREATE_DETACHED
 
PTHREAD_CREATE_DETACHED


	)

46 
	mPTHREAD_MUTEX_TIMED_NP
,

47 
	mPTHREAD_MUTEX_RECURSIVE_NP
,

48 
	mPTHREAD_MUTEX_ERRORCHECK_NP
,

49 
	mPTHREAD_MUTEX_ADAPTIVE_NP


50 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


52 
	mPTHREAD_MUTEX_NORMAL
 = 
PTHREAD_MUTEX_TIMED_NP
,

53 
	mPTHREAD_MUTEX_RECURSIVE
 = 
PTHREAD_MUTEX_RECURSIVE_NP
,

54 
	mPTHREAD_MUTEX_ERRORCHECK
 = 
PTHREAD_MUTEX_ERRORCHECK_NP
,

55 
	mPTHREAD_MUTEX_DEFAULT
 = 
PTHREAD_MUTEX_NORMAL


57 #ifde‡
__USE_GNU


59 , 
	mPTHREAD_MUTEX_FAST_NP
 = 
PTHREAD_MUTEX_TIMED_NP


64 #ifde‡
__USE_XOPEN2K


68 
	mPTHREAD_MUTEX_STALLED
,

69 
	mPTHREAD_MUTEX_STALLED_NP
 = 
PTHREAD_MUTEX_STALLED
,

70 
	mPTHREAD_MUTEX_ROBUST
,

71 
	mPTHREAD_MUTEX_ROBUST_NP
 = 
PTHREAD_MUTEX_ROBUST


76 #ifde‡
__USE_UNIX98


80 
	mPTHREAD_PRIO_NONE
,

81 
	mPTHREAD_PRIO_INHERIT
,

82 
	mPTHREAD_PRIO_PROTECT


88 #i‡
__WORDSIZE
 == 64

89 
	#PTHREAD_MUTEX_INITIALIZER
 \

90 { { 0, 0, 0, 0, 0, 0, { 0, 0 } } }

	)

91 #ifde‡
__USE_GNU


92 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

93 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0, 0 } } }

	)

94 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

95 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0, 0 } } }

	)

96 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

97 { { 0, 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0, 0 } } }

	)

100 
	#PTHREAD_MUTEX_INITIALIZER
 \

101 { { 0, 0, 0, 0, 0, { 0 } } }

	)

102 #ifde‡
__USE_GNU


103 
	#PTHREAD_RECURSIVE_MUTEX_INITIALIZER_NP
 \

104 { { 0, 0, 0, 
PTHREAD_MUTEX_RECURSIVE_NP
, 0, { 0 } } }

	)

105 
	#PTHREAD_ERRORCHECK_MUTEX_INITIALIZER_NP
 \

106 { { 0, 0, 0, 
PTHREAD_MUTEX_ERRORCHECK_NP
, 0, { 0 } } }

	)

107 
	#PTHREAD_ADAPTIVE_MUTEX_INITIALIZER_NP
 \

108 { { 0, 0, 0, 
PTHREAD_MUTEX_ADAPTIVE_NP
, 0, { 0 } } }

	)

114 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


117 
	mPTHREAD_RWLOCK_PREFER_READER_NP
,

118 
	mPTHREAD_RWLOCK_PREFER_WRITER_NP
,

119 
	mPTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,

120 
	mPTHREAD_RWLOCK_DEFAULT_NP
 = 
PTHREAD_RWLOCK_PREFER_READER_NP


124 
	#PTHREAD_RWLOCK_INITIALIZER
 \

125 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0 } }

	)

126 #ifde‡
__USE_GNU


127 #i‡
__WORDSIZE
 == 64

128 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

130 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
 } }

	)

132 #i‡
__BYTE_ORDER
 =
__LITTLE_ENDIAN


133 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

134 { { 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
, \

135 0, 0, 0, 0 } }

	)

137 
	#PTHREAD_RWLOCK_WRITER_NONRECURSIVE_INITIALIZER_NP
 \

138 { { 0, 0, 0, 0, 0, 0, 0, 0, 0, 
PTHREAD_RWLOCK_PREFER_WRITER_NONRECURSIVE_NP
,\

139 0 } }

	)

149 
	mPTHREAD_INHERIT_SCHED
,

150 
	#PTHREAD_INHERIT_SCHED
 
PTHREAD_INHERIT_SCHED


	)

151 
	mPTHREAD_EXPLICIT_SCHED


152 
	#PTHREAD_EXPLICIT_SCHED
 
PTHREAD_EXPLICIT_SCHED


	)

159 
	mPTHREAD_SCOPE_SYSTEM
,

160 
	#PTHREAD_SCOPE_SYSTEM
 
PTHREAD_SCOPE_SYSTEM


	)

161 
	mPTHREAD_SCOPE_PROCESS


162 
	#PTHREAD_SCOPE_PROCESS
 
PTHREAD_SCOPE_PROCESS


	)

169 
	mPTHREAD_PROCESS_PRIVATE
,

170 
	#PTHREAD_PROCESS_PRIVATE
 
PTHREAD_PROCESS_PRIVATE


	)

171 
	mPTHREAD_PROCESS_SHARED


172 
	#PTHREAD_PROCESS_SHARED
 
PTHREAD_PROCESS_SHARED


	)

178 
	#PTHREAD_COND_INITIALIZER
 { { 0, 0, 0, 0, 0, (*Ë0, 0, 0 } }

	)

182 
	s_±hªad_˛ónup_buf„r


184 (*
	m__routöe
) (*);

185 *
	m__¨g
;

186 
	m__ˇn˚…y≥
;

187 
_±hªad_˛ónup_buf„r
 *
	m__¥ev
;

193 
	mPTHREAD_CANCEL_ENABLE
,

194 
	#PTHREAD_CANCEL_ENABLE
 
PTHREAD_CANCEL_ENABLE


	)

195 
	mPTHREAD_CANCEL_DISABLE


196 
	#PTHREAD_CANCEL_DISABLE
 
PTHREAD_CANCEL_DISABLE


	)

200 
	mPTHREAD_CANCEL_DEFERRED
,

201 
	#PTHREAD_CANCEL_DEFERRED
 
PTHREAD_CANCEL_DEFERRED


	)

202 
	mPTHREAD_CANCEL_ASYNCHRONOUS


203 
	#PTHREAD_CANCEL_ASYNCHRONOUS
 
PTHREAD_CANCEL_ASYNCHRONOUS


	)

205 
	#PTHREAD_CANCELED
 ((*Ë-1)

	)

209 
	#PTHREAD_ONCE_INIT
 0

	)

212 #ifde‡
__USE_XOPEN2K


216 
	#PTHREAD_BARRIER_SERIAL_THREAD
 -1

	)

220 
__BEGIN_DECLS


225 
±hªad_¸óã
 (
±hªad_t
 *
__ª°ri˘
 
__√wthªad
,

226 
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

227 *(*
__°¨t_routöe
) (*),

228 *
__ª°ri˘
 
__¨g
Ë
__THROWNL
 
__n⁄nuŒ
 ((1, 3));

234 
	$±hªad_exô
 (*
__ªtvÆ
Ë
	`__©åibuã__
 ((
__n‹ëu∫__
));

242 
	`±hªad_joö
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
);

244 #ifde‡
__USE_GNU


247 
	$±hªad_åyjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
Ë
__THROW
;

255 
	`±hªad_timedjoö_≈
 (
±hªad_t
 
__th
, **
__thªad_ªtu∫
,

256 
__c⁄°
 
time•ec
 *
__ab°ime
);

263 
	$±hªad_dëach
 (
±hªad_t
 
__th
Ë
__THROW
;

267 
±hªad_t
 
	$±hªad_£lf
 (Ë
__THROW
 
	`__©åibuã__
 ((
__c⁄°__
));

270 
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
Ë
__THROW
;

278 
	$±hªad_©å_öô
 (
±hªad_©å_t
 *
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

281 
	$±hªad_©å_de°roy
 (
±hªad_©å_t
 *
__©å
)

282 
__THROW
 
	`__n⁄nuŒ
 ((1));

285 
	$±hªad_©å_gëdëach°©e
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

286 *
__dëach°©e
)

287 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

290 
	$±hªad_©å_£tdëach°©e
 (
±hªad_©å_t
 *
__©å
,

291 
__dëach°©e
)

292 
__THROW
 
	`__n⁄nuŒ
 ((1));

296 
	$±hªad_©å_gëgu¨dsize
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

297 
size_t
 *
__gu¨dsize
)

298 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

301 
	$±hªad_©å_£tgu¨dsize
 (
±hªad_©å_t
 *
__©å
,

302 
size_t
 
__gu¨dsize
)

303 
__THROW
 
	`__n⁄nuŒ
 ((1));

307 
	$±hªad_©å_gësched∑øm
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


308 
__©å
,

309 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

310 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

313 
	$±hªad_©å_£tsched∑øm
 (
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

314 
__c⁄°
 
sched_∑øm
 *
__ª°ri˘


315 
__∑øm
Ë
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

318 
	$±hªad_©å_gëschedpﬁicy
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


319 
__©å
, *
__ª°ri˘
 
__pﬁicy
)

320 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

323 
	$±hªad_©å_£tschedpﬁicy
 (
±hªad_©å_t
 *
__©å
, 
__pﬁicy
)

324 
__THROW
 
	`__n⁄nuŒ
 ((1));

327 
	$±hªad_©å_gëöhîôsched
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


328 
__©å
, *
__ª°ri˘
 
__öhîô
)

329 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

332 
	$±hªad_©å_£töhîôsched
 (
±hªad_©å_t
 *
__©å
,

333 
__öhîô
)

334 
__THROW
 
	`__n⁄nuŒ
 ((1));

338 
	$±hªad_©å_gësc›e
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

339 *
__ª°ri˘
 
__sc›e
)

340 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

343 
	$±hªad_©å_£tsc›e
 (
±hªad_©å_t
 *
__©å
, 
__sc›e
)

344 
__THROW
 
	`__n⁄nuŒ
 ((1));

347 
	$±hªad_©å_gë°ackaddr
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


348 
__©å
, **
__ª°ri˘
 
__°ackaddr
)

349 
__THROW
 
	`__n⁄nuŒ
 ((1, 2)Ë
__©åibuã_dïªˇãd__
;

355 
	$±hªad_©å_£t°ackaddr
 (
±hªad_©å_t
 *
__©å
,

356 *
__°ackaddr
)

357 
__THROW
 
	`__n⁄nuŒ
 ((1)Ë
__©åibuã_dïªˇãd__
;

360 
	$±hªad_©å_gë°acksize
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘


361 
__©å
, 
size_t
 *
__ª°ri˘
 
__°acksize
)

362 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

367 
	$±hªad_©å_£t°acksize
 (
±hªad_©å_t
 *
__©å
,

368 
size_t
 
__°acksize
)

369 
__THROW
 
	`__n⁄nuŒ
 ((1));

371 #ifde‡
__USE_XOPEN2K


373 
	$±hªad_©å_gë°ack
 (
__c⁄°
 
±hªad_©å_t
 *
__ª°ri˘
 
__©å
,

374 **
__ª°ri˘
 
__°ackaddr
,

375 
size_t
 *
__ª°ri˘
 
__°acksize
)

376 
__THROW
 
	`__n⁄nuŒ
 ((1, 2, 3));

381 
	$±hªad_©å_£t°ack
 (
±hªad_©å_t
 *
__©å
, *
__°ackaddr
,

382 
size_t
 
__°acksize
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

385 #ifde‡
__USE_GNU


388 
	$±hªad_©å_£èfföôy_≈
 (
±hªad_©å_t
 *
__©å
,

389 
size_t
 
__˝u£tsize
,

390 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

391 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

395 
	$±hªad_©å_gëafföôy_≈
 (
__c⁄°
 
±hªad_©å_t
 *
__©å
,

396 
size_t
 
__˝u£tsize
,

397 
˝u_£t_t
 *
__˝u£t
)

398 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

404 
	$±hªad_gë©å_≈
 (
±hªad_t
 
__th
, 
±hªad_©å_t
 *
__©å
)

405 
__THROW
 
	`__n⁄nuŒ
 ((2));

413 
	$±hªad_£tsched∑øm
 (
±hªad_t
 
__èrgë_thªad
, 
__pﬁicy
,

414 
__c⁄°
 
sched_∑øm
 *
__∑øm
)

415 
__THROW
 
	`__n⁄nuŒ
 ((3));

418 
	$±hªad_gësched∑øm
 (
±hªad_t
 
__èrgë_thªad
,

419 *
__ª°ri˘
 
__pﬁicy
,

420 
sched_∑øm
 *
__ª°ri˘
 
__∑øm
)

421 
__THROW
 
	`__n⁄nuŒ
 ((2, 3));

424 
	$±hªad_£tsched¥io
 (
±hªad_t
 
__èrgë_thªad
, 
__¥io
)

425 
__THROW
;

428 #ifde‡
__USE_GNU


430 
	$±hªad_gë«me_≈
 (
±hªad_t
 
__èrgë_thªad
, *
__buf
,

431 
size_t
 
__buÊí
)

432 
__THROW
 
	`__n⁄nuŒ
 ((2));

435 
	$±hªad_£äame_≈
 (
±hªad_t
 
__èrgë_thªad
, 
__c⁄°
 *
__«me
)

436 
__THROW
 
	`__n⁄nuŒ
 ((2));

440 #ifde‡
__USE_UNIX98


442 
	$±hªad_gëc⁄cuºícy
 (Ë
__THROW
;

445 
	$±hªad_£tc⁄cuºícy
 (
__Àvñ
Ë
__THROW
;

448 #ifde‡
__USE_GNU


453 
	$±hªad_yõld
 (Ë
__THROW
;

458 
	$±hªad_£èfföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

459 
__c⁄°
 
˝u_£t_t
 *
__˝u£t
)

460 
__THROW
 
	`__n⁄nuŒ
 ((3));

463 
	$±hªad_gëafföôy_≈
 (
±hªad_t
 
__th
, 
size_t
 
__˝u£tsize
,

464 
˝u_£t_t
 *
__˝u£t
)

465 
__THROW
 
	`__n⁄nuŒ
 ((3));

478 
	`±hªad_⁄˚
 (
±hªad_⁄˚_t
 *
__⁄˚_c⁄åﬁ
,

479 (*
__öô_routöe
Ë()Ë
	`__n⁄nuŒ
 ((1, 2));

490 
	`±hªad_£tˇn˚l°©e
 (
__°©e
, *
__ﬁd°©e
);

494 
	`±hªad_£tˇn˚…y≥
 (
__ty≥
, *
__ﬁdty≥
);

497 
	`±hªad_ˇn˚l
 (
±hªad_t
 
__th
);

502 
	`±hªad_ã°ˇn˚l
 ();

511 
__jmp_buf
 
__ˇn˚l_jmp_buf
;

512 
__mask_was_ßved
;

513 } 
__ˇn˚l_jmp_buf
[1];

514 *
__∑d
[4];

515 } 
	t__±hªad_unwöd_buf_t
 
	t__©åibuã__
 ((
	t__Æig√d__
));

518 #i‚de‡
__˛ónup_f˘_©åibuã


519 
	#__˛ónup_f˘_©åibuã


	)

524 
	s__±hªad_˛ónup_‰ame


526 (*
__ˇn˚l_routöe
) (*);

527 *
__ˇn˚l_¨g
;

528 
__do_ô
;

529 
__ˇn˚l_ty≥
;

532 #i‡
deföed
 
__GNUC__
 && deföed 
__EXCEPTIONS


533 #ifde‡
__˝lu•lus


535 ˛as†
	c__±hªad_˛ónup_˛ass


537 (*
__ˇn˚l_routöe
) (*);

538 *
__ˇn˚l_¨g
;

539 
__do_ô
;

540 
__ˇn˚l_ty≥
;

542 
public
:

543 
	`__±hªad_˛ónup_˛ass
 ((*
__f˘
Ë(*), *
__¨g
)

544 : 
	`__ˇn˚l_routöe
 (
__f˘
), 
	`__ˇn˚l_¨g
 (
__¨g
), 
	$__do_ô
 (1) { }

545 ~
	$__±hªad_˛ónup_˛ass
 (Ë{ i‡(
__do_ô
Ë
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); 
	}
}

546 
	$__£tdoô
 (
__√wvÆ
Ë{ 
__do_ô
 = __√wvÆ; 
	}
}

547 
	$__de„r
 (Ë{ 
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
,

548 &
__ˇn˚l_ty≥
); 
	}
}

549 
	$__ª°‹e
 (Ëc⁄° { 
	`±hªad_£tˇn˚…y≥
 (
__ˇn˚l_ty≥
, 0); 
	}
}

559 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

561 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
)

	)

565 
	#±hªad_˛ónup_p›
(
execuã
) \

566 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

567 } 0)

	)

569 #ifde‡
__USE_GNU


573 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

575 
__±hªad_˛ónup_˛ass
 
	`__˛‰ame
 (
routöe
, 
¨g
); \

576 
__˛‰ame
.
	`__de„r
 ()

	)

581 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

582 
__˛‰ame
.
	`__ª°‹e
 (); \

583 
__˛‰ame
.
	`__£tdoô
 (
execuã
); \

584 } 0)

	)

591 
__exã∫_ölöe
 

592 
	$__±hªad_˛ónup_routöe
 (
__±hªad_˛ónup_‰ame
 *
__‰ame
)

594 i‡(
__‰ame
->
__do_ô
)

595 
__‰ame
->
	`__ˇn˚l_routöe
 (__‰ame->
__ˇn˚l_¨g
);

596 
	}
}

605 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

607 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

608 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

609 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

610 .
__do_ô
 = 1 };

	)

614 
	#±hªad_˛ónup_p›
(
execuã
) \

615 
__˛‰ame
.
__do_ô
 = (
execuã
); \

616 } 0)

	)

618 #ifde‡
__USE_GNU


622 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

624 
__±hªad_˛ónup_‰ame
 
__˛‰ame
 \

625 
	`__©åibuã__
 ((
	`__˛ónup__
 (
__±hªad_˛ónup_routöe
))) \

626 { .
__ˇn˚l_routöe
 = (
routöe
), .
__ˇn˚l_¨g
 = (
¨g
), \

627 .
__do_ô
 = 1 }; \

628 (Ë
	`±hªad_£tˇn˚…y≥
 (
PTHREAD_CANCEL_DEFERRED
, \

629 &
__˛‰ame
.
__ˇn˚l_ty≥
)

	)

634 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

635 (Ë
	`±hªad_£tˇn˚…y≥
 (
__˛‰ame
.
__ˇn˚l_ty≥
, 
NULL
); \

636 
__˛‰ame
.
__do_ô
 = (
execuã
); \

637 } 0)

	)

648 
	#±hªad_˛ónup_push
(
routöe
, 
¨g
) \

650 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

651 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

652 *
__ˇn˚l_¨g
 = (
¨g
); \

653 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

654 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

655 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

657 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

658 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

662 
	`__±hªad_ªgi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

663 dÿ{

	)

664 
__±hªad_ªgi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

665 
__˛ónup_f˘_©åibuã
;

669 
	#±hªad_˛ónup_p›
(
execuã
) \

672 
	`__±hªad_uƒegi°î_ˇn˚l
 (&
__ˇn˚l_buf
); \

673 i‡(
execuã
) \

674 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

675 } 0)

	)

676 
	$__±hªad_uƒegi°î_ˇn˚l
 (
__±hªad_unwöd_buf_t
 *
__buf
)

677 
__˛ónup_f˘_©åibuã
;

679 #ifde‡
__USE_GNU


683 
	#±hªad_˛ónup_push_de„r_≈
(
routöe
, 
¨g
) \

685 
__±hªad_unwöd_buf_t
 
__ˇn˚l_buf
; \

686 (*
__ˇn˚l_routöe
Ë(*Ë(
routöe
); \

687 *
__ˇn˚l_¨g
 = (
¨g
); \

688 
__nŸ_fú°_ˇŒ
 = 
	`__sig£tjmp
 ((
__jmp_buf_èg
 *) (*) \

689 
__ˇn˚l_buf
.
__ˇn˚l_jmp_buf
, 0); \

690 i‡(
	`__buûtö_ex≥˘
 (
__nŸ_fú°_ˇŒ
, 0)) \

692 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

693 
	`__±hªad_unwöd_√xt
 (&
__ˇn˚l_buf
); \

697 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (&
__ˇn˚l_buf
); \

698 dÿ{

	)

699 
	`__±hªad_ªgi°î_ˇn˚l_de„r
 (
__±hªad_unwöd_buf_t
 *
__buf
)

700 
__˛ónup_f˘_©åibuã
;

705 
	#±hªad_˛ónup_p›_ª°‹e_≈
(
execuã
) \

708 
	`__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (&
__ˇn˚l_buf
); \

709 i‡(
execuã
) \

710 
	`__ˇn˚l_routöe
 (
__ˇn˚l_¨g
); \

711 
	}
} 0)

	)

712 
	$__±hªad_uƒegi°î_ˇn˚l_ª°‹e
 (
__±hªad_unwöd_buf_t
 *
__buf
)

713 
__˛ónup_f˘_©åibuã
;

717 
	$__±hªad_unwöd_√xt
 (
__±hªad_unwöd_buf_t
 *
__buf
)

718 
__˛ónup_f˘_©åibuã
 
	`__©åibuã__
 ((
__n‹ëu∫__
))

719 #i‚de‡
SHARED


720 
	`__©åibuã__
 ((
__wók__
))

726 
__jmp_buf_èg
;

727 
	$__sig£tjmp
 (
__jmp_buf_èg
 *
__ív
, 
__ßvemask
Ë
__THROWNL
;

733 
	$±hªad_muãx_öô
 (
±hªad_muãx_t
 *
__muãx
,

734 
__c⁄°
 
±hªad_muãx©å_t
 *
__muãx©å
)

735 
__THROW
 
	`__n⁄nuŒ
 ((1));

738 
	$±hªad_muãx_de°roy
 (
±hªad_muãx_t
 *
__muãx
)

739 
__THROW
 
	`__n⁄nuŒ
 ((1));

742 
	$±hªad_muãx_åylock
 (
±hªad_muãx_t
 *
__muãx
)

743 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

746 
	$±hªad_muãx_lock
 (
±hªad_muãx_t
 *
__muãx
)

747 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

749 #ifde‡
__USE_XOPEN2K


751 
	$±hªad_muãx_timedlock
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

752 
__c⁄°
 
time•ec
 *
__ª°ri˘


753 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

757 
	$±hªad_muãx_u∆ock
 (
±hªad_muãx_t
 *
__muãx
)

758 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

762 
	$±hªad_muãx_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx_t
 *

763 
__ª°ri˘
 
__muãx
,

764 *
__ª°ri˘
 
__¥io˚ûög
)

765 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

769 
	$±hªad_muãx_£çrio˚ûög
 (
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

770 
__¥io˚ûög
,

771 *
__ª°ri˘
 
__ﬁd_˚ûög
)

772 
__THROW
 
	`__n⁄nuŒ
 ((1, 3));

775 #ifde‡
__USE_XOPEN2K8


777 
	$±hªad_muãx_c⁄si°ít
 (
±hªad_muãx_t
 *
__muãx
)

778 
__THROW
 
	`__n⁄nuŒ
 ((1));

779 #ifde‡
__USE_GNU


780 
	$±hªad_muãx_c⁄si°ít_≈
 (
±hªad_muãx_t
 *
__muãx
)

781 
__THROW
 
	`__n⁄nuŒ
 ((1));

790 
	$±hªad_muãx©å_öô
 (
±hªad_muãx©å_t
 *
__©å
)

791 
__THROW
 
	`__n⁄nuŒ
 ((1));

794 
	$±hªad_muãx©å_de°roy
 (
±hªad_muãx©å_t
 *
__©å
)

795 
__THROW
 
	`__n⁄nuŒ
 ((1));

798 
	$±hªad_muãx©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_muãx©å_t
 *

799 
__ª°ri˘
 
__©å
,

800 *
__ª°ri˘
 
__psh¨ed
)

801 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

804 
	$±hªad_muãx©å_£çsh¨ed
 (
±hªad_muãx©å_t
 *
__©å
,

805 
__psh¨ed
)

806 
__THROW
 
	`__n⁄nuŒ
 ((1));

808 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K8


810 
	$±hªad_muãx©å_gëty≥
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__ª°ri˘


811 
__©å
, *
__ª°ri˘
 
__köd
)

812 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

817 
	$±hªad_muãx©å_£ây≥
 (
±hªad_muãx©å_t
 *
__©å
, 
__köd
)

818 
__THROW
 
	`__n⁄nuŒ
 ((1));

822 
	$±hªad_muãx©å_gë¥Ÿocﬁ
 (
__c⁄°
 
±hªad_muãx©å_t
 *

823 
__ª°ri˘
 
__©å
,

824 *
__ª°ri˘
 
__¥Ÿocﬁ
)

825 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

829 
	$±hªad_muãx©å_£çrŸocﬁ
 (
±hªad_muãx©å_t
 *
__©å
,

830 
__¥Ÿocﬁ
)

831 
__THROW
 
	`__n⁄nuŒ
 ((1));

834 
	$±hªad_muãx©å_gë¥io˚ûög
 (
__c⁄°
 
±hªad_muãx©å_t
 *

835 
__ª°ri˘
 
__©å
,

836 *
__ª°ri˘
 
__¥io˚ûög
)

837 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

840 
	$±hªad_muãx©å_£çrio˚ûög
 (
±hªad_muãx©å_t
 *
__©å
,

841 
__¥io˚ûög
)

842 
__THROW
 
	`__n⁄nuŒ
 ((1));

844 #ifde‡
__USE_XOPEN2K


846 
	$±hªad_muãx©å_gërobu°
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

847 *
__robu°√ss
)

848 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

849 #ifde‡
__USE_GNU


850 
	$±hªad_muãx©å_gërobu°_≈
 (
__c⁄°
 
±hªad_muãx©å_t
 *
__©å
,

851 *
__robu°√ss
)

852 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

856 
	$±hªad_muãx©å_£åobu°
 (
±hªad_muãx©å_t
 *
__©å
,

857 
__robu°√ss
)

858 
__THROW
 
	`__n⁄nuŒ
 ((1));

859 #ifde‡
__USE_GNU


860 
	$±hªad_muãx©å_£åobu°_≈
 (
±hªad_muãx©å_t
 *
__©å
,

861 
__robu°√ss
)

862 
__THROW
 
	`__n⁄nuŒ
 ((1));

867 #i‡
deföed
 
__USE_UNIX98
 || deföed 
__USE_XOPEN2K


872 
	$±hªad_rwlock_öô
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

873 
__c⁄°
 
±hªad_rwlock©å_t
 *
__ª°ri˘


874 
__©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

877 
	$±hªad_rwlock_de°roy
 (
±hªad_rwlock_t
 *
__rwlock
)

878 
__THROW
 
	`__n⁄nuŒ
 ((1));

881 
	$±hªad_rwlock_rdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

882 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

885 
	$±hªad_rwlock_åyrdlock
 (
±hªad_rwlock_t
 *
__rwlock
)

886 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

888 #ifde‡
__USE_XOPEN2K


890 
	$±hªad_rwlock_timedrdlock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

891 
__c⁄°
 
time•ec
 *
__ª°ri˘


892 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

896 
	$±hªad_rwlock_wæock
 (
±hªad_rwlock_t
 *
__rwlock
)

897 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

900 
	$±hªad_rwlock_åywæock
 (
±hªad_rwlock_t
 *
__rwlock
)

901 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

903 #ifde‡
__USE_XOPEN2K


905 
	$±hªad_rwlock_timedwæock
 (
±hªad_rwlock_t
 *
__ª°ri˘
 
__rwlock
,

906 
__c⁄°
 
time•ec
 *
__ª°ri˘


907 
__ab°ime
Ë
__THROWNL
 
	`__n⁄nuŒ
 ((1, 2));

911 
	$±hªad_rwlock_u∆ock
 (
±hªad_rwlock_t
 *
__rwlock
)

912 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

918 
	$±hªad_rwlock©å_öô
 (
±hªad_rwlock©å_t
 *
__©å
)

919 
__THROW
 
	`__n⁄nuŒ
 ((1));

922 
	$±hªad_rwlock©å_de°roy
 (
±hªad_rwlock©å_t
 *
__©å
)

923 
__THROW
 
	`__n⁄nuŒ
 ((1));

926 
	$±hªad_rwlock©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

927 
__ª°ri˘
 
__©å
,

928 *
__ª°ri˘
 
__psh¨ed
)

929 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

932 
	$±hªad_rwlock©å_£çsh¨ed
 (
±hªad_rwlock©å_t
 *
__©å
,

933 
__psh¨ed
)

934 
__THROW
 
	`__n⁄nuŒ
 ((1));

937 
	$±hªad_rwlock©å_gëköd_≈
 (
__c⁄°
 
±hªad_rwlock©å_t
 *

938 
__ª°ri˘
 
__©å
,

939 *
__ª°ri˘
 
__¥ef
)

940 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

943 
	$±hªad_rwlock©å_£tköd_≈
 (
±hªad_rwlock©å_t
 *
__©å
,

944 
__¥ef
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

952 
	$±hªad_c⁄d_öô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

953 
__c⁄°
 
±hªad_c⁄d©å_t
 *
__ª°ri˘


954 
__c⁄d_©å
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

957 
	$±hªad_c⁄d_de°roy
 (
±hªad_c⁄d_t
 *
__c⁄d
)

958 
__THROW
 
	`__n⁄nuŒ
 ((1));

961 
	$±hªad_c⁄d_sig«l
 (
±hªad_c⁄d_t
 *
__c⁄d
)

962 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

965 
	$±hªad_c⁄d_brﬂdˇ°
 (
±hªad_c⁄d_t
 *
__c⁄d
)

966 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

973 
	$±hªad_c⁄d_waô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

974 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
)

975 
	`__n⁄nuŒ
 ((1, 2));

984 
	$±hªad_c⁄d_timedwaô
 (
±hªad_c⁄d_t
 *
__ª°ri˘
 
__c⁄d
,

985 
±hªad_muãx_t
 *
__ª°ri˘
 
__muãx
,

986 
__c⁄°
 
time•ec
 *
__ª°ri˘


987 
__ab°ime
Ë
	`__n⁄nuŒ
 ((1, 2, 3));

992 
	$±hªad_c⁄d©å_öô
 (
±hªad_c⁄d©å_t
 *
__©å
)

993 
__THROW
 
	`__n⁄nuŒ
 ((1));

996 
	$±hªad_c⁄d©å_de°roy
 (
±hªad_c⁄d©å_t
 *
__©å
)

997 
__THROW
 
	`__n⁄nuŒ
 ((1));

1000 
	$±hªad_c⁄d©å_gëpsh¨ed
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1001 
__ª°ri˘
 
__©å
,

1002 *
__ª°ri˘
 
__psh¨ed
)

1003 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1006 
	$±hªad_c⁄d©å_£çsh¨ed
 (
±hªad_c⁄d©å_t
 *
__©å
,

1007 
__psh¨ed
Ë
__THROW
 
	`__n⁄nuŒ
 ((1));

1009 #ifde‡
__USE_XOPEN2K


1011 
	$±hªad_c⁄d©å_gë˛ock
 (
__c⁄°
 
±hªad_c⁄d©å_t
 *

1012 
__ª°ri˘
 
__©å
,

1013 
__˛ockid_t
 *
__ª°ri˘
 
__˛ock_id
)

1014 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1017 
	$±hªad_c⁄d©å_£t˛ock
 (
±hªad_c⁄d©å_t
 *
__©å
,

1018 
__˛ockid_t
 
__˛ock_id
)

1019 
__THROW
 
	`__n⁄nuŒ
 ((1));

1023 #ifde‡
__USE_XOPEN2K


1028 
	$±hªad_•ö_öô
 (
±hªad_•ölock_t
 *
__lock
, 
__psh¨ed
)

1029 
__THROW
 
	`__n⁄nuŒ
 ((1));

1032 
	$±hªad_•ö_de°roy
 (
±hªad_•ölock_t
 *
__lock
)

1033 
__THROW
 
	`__n⁄nuŒ
 ((1));

1036 
	$±hªad_•ö_lock
 (
±hªad_•ölock_t
 *
__lock
)

1037 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1040 
	$±hªad_•ö_åylock
 (
±hªad_•ölock_t
 *
__lock
)

1041 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1044 
	$±hªad_•ö_u∆ock
 (
±hªad_•ölock_t
 *
__lock
)

1045 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1052 
	$±hªad_b¨rõr_öô
 (
±hªad_b¨rõr_t
 *
__ª°ri˘
 
__b¨rõr
,

1053 
__c⁄°
 
±hªad_b¨rõøâr_t
 *
__ª°ri˘


1054 
__©å
, 
__cou¡
)

1055 
__THROW
 
	`__n⁄nuŒ
 ((1));

1058 
	$±hªad_b¨rõr_de°roy
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1059 
__THROW
 
	`__n⁄nuŒ
 ((1));

1062 
	$±hªad_b¨rõr_waô
 (
±hªad_b¨rõr_t
 *
__b¨rõr
)

1063 
__THROWNL
 
	`__n⁄nuŒ
 ((1));

1067 
	$±hªad_b¨rõøâr_öô
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1068 
__THROW
 
	`__n⁄nuŒ
 ((1));

1071 
	$±hªad_b¨rõøâr_de°roy
 (
±hªad_b¨rõøâr_t
 *
__©å
)

1072 
__THROW
 
	`__n⁄nuŒ
 ((1));

1075 
	$±hªad_b¨rõøâr_gëpsh¨ed
 (
__c⁄°
 
±hªad_b¨rõøâr_t
 *

1076 
__ª°ri˘
 
__©å
,

1077 *
__ª°ri˘
 
__psh¨ed
)

1078 
__THROW
 
	`__n⁄nuŒ
 ((1, 2));

1081 
	$±hªad_b¨rõøâr_£çsh¨ed
 (
±hªad_b¨rõøâr_t
 *
__©å
,

1082 
__psh¨ed
)

1083 
__THROW
 
	`__n⁄nuŒ
 ((1));

1095 
	`±hªad_key_¸óã
 (
±hªad_key_t
 *
__key
,

1096 (*
__de°r_fun˘i⁄
) (*))

1097 
__THROW
 
	`__n⁄nuŒ
 ((1));

1100 
	$±hªad_key_dñëe
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1103 *
	$±hªad_gë•ecific
 (
±hªad_key_t
 
__key
Ë
__THROW
;

1106 
	$±hªad_£t•ecific
 (
±hªad_key_t
 
__key
,

1107 
__c⁄°
 *
__poöãr
Ë
__THROW
 ;

1110 #ifde‡
__USE_XOPEN2K


1112 
	$±hªad_gë˝u˛ockid
 (
±hªad_t
 
__thªad_id
,

1113 
__˛ockid_t
 *
__˛ock_id
)

1114 
__THROW
 
	`__n⁄nuŒ
 ((2));

1129 
	`±hªad_©f‹k
 ((*
__¥ï¨e
) (),

1130 (*
__∑ª¡
) (),

1131 (*
__chûd
Ë()Ë
__THROW
;

1134 #ifde‡
__USE_EXTERN_INLINES


1136 
__exã∫_ölöe
 

1137 
	`__NTH
 (
	$±hªad_equÆ
 (
±hªad_t
 
__thªad1
,Öthªad_à
__thªad2
))

1139  
__thªad1
 =
__thªad2
;

1140 
	}
}

1143 
	g__END_DECLS


	@/usr/include/wctype.h

24 #i‚de‡
_WCTYPE_H


26 
	~<„©uªs.h
>

27 
	~<bôs/ty≥s.h
>

29 #i‚de‡
__√ed_iswxxx


30 
	#_WCTYPE_H
 1

	)

33 
	#__√ed_wöt_t


	)

34 
	~<wch¨.h
>

38 #i‚de‡
WEOF


39 
	#WEOF
 (0xffffffffu)

	)

42 #unde‡
__√ed_iswxxx


47 #i‚de‡
__iswxxx_deföed


48 
	#__iswxxx_deföed
 1

	)

50 
__BEGIN_NAMESPACE_C99


53 
	tw˘y≥_t
;

54 
	g__END_NAMESPACE_C99


56 #i‚de‡
_ISwbô


61 
	~<ídün.h
>

62 #i‡
__BYTE_ORDER
 =
__BIG_ENDIAN


63 
	#_ISwbô
(
bô
Ë(1 << (bô))

	)

65 
	#_ISwbô
(
bô
) \

66 ((
bô
) < 8 ? () ((1UL << (bit)) << 24) \

67 : ((
bô
) < 16 ? () ((1UL << (bit)) << 8) \

68 : ((
bô
) < 24 ? () ((1UL << (bit)) >> 8) \

69 : (Ë((1UL << (
bô
)Ë>> 24))))

	)

74 
	m__ISwuµî
 = 0,

75 
	m__ISwlowî
 = 1,

76 
	m__ISwÆpha
 = 2,

77 
	m__ISwdigô
 = 3,

78 
	m__ISwxdigô
 = 4,

79 
	m__ISw•a˚
 = 5,

80 
	m__ISw¥öt
 = 6,

81 
	m__ISwgøph
 = 7,

82 
	m__ISwbœnk
 = 8,

83 
	m__ISw˙ål
 = 9,

84 
	m__ISwpun˘
 = 10,

85 
	m__ISwÆnum
 = 11,

87 
	m_ISwuµî
 = 
_ISwbô
 (
__ISwuµî
),

88 
	m_ISwlowî
 = 
_ISwbô
 (
__ISwlowî
),

89 
	m_ISwÆpha
 = 
_ISwbô
 (
__ISwÆpha
),

90 
	m_ISwdigô
 = 
_ISwbô
 (
__ISwdigô
),

91 
	m_ISwxdigô
 = 
_ISwbô
 (
__ISwxdigô
),

92 
	m_ISw•a˚
 = 
_ISwbô
 (
__ISw•a˚
),

93 
	m_ISw¥öt
 = 
_ISwbô
 (
__ISw¥öt
),

94 
	m_ISwgøph
 = 
_ISwbô
 (
__ISwgøph
),

95 
	m_ISwbœnk
 = 
_ISwbô
 (
__ISwbœnk
),

96 
	m_ISw˙ål
 = 
_ISwbô
 (
__ISw˙ål
),

97 
	m_ISwpun˘
 = 
_ISwbô
 (
__ISwpun˘
),

98 
	m_ISwÆnum
 = 
_ISwbô
 (
__ISwÆnum
)

103 
__BEGIN_DECLS


105 
__BEGIN_NAMESPACE_C99


112 
	$iswÆnum
 (
wöt_t
 
__wc
Ë
__THROW
;

118 
	$iswÆpha
 (
wöt_t
 
__wc
Ë
__THROW
;

121 
	$isw˙ål
 (
wöt_t
 
__wc
Ë
__THROW
;

125 
	$iswdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

129 
	$iswgøph
 (
wöt_t
 
__wc
Ë
__THROW
;

134 
	$iswlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

137 
	$isw¥öt
 (
wöt_t
 
__wc
Ë
__THROW
;

142 
	$iswpun˘
 (
wöt_t
 
__wc
Ë
__THROW
;

147 
	$isw•a˚
 (
wöt_t
 
__wc
Ë
__THROW
;

152 
	$iswuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

157 
	$iswxdigô
 (
wöt_t
 
__wc
Ë
__THROW
;

162 #ifde‡
__USE_ISOC99


163 
	$iswbœnk
 (
wöt_t
 
__wc
Ë
__THROW
;

172 
w˘y≥_t
 
	$w˘y≥
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

176 
	$isw˘y≥
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
Ë
__THROW
;

177 
__END_NAMESPACE_C99


184 
__BEGIN_NAMESPACE_C99


187 
__c⁄°
 
	t__öt32_t
 *
	tw˘øns_t
;

188 
__END_NAMESPACE_C99


189 #ifde‡
__USE_GNU


190 
	$__USING_NAMESPACE_C99
(
w˘øns_t
)

193 
__BEGIN_NAMESPACE_C99


195 
wöt_t
 
	$towlowî
 (
wöt_t
 
__wc
Ë
__THROW
;

198 
wöt_t
 
	$towuµî
 (
wöt_t
 
__wc
Ë
__THROW
;

199 
__END_NAMESPACE_C99


201 
__END_DECLS


208 #ifde‡
_WCTYPE_H


214 
__BEGIN_DECLS


216 
__BEGIN_NAMESPACE_C99


219 
w˘øns_t
 
	$w˘øns
 (
__c⁄°
 *
__¥›îty
Ë
__THROW
;

222 
wöt_t
 
	$tow˘øns
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
Ë
__THROW
;

223 
__END_NAMESPACE_C99


225 #ifde‡
__USE_XOPEN2K8


227 
	~<xloˇÀ.h
>

231 
	$iswÆnum_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

237 
	$iswÆpha_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

240 
	$isw˙ål_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

244 
	$iswdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

248 
	$iswgøph_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

253 
	$iswlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

256 
	$isw¥öt_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

261 
	$iswpun˘_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

266 
	$isw•a˚_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

271 
	$iswuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

276 
	$iswxdigô_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

281 
	$iswbœnk_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

285 
w˘y≥_t
 
	$w˘y≥_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

286 
__THROW
;

290 
	$isw˘y≥_l
 (
wöt_t
 
__wc
, 
w˘y≥_t
 
__desc
, 
__loˇÀ_t
 
__loˇÀ
)

291 
__THROW
;

299 
wöt_t
 
	$towlowî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

302 
wöt_t
 
	$towuµî_l
 (
wöt_t
 
__wc
, 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

306 
w˘øns_t
 
	$w˘øns_l
 (
__c⁄°
 *
__¥›îty
, 
__loˇÀ_t
 
__loˇÀ
)

307 
__THROW
;

310 
wöt_t
 
	$tow˘øns_l
 (
wöt_t
 
__wc
, 
w˘øns_t
 
__desc
,

311 
__loˇÀ_t
 
__loˇÀ
Ë
__THROW
;

315 
__END_DECLS


	@/usr/include/asm-generic/errno-base.h

1 #i‚de‡
_ASM_GENERIC_ERRNO_BASE_H


2 
	#_ASM_GENERIC_ERRNO_BASE_H


	)

4 
	#EPERM
 1

	)

5 
	#ENOENT
 2

	)

6 
	#ESRCH
 3

	)

7 
	#EINTR
 4

	)

8 
	#EIO
 5

	)

9 
	#ENXIO
 6

	)

10 
	#E2BIG
 7

	)

11 
	#ENOEXEC
 8

	)

12 
	#EBADF
 9

	)

13 
	#ECHILD
 10

	)

14 
	#EAGAIN
 11

	)

15 
	#ENOMEM
 12

	)

16 
	#EACCES
 13

	)

17 
	#EFAULT
 14

	)

18 
	#ENOTBLK
 15

	)

19 
	#EBUSY
 16

	)

20 
	#EEXIST
 17

	)

21 
	#EXDEV
 18

	)

22 
	#ENODEV
 19

	)

23 
	#ENOTDIR
 20

	)

24 
	#EISDIR
 21

	)

25 
	#EINVAL
 22

	)

26 
	#ENFILE
 23

	)

27 
	#EMFILE
 24

	)

28 
	#ENOTTY
 25

	)

29 
	#ETXTBSY
 26

	)

30 
	#EFBIG
 27

	)

31 
	#ENOSPC
 28

	)

32 
	#ESPIPE
 29

	)

33 
	#EROFS
 30

	)

34 
	#EMLINK
 31

	)

35 
	#EPIPE
 32

	)

36 
	#EDOM
 33

	)

37 
	#ERANGE
 34

	)

	@/usr/include/asm-generic/int-ll64.h

8 #i‚de‡
_ASM_GENERIC_INT_LL64_H


9 
	#_ASM_GENERIC_INT_LL64_H


	)

11 
	~<asm/bô•îl⁄g.h
>

13 #i‚de‡
__ASSEMBLY__


19 
__sig√d__
 
	t__s8
;

20 
	t__u8
;

22 
__sig√d__
 
	t__s16
;

23 
	t__u16
;

25 
__sig√d__
 
	t__s32
;

26 
	t__u32
;

28 #ifde‡
__GNUC__


29 
__exãnsi⁄__
 
__sig√d__
 
	t__s64
;

30 
__exãnsi⁄__
 
	t__u64
;

32 
__sig√d__
 
	t__s64
;

33 
	t__u64
;

	@/usr/include/bits/setjmp.h

20 #i‚de‡
_BITS_SETJMP_H


21 
	#_BITS_SETJMP_H
 1

	)

23 #i‡!
deföed
 
_SETJMP_H
 && !deföed 
_PTHREAD_H


27 
	~<bôs/w‹dsize.h
>

29 #i‚de‡
_ASM


31 #i‡
__WORDSIZE
 == 64

32 
	t__jmp_buf
[8];

34 
	t__jmp_buf
[6];

	@/usr/include/asm/bitsperlong.h

1 #i‚de‡
__ASM_X86_BITSPERLONG_H


2 
	#__ASM_X86_BITSPERLONG_H


	)

4 #ifde‡
__x86_64__


5 
	#__BITS_PER_LONG
 64

	)

7 
	#__BITS_PER_LONG
 32

	)

10 
	~<asm-gíîic/bô•îl⁄g.h
>

	@/usr/include/asm-generic/bitsperlong.h

1 #i‚de‡
__ASM_GENERIC_BITS_PER_LONG


2 
	#__ASM_GENERIC_BITS_PER_LONG


	)

11 #i‚de‡
__BITS_PER_LONG


12 
	#__BITS_PER_LONG
 32

	)

	@
1
.
1
/usr/include
124
2878
binheap.c
binheap.h
eigs.c
eigs.h
gmm.c
gmm.h
hkm.c
hkm.h
kmeans.c
kmeans.h
kmlsh.c
kmlsh.h
machinedeps.c
machinedeps.h
matrix.c
matrix.h
nn.c
nn.h
sorting.c
sorting.h
spectral_clustering.c
spectral_clustering.h
vector.c
vector.h
vlad.c
vlad.h
/usr/include/assert.h
/usr/include/errno.h
/usr/include/fcntl.h
/usr/include/malloc.h
/usr/include/math.h
/usr/include/sched.h
/usr/include/stdio.h
/usr/include/stdlib.h
/usr/include/string.h
/usr/include/sys/mman.h
/usr/include/sys/stat.h
/usr/include/sys/sysctl.h
/usr/include/sys/time.h
/usr/include/sys/types.h
/usr/include/unistd.h
/usr/include/alloca.h
/usr/include/bits/confname.h
/usr/include/bits/environments.h
/usr/include/bits/errno.h
/usr/include/bits/fcntl.h
/usr/include/bits/fcntl2.h
/usr/include/bits/huge_val.h
/usr/include/bits/huge_valf.h
/usr/include/bits/huge_vall.h
/usr/include/bits/inf.h
/usr/include/bits/math-finite.h
/usr/include/bits/mathcalls.h
/usr/include/bits/mathdef.h
/usr/include/bits/mathinline.h
/usr/include/bits/mman.h
/usr/include/bits/nan.h
/usr/include/bits/posix_opt.h
/usr/include/bits/pthreadtypes.h
/usr/include/bits/sched.h
/usr/include/bits/stat.h
/usr/include/bits/stdio-ldbl.h
/usr/include/bits/stdio.h
/usr/include/bits/stdio2.h
/usr/include/bits/stdio_lim.h
/usr/include/bits/stdlib-ldbl.h
/usr/include/bits/stdlib.h
/usr/include/bits/string.h
/usr/include/bits/string2.h
/usr/include/bits/string3.h
/usr/include/bits/sys_errlist.h
/usr/include/bits/time.h
/usr/include/bits/types.h
/usr/include/bits/unistd.h
/usr/include/bits/waitflags.h
/usr/include/bits/waitstatus.h
/usr/include/endian.h
/usr/include/features.h
/usr/include/getopt.h
/usr/include/libio.h
/usr/include/linux/sysctl.h
/usr/include/sys/select.h
/usr/include/sys/sysmacros.h
/usr/include/time.h
/usr/include/xlocale.h
/usr/include/_G_config.h
/usr/include/bits/byteswap.h
/usr/include/bits/endian.h
/usr/include/bits/libio-ldbl.h
/usr/include/bits/select.h
/usr/include/bits/select2.h
/usr/include/bits/sigset.h
/usr/include/bits/stdio-lock.h
/usr/include/bits/timex.h
/usr/include/bits/typesizes.h
/usr/include/bits/uio.h
/usr/include/bits/wordsize.h
/usr/include/ctype.h
/usr/include/gnu/stubs.h
/usr/include/linux/errno.h
/usr/include/linux/kernel.h
/usr/include/linux/types.h
/usr/include/sys/cdefs.h
/usr/include/asm/errno.h
/usr/include/asm/types.h
/usr/include/bits/libc-lock.h
/usr/include/gconv.h
/usr/include/gnu/stubs-64.h
/usr/include/linux/posix_types.h
/usr/include/wchar.h
/usr/include/asm-generic/errno.h
/usr/include/asm-generic/types.h
/usr/include/asm/posix_types.h
/usr/include/bits/wchar-ldbl.h
/usr/include/bits/wchar.h
/usr/include/bits/wchar2.h
/usr/include/linux/stddef.h
/usr/include/pthread.h
/usr/include/wctype.h
/usr/include/asm-generic/errno-base.h
/usr/include/asm-generic/int-ll64.h
/usr/include/bits/setjmp.h
/usr/include/asm/bitsperlong.h
/usr/include/asm-generic/bitsperlong.h
